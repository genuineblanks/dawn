<!doctype html>
<html class="no-js{% if settings.animations_hover_elements != 'none' %} animate--hover-{{ settings.animations_hover_elements }}{% endif %}" lang="{{ request.locale.iso_code }}" dir="{{ settings.text_direction }}">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="theme-color" content="">
    <link rel="canonical" href="{{ canonical_url }}">

    {%- if settings.favicon != blank -%}
      <link rel="icon" type="image/png" href="{{ settings.favicon | image_url: width: 32, height: 32 }}">
    {%- endif -%}

    {%- unless settings.type_header_font.system? and settings.type_body_font.system? -%}
      <link rel="preconnect" href="https://fonts.shopifycdn.com" crossorigin>
    {%- endunless -%}

    <title>
      {{ page_title }}
      {%- if current_tags %} &ndash; {{ 'blogs.article.tagged' | t }}{% for tag in current_tags %} {{ tag }}{% unless forloop.last %},{% endunless %}{% endfor %}{% endif -%}
      {%- if current_page != 1 %} &ndash; {{ 'general.page' | t: page: current_page }}{% endif -%}
      {%- unless page_title contains shop.name %} &ndash; {{ shop.name }}{% endunless -%}
    </title>

    {% if page_description %}
      <meta name="description" content="{{ page_description | escape }}">
    {% endif %}

    {% render 'meta-tags' %}

    <!-- CRITICAL: Load jQuery FIRST - Required for scroll system -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    
    <!-- NUCLEAR MOBILE DETECTION SCRIPT -->
    <script>
      window.isMobileDevice = function() {
        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ||
               (navigator.maxTouchPoints && navigator.maxTouchPoints > 2) ||
               window.innerWidth <= 768;
      };
      
      window.isIOS = function() {
        return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
      };
      
      // NUCLEAR FIX: Add mobile class and force native scrolling
      if (window.isMobileDevice()) {
        console.log('📱 NUCLEAR MOBILE FIX: Mobile device detected in theme.liquid');
        document.documentElement.classList.add('mobile-device');
        if (window.isIOS()) {
          document.documentElement.classList.add('ios-device');
        }
        
        // Force optimal mobile scrolling settings
        document.documentElement.style.cssText += 'scroll-behavior: auto !important; overflow: auto !important;';
        document.body.style.cssText += 'overflow: auto !important; touch-action: pan-y !important; overscroll-behavior: none !important;';
      }
    </script>
    
    <!-- Core Shopify scripts -->
    <script src="{{ 'constants.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'pubsub.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'global.js' | asset_url }}" defer="defer"></script>
    {%- if settings.animations_reveal_on_scroll -%}
      <script src="{{ 'animations.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}
    
    {{ content_for_header }}

    {%- liquid
      assign body_font_bold = settings.type_body_font | font_modify: 'weight', 'bold'
      assign body_font_italic = settings.type_body_font | font_modify: 'style', 'italic'
      assign body_font_bold_italic = body_font_bold | font_modify: 'style', 'italic'
    %}

    {% style %}
      {{ settings.type_body_font | font_face: font_display: 'swap' }}
      {{ body_font_bold | font_face: font_display: 'swap' }}
      {{ body_font_italic | font_face: font_display: 'swap' }}
      {{ body_font_bold_italic | font_face: font_display: 'swap' }}
      {{ settings.type_header_font | font_face: font_display: 'swap' }}

      {% for scheme in settings.color_schemes -%}
        {% assign scheme_classes = scheme_classes | append: ', .color-' | append: scheme.id %}
        {% if forloop.index == 1 -%}
          :root,
        {%- endif %}
        .color-{{ scheme.id }} {
          --color-background: {{ scheme.settings.background.red }},{{ scheme.settings.background.green }},{{ scheme.settings.background.blue }};
        {% if scheme.settings.background_gradient != empty %}
          --gradient-background: {{ scheme.settings.background_gradient }};
        {% else %}
          --gradient-background: {{ scheme.settings.background }};
        {% endif %}

        {% liquid
          assign background_color = scheme.settings.background
          assign background_color_brightness = background_color | color_brightness
          if background_color_brightness <= 26
            assign background_color_contrast = background_color | color_lighten: 50
          elsif background_color_brightness <= 65
            assign background_color_contrast = background_color | color_lighten: 5
          else
            assign background_color_contrast = background_color | color_darken: 25
          endif
        %}

        --color-foreground: {{ scheme.settings.text.red }},{{ scheme.settings.text.green }},{{ scheme.settings.text.blue }};
        --color-background-contrast: {{ background_color_contrast.red }},{{ background_color_contrast.green }},{{ background_color_contrast.blue }};
        --color-shadow: {{ scheme.settings.shadow.red }},{{ scheme.settings.shadow.green }},{{ scheme.settings.shadow.blue }};
        --color-button: {{ scheme.settings.button.red }},{{ scheme.settings.button.green }},{{ scheme.settings.button.blue }};
        --color-button-text: {{ scheme.settings.button_label.red }},{{ scheme.settings.button_label.green }},{{ scheme.settings.button_label.blue }};
        --color-secondary-button: {{ scheme.settings.background.red }},{{ scheme.settings.background.green }},{{ scheme.settings.background.blue }};
        --color-secondary-button-text: {{ scheme.settings.secondary_button_label.red }},{{ scheme.settings.secondary_button_label.green }},{{ scheme.settings.secondary_button_label.blue }};
        --color-link: {{ scheme.settings.secondary_button_label.red }},{{ scheme.settings.secondary_button_label.green }},{{ scheme.settings.secondary_button_label.blue }};
        --color-badge-foreground: {{ scheme.settings.text.red }},{{ scheme.settings.text.green }},{{ scheme.settings.text.blue }};
        --color-badge-background: {{ scheme.settings.background.red }},{{ scheme.settings.background.green }},{{ scheme.settings.background.blue }};
        --color-badge-border: {{ scheme.settings.text.red }},{{ scheme.settings.text.green }},{{ scheme.settings.text.blue }};
        --payment-terms-background-color: {{ scheme.settings.background | color_modify: 'alpha', 0.1 }};
      }
      {% endfor %}

      {{ scheme_classes | prepend: 'body' }} {
        color: rgba(var(--color-foreground), 0.75);
        background-color: rgb(var(--color-background));
      }

      :root {
        --font-body-family: {{ settings.type_body_font.family }}, {{ settings.type_body_font.fallback_families }};
        --font-body-style: {{ settings.type_body_font.style }};
        --font-body-weight: {{ settings.type_body_font.weight }};
        --font-body-weight-bold: {{ settings.type_body_font.weight | plus: 300 | at_most: 1000 }};

        --font-heading-family: {{ settings.type_header_font.family }}, {{ settings.type_header_font.fallback_families }};
        --font-heading-style: {{ settings.type_header_font.style }};
        --font-heading-weight: {{ settings.type_header_font.weight }};

        --font-body-scale: {{ settings.body_scale | divided_by: 100.0 }};
        --font-heading-scale: {{ settings.heading_scale | times: 1.0 | divided_by: settings.body_scale }};

        --media-padding: {{ settings.media_padding }}px;
        --media-border-opacity: {{ settings.media_border_opacity | divided_by: 100.0 }};
        --media-border-width: {{ settings.media_border_thickness }}px;
        --media-radius: {{ settings.media_radius }}px;
        --media-shadow-opacity: {{ settings.media_shadow_opacity | divided_by: 100.0 }};
        --media-shadow-horizontal-offset: {{ settings.media_shadow_horizontal_offset }}px;
        --media-shadow-vertical-offset: {{ settings.media_shadow_vertical_offset }}px;
        --media-shadow-blur-radius: {{ settings.media_shadow_blur }}px;
        --media-shadow-visible: {% if settings.media_shadow_opacity > 0 %}1{% else %}0{% endif %};

        --page-width: {{ settings.page_width | divided_by: 10 }}rem;
        --page-width-margin: {% if settings.page_width == '1600' %}2{% else %}0{% endif %}rem;

        --product-card-image-padding: {{ settings.card_image_padding | divided_by: 10.0 }}rem;
        --product-card-corner-radius: {{ settings.card_corner_radius | divided_by: 10.0 }}rem;
        --product-card-text-alignment: {{ settings.card_text_alignment }};
        --product-card-border-width: {{ settings.card_border_thickness | divided_by: 10.0 }}rem;
        --product-card-border-opacity: {{ settings.card_border_opacity | divided_by: 100.0 }};
        --product-card-shadow-opacity: {{ settings.card_shadow_opacity | divided_by: 100.0 }};
        --product-card-shadow-visible: {% if settings.card_shadow_opacity > 0 %}1{% else %}0{% endif %};
        --product-card-shadow-horizontal-offset: {{ settings.card_shadow_horizontal_offset | divided_by: 10.0 }}rem;
        --product-card-shadow-vertical-offset: {{ settings.card_shadow_vertical_offset | divided_by: 10.0 }}rem;
        --product-card-shadow-blur-radius: {{ settings.card_shadow_blur | divided_by: 10.0 }}rem;

        --collection-card-image-padding: {{ settings.collection_card_image_padding | divided_by: 10.0 }}rem;
        --collection-card-corner-radius: {{ settings.collection_card_corner_radius | divided_by: 10.0 }}rem;
        --collection-card-text-alignment: {{ settings.collection_card_text_alignment }};
        --collection-card-border-width: {{ settings.collection_card_border_thickness | divided_by: 10.0 }}rem;
        --collection-card-border-opacity: {{ settings.collection_card_border_opacity | divided_by: 100.0 }};
        --collection-card-shadow-opacity: {{ settings.collection_card_shadow_opacity | divided_by: 100.0 }};
        --collection-card-shadow-visible: {% if settings.collection_card_shadow_opacity > 0 %}1{% else %}0{% endif %};
        --collection-card-shadow-horizontal-offset: {{ settings.collection_card_shadow_horizontal_offset | divided_by: 10.0 }}rem;
        --collection-card-shadow-vertical-offset: {{ settings.collection_card_shadow_vertical_offset | divided_by: 10.0 }}rem;
        --collection-card-shadow-blur-radius: {{ settings.collection_card_shadow_blur | divided_by: 10.0 }}rem;

        --blog-card-image-padding: {{ settings.blog_card_image_padding | divided_by: 10.0 }}rem;
        --blog-card-corner-radius: {{ settings.blog_card_corner_radius | divided_by: 10.0 }}rem;
        --blog-card-text-alignment: {{ settings.blog_card_text_alignment }};
        --blog-card-border-width: {{ settings.blog_card_border_thickness | divided_by: 10.0 }}rem;
        --blog-card-border-opacity: {{ settings.blog_card_border_opacity | divided_by: 100.0 }};
        --blog-card-shadow-opacity: {{ settings.blog_card_shadow_opacity | divided_by: 100.0 }};
        --blog-card-shadow-visible: {% if settings.blog_card_shadow_opacity > 0 %}1{% else %}0{% endif %};
        --blog-card-shadow-horizontal-offset: {{ settings.blog_card_shadow_horizontal_offset | divided_by: 10.0 }}rem;
        --blog-card-shadow-vertical-offset: {{ settings.blog_card_shadow_vertical_offset | divided_by: 10.0 }}rem;
        --blog-card-shadow-blur-radius: {{ settings.blog_card_shadow_blur | divided_by: 10.0 }}rem;

        --badge-corner-radius: {{ settings.badge_corner_radius | divided_by: 10.0 }}rem;

        --popup-border-width: {{ settings.popup_border_thickness }}px;
        --popup-border-opacity: {{ settings.popup_border_opacity | divided_by: 100.0 }};
        --popup-corner-radius: {{ settings.popup_corner_radius }}px;
        --popup-shadow-opacity: {{ settings.popup_shadow_opacity | divided_by: 100.0 }};
        --popup-shadow-horizontal-offset: {{ settings.popup_shadow_horizontal_offset }}px;
        --popup-shadow-vertical-offset: {{ settings.popup_shadow_vertical_offset }}px;
        --popup-shadow-blur-radius: {{ settings.popup_shadow_blur }}px;

        --drawer-border-width: {{ settings.drawer_border_thickness }}px;
        --drawer-border-opacity: {{ settings.drawer_border_opacity | divided_by: 100.0 }};
        --drawer-shadow-opacity: {{ settings.drawer_shadow_opacity | divided_by: 100.0 }};
        --drawer-shadow-horizontal-offset: {{ settings.drawer_shadow_horizontal_offset }}px;
        --drawer-shadow-vertical-offset: {{ settings.drawer_shadow_vertical_offset }}px;
        --drawer-shadow-blur-radius: {{ settings.drawer_shadow_blur }}px;

        --spacing-sections-desktop: {{ settings.spacing_sections }}px;
        --spacing-sections-mobile: {% if settings.spacing_sections < 24 %}{{ settings.spacing_sections }}{% else %}{{ settings.spacing_sections | times: 0.7 | round | at_least: 20 }}{% endif %}px;

        --grid-desktop-vertical-spacing: {{ settings.spacing_grid_vertical }}px;
        --grid-desktop-horizontal-spacing: {{ settings.spacing_grid_horizontal }}px;
        --grid-mobile-vertical-spacing: {{ settings.spacing_grid_vertical | divided_by: 2 }}px;
        --grid-mobile-horizontal-spacing: {{ settings.spacing_grid_horizontal | divided_by: 2 }}px;

        --text-boxes-border-opacity: {{ settings.text_boxes_border_opacity | divided_by: 100.0 }};
        --text-boxes-border-width: {{ settings.text_boxes_border_thickness }}px;
        --text-boxes-radius: {{ settings.text_boxes_radius }}px;
        --text-boxes-shadow-opacity: {{ settings.text_boxes_shadow_opacity | divided_by: 100.0 }};
        --text-boxes-shadow-visible: {% if settings.text_boxes_shadow_opacity > 0 %}1{% else %}0{% endif %};
        --text-boxes-shadow-horizontal-offset: {{ settings.text_boxes_shadow_horizontal_offset }}px;
        --text-boxes-shadow-vertical-offset: {{ settings.text_boxes_shadow_vertical_offset }}px;
        --text-boxes-shadow-blur-radius: {{ settings.text_boxes_shadow_blur }}px;

        --buttons-radius: {{ settings.buttons_radius }}px;
        --buttons-radius-outset: {% if settings.buttons_radius > 0 %}{{ settings.buttons_radius | plus: settings.buttons_border_thickness }}{% else %}0{% endif %}px;
        --buttons-border-width: {{ settings.buttons_border_thickness }}px;
        --buttons-border-opacity: {{ settings.buttons_border_opacity | divided_by: 100.0 }};
        --buttons-shadow-opacity: {{ settings.buttons_shadow_opacity | divided_by: 100.0 }};
        --buttons-shadow-visible: {% if settings.buttons_shadow_opacity > 0 %}1{% else %}0{% endif %};
        --buttons-shadow-horizontal-offset: {{ settings.buttons_shadow_horizontal_offset }}px;
        --buttons-shadow-vertical-offset: {{ settings.buttons_shadow_vertical_offset }}px;
        --buttons-shadow-blur-radius: {{ settings.buttons_shadow_blur }}px;
        --buttons-border-offset: {% if settings.buttons_radius > 0 or settings.buttons_shadow_opacity > 0 %}0.3{% else %}0{% endif %}px;

        --inputs-radius: {{ settings.inputs_radius }}px;
        --inputs-border-width: {{ settings.inputs_border_thickness }}px;
        --inputs-border-opacity: {{ settings.inputs_border_opacity | divided_by: 100.0 }};
        --inputs-shadow-opacity: {{ settings.inputs_shadow_opacity | divided_by: 100.0 }};
        --inputs-shadow-horizontal-offset: {{ settings.inputs_shadow_horizontal_offset }}px;
        --inputs-margin-offset: {% if settings.inputs_shadow_vertical_offset != 0 and settings.inputs_shadow_opacity > 0 %}{{ settings.inputs_shadow_vertical_offset | abs }}{% else %}0{% endif %}px;
        --inputs-shadow-vertical-offset: {{ settings.inputs_shadow_vertical_offset }}px;
        --inputs-shadow-blur-radius: {{ settings.inputs_shadow_blur }}px;
        --inputs-radius-outset: {% if settings.inputs_radius > 0 %}{{ settings.inputs_radius | plus: settings.inputs_border_thickness }}{% else %}0{% endif %}px;

        --variant-pills-radius: {{ settings.variant_pills_radius }}px;
        --variant-pills-border-width: {{ settings.variant_pills_border_thickness }}px;
        --variant-pills-border-opacity: {{ settings.variant_pills_border_opacity | divided_by: 100.0 }};
        --variant-pills-shadow-opacity: {{ settings.variant_pills_shadow_opacity | divided_by: 100.0 }};
        --variant-pills-shadow-horizontal-offset: {{ settings.variant_pills_shadow_horizontal_offset }}px;
        --variant-pills-shadow-vertical-offset: {{ settings.variant_pills_shadow_vertical_offset }}px;
        --variant-pills-shadow-blur-radius: {{ settings.variant_pills_shadow_blur }}px;
      }

      *,
      *::before,
      *::after {
        box-sizing: inherit;
      }

      html {
        box-sizing: border-box;
        font-size: calc(var(--font-body-scale) * 62.5%);
        height: 100%;
      }

      body {
        display: grid;
        grid-template-rows: auto auto 1fr auto;
        grid-template-columns: 100%;
        min-height: 100%;
        margin: 0;
        font-size: 1.5rem;
        letter-spacing: 0.06rem;
        line-height: calc(1 + 0.8 / var(--font-body-scale));
        font-family: var(--font-body-family);
        font-style: var(--font-body-style);
        font-weight: var(--font-body-weight);
      }

      @media screen and (min-width: 750px) {
        body {
          font-size: 1.6rem;
        }
      }
    {% endstyle %}

    {{ 'base.css' | asset_url | stylesheet_tag }}
    {{ 'custom.css' | asset_url | stylesheet_tag }}
    {{ 'responsive.css' | asset_url | stylesheet_tag }}
    {{ 'premium-enhancements.css' | asset_url | stylesheet_tag }}
    {{ 'scroll-button.css' | asset_url | stylesheet_tag }}

    {%- unless settings.type_body_font.system? -%}
      <link rel="preload" as="font" href="{{ settings.type_body_font | font_url }}" type="font/woff2" crossorigin>
    {%- endunless -%}
    {%- unless settings.type_header_font.system? -%}
      <link rel="preload" as="font" href="{{ settings.type_header_font | font_url }}" type="font/woff2" crossorigin>
    {%- endunless -%}

    {%- if localization.available_countries.size > 1 or localization.available_languages.size > 1 -%}
      {{ 'component-localization-form.css' | asset_url | stylesheet_tag: preload: true }}
      <script src="{{ 'localization-form.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}

    {%- if settings.predictive_search_enabled -%}
      <link
        rel="stylesheet"
        href="{{ 'component-predictive-search.css' | asset_url }}"
        media="print"
        onload="this.media='all'"
      >
    {%- endif -%}

    <script>
      document.documentElement.className = document.documentElement.className.replace('no-js', 'js');
      if (Shopify.designMode) {
        document.documentElement.classList.add('shopify-design-mode');
      }
    </script>

    {{ 'wholesale.css' | asset_url | stylesheet_tag }}
    {{ 'techpack-app.css' | asset_url | stylesheet_tag }}
  </head>

  <body class="{% if template contains 'bss-b2b-wholesaler-22949' %}wholesale-form{% endif %} {% if template contains 'index' %}home-section{% endif %} gradient{% if settings.animations_hover_elements != 'none' %} animate--hover-{{ settings.animations_hover_elements }}{% endif %}">
    <a class="skip-to-content-link button visually-hidden" href="#MainContent">
      {{ 'accessibility.skip_to_text' | t }}
    </a>

    {%- if settings.cart_type == 'drawer' -%}
      {%- render 'cart-drawer' -%}
    {%- endif -%}
    {% unless template contains 'index' %}
      {% sections 'header-group' %}
    {% endunless %}
    <main id="MainContent" class="content-for-layout focus-none" role="main" tabindex="-1">
      {{ content_for_layout }}
    </main>
    {% unless template contains 'index' %}
      {%- comment -%} Wholesale Inquiry Modal goes here {%- endcomment -%}
      {% render 'wholesale-modal' %}
      {% sections 'footer-group' %}
    {% endunless %}
    <ul hidden>
      <li id="a11y-refresh-page-message">{{ 'accessibility.refresh_page' | t }}</li>
      <li id="a11y-new-window-message">{{ 'accessibility.link_messages.new_window' | t }}</li>
    </ul>

    <script>
      window.shopUrl = '{{ request.origin }}';
      window.routes = {
        cart_add_url: '{{ routes.cart_add_url }}',
        cart_change_url: '{{ routes.cart_change_url }}',
        cart_update_url: '{{ routes.cart_update_url }}',
        cart_url: '{{ routes.cart_url }}',
        predictive_search_url: '{{ routes.predictive_search_url }}'
      };

      window.cartStrings = {
        error: `{{ 'sections.cart.cart_error' | t }}`,
        quantityError: `{{ 'sections.cart.cart_quantity_error_html' | t: quantity: '[quantity]' }}`
      }

      window.variantStrings = {
        addToCart: `{{ 'products.product.add_to_cart' | t }}`,
        soldOut: `{{ 'products.product.sold_out' | t }}`,
        unavailable: `{{ 'products.product.unavailable' | t }}`,
        unavailable_with_option: `{{ 'products.product.value_unavailable' | t: option_value: '[value]' }}`,
      }

      window.accessibilityStrings = {
        imageAvailable: `{{ 'products.product.media.image_available' | t: index: '[index]' }}`,
        shareSuccess: `{{ 'general.share.success_message' | t }}`,
        pauseSlideshow: `{{ 'sections.slideshow.pause_slideshow' | t }}`,
        playSlideshow: `{{ 'sections.slideshow.play_slideshow' | t }}`,
      }
    </script>

    {%- if settings.predictive_search_enabled -%}
      <script src="{{ 'predictive-search.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}

    <!-- CLICKABLE CARDS SCRIPT -->
    <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Make entire product cards clickable
      const productCards = document.querySelectorAll('.card-wrapper, .product-card-wrapper');
      
      productCards.forEach(function(card) {
        const link = card.querySelector('.card__heading a, .full-unstyled-link');
        
        if (link) {
          card.style.cursor = 'pointer';
          
          card.addEventListener('click', function(e) {
            // Prevent double-click if clicking on the actual link
            if (e.target.tagName !== 'A') {
              window.location.href = link.href;
            }
          });
        }
      });
    });
    </script>
    <!-- END CLICKABLE CARDS SCRIPT -->

    <!-- PREMIUM SCROLL EFFECTS SCRIPT -->
    <script>
    // ===============================================
    // PREMIUM SCROLL EFFECTS JAVASCRIPT
    // Works with existing scroll-to-section system
    // ===============================================
    
    document.addEventListener('DOMContentLoaded', function() {
      
      // ===============================================
      // SCROLL PROGRESS BAR - DISABLED ON MOBILE
      // ===============================================
      function createScrollProgress() {
        // NUCLEAR FIX: Skip on mobile devices
        if (window.isMobileDevice && window.isMobileDevice()) {
          console.log('📱 Skipping scroll progress on mobile');
          return;
        }
        
        const progressBar = document.createElement('div');
        progressBar.className = 'scroll-progress';
        document.body.appendChild(progressBar);
        
        function updateProgress() {
          const scrolled = (window.pageYOffset / (document.documentElement.scrollHeight - window.innerHeight)) * 100;
          progressBar.style.width = scrolled + '%';
        }
        
        window.addEventListener('scroll', updateProgress);
        updateProgress();
      }
      
      // ===============================================
      // SCROLL INDICATORS (DOT NAVIGATION) - DISABLED ON MOBILE
      // ===============================================
      function createScrollIndicators() {
        // NUCLEAR FIX: Skip on mobile devices
        if (window.isMobileDevice && window.isMobileDevice()) {
          console.log('📱 Skipping scroll indicators on mobile');
          return;
        }
        
        const sections = document.querySelectorAll('.section, .shopify-section');
        if (sections.length <= 1) return;
        
        const indicators = document.createElement('div');
        indicators.className = 'scroll-indicators';
        
        sections.forEach((section, index) => {
          const indicator = document.createElement('div');
          indicator.className = 'scroll-indicator';
          indicator.setAttribute('data-section', index);
          
          indicator.addEventListener('click', () => {
            section.scrollIntoView({ behavior: 'smooth' });
          });
          
          indicators.appendChild(indicator);
        });
        
        document.body.appendChild(indicators);
        
        // Update active indicator on scroll - DESKTOP ONLY
        function updateActiveIndicator() {
          const scrollPosition = window.pageYOffset + window.innerHeight / 2;
          
          sections.forEach((section, index) => {
            const sectionTop = section.offsetTop;
            const sectionBottom = sectionTop + section.offsetHeight;
            const indicator = indicators.children[index];
            
            if (scrollPosition >= sectionTop && scrollPosition <= sectionBottom) {
              indicator.classList.add('active');
            } else {
              indicator.classList.remove('active');
            }
          });
        }
        
        window.addEventListener('scroll', updateActiveIndicator);
        updateActiveIndicator();
      }
      
      // ===============================================
      // FLOATING PARTICLES
      // ===============================================
      function createFloatingElements() {
        const container = document.createElement('div');
        container.className = 'floating-elements';
        
        for (let i = 0; i < 4; i++) {
          const shape = document.createElement('div');
          shape.className = 'floating-shape';
          container.appendChild(shape);
        }
        
        document.body.appendChild(container);
      }
      
      // ===============================================
      // ENHANCED PRODUCT GRID ANIMATIONS
      // ===============================================
      function animateProductGrids() {
        const productGrids = document.querySelectorAll('.product-grid, .collection-grid');
        
        const observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              entry.target.classList.add('animate-in');
              
              // Stagger animation for grid items
              const items = entry.target.querySelectorAll('.grid__item');
              items.forEach((item, index) => {
                setTimeout(() => {
                  item.style.opacity = '1';
                  item.style.transform = 'translateY(0)';
                }, index * 100);
              });
            }
          });
        }, {
          threshold: 0.1,
          rootMargin: '50px'
        });
        
        productGrids.forEach(grid => observer.observe(grid));
      }
      
      // ===============================================
      // SECTION REVEAL ANIMATIONS
      // ===============================================
      function animateSections() {
        const sections = document.querySelectorAll('.section, .shopify-section');
        
        const observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              entry.target.classList.add('animate-in');
            }
          });
        }, {
          threshold: 0.1,
          rootMargin: '50px'
        });
        
        sections.forEach(section => observer.observe(section));
      }
      
      // ===============================================
      // PARALLAX EFFECT FOR HERO SECTIONS - DISABLED ON MOBILE
      // ===============================================
      function initParallax() {
        // NUCLEAR FIX: Skip on mobile devices
        if (window.isMobileDevice && window.isMobileDevice()) {
          console.log('📱 Skipping parallax on mobile');
          return;
        }
        
        const heroSections = document.querySelectorAll('.hero-section, .banner-section, [data-section-type="hero"]');
        
        function updateParallax() {
          const scrolled = window.pageYOffset;
          
          heroSections.forEach(section => {
            const rate = scrolled * -0.5;
            const bg = section.querySelector('::before') || section;
            if (bg.style) {
              bg.style.transform = `translateY(${rate}px)`;
            }
          });
        }
        
        window.addEventListener('scroll', updateParallax);
      }
      
      // ===============================================
      // ENHANCED PAGE TRANSITIONS - DISABLED ON MOBILE
      // ===============================================
      function enhancePageTransitions() {
        // NUCLEAR FIX: Skip on mobile devices
        if (window.isMobileDevice && window.isMobileDevice()) {
          console.log('📱 Skipping page transitions on mobile');
          return;
        }
        
        // Work with your existing scroll system
        let isScrolling = false;
        
        window.addEventListener('scroll', () => {
          if (!isScrolling) {
            isScrolling = true;
            
            // Add transition class during scroll
            document.body.classList.add('scrolling');
            
            setTimeout(() => {
              isScrolling = false;
              document.body.classList.remove('scrolling');
            }, 150);
          }
        });
      }
      
      // ===============================================
      // LOADING SKELETONS
      // ===============================================
      function createLoadingSkeletons() {
        const productCards = document.querySelectorAll('.product-card-wrapper, .card-wrapper');
        
        productCards.forEach(card => {
          const img = card.querySelector('img');
          if (img && !img.complete) {
            const skeleton = document.createElement('div');
            skeleton.className = 'skeleton skeleton-product';
            img.parentNode.insertBefore(skeleton, img);
            
            img.addEventListener('load', () => {
              skeleton.remove();
            });
          }
        });
      }
      
      // ===============================================
      // INITIALIZE ALL EFFECTS - MOBILE DETECTION
      // ===============================================
      function initAllEffects() {
        // Skip some effects on mobile but allow basic ones
        const isMobile = window.isMobileDevice && window.isMobileDevice();
        
        // Check if user prefers reduced motion
        const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
        
        if (!prefersReducedMotion) {
          // Only skip scroll-interfering effects on mobile
          if (!isMobile) {
            createScrollProgress();
            createScrollIndicators();
            initParallax();
            enhancePageTransitions();
          }
          
          // Allow these on both mobile and desktop
          createFloatingElements();
          animateProductGrids();
          animateSections();
          createLoadingSkeletons();
        }
      }
      
      // Initialize all effects
      initAllEffects();
    });
    </script>

    <script>
    // Fix scroll animations after navigation/refresh
    function reinitializeScrollAnimations() {
      // Re-run the scroll animation initialization
      if (typeof initializeScrollAnimationTrigger === 'function') {
        initializeScrollAnimationTrigger();
      }
      
      // Re-run zoom animations
      if (typeof initializeScrollZoomAnimationTrigger === 'function') {
        initializeScrollZoomAnimationTrigger();
      }
      
      // Reset any offscreen elements
      const offscreenElements = document.querySelectorAll('.scroll-trigger--offscreen');
      offscreenElements.forEach(element => {
        if (element.getBoundingClientRect().top < window.innerHeight) {
          element.classList.remove('scroll-trigger--offscreen');
        }
      });
    }
    
    // Reinitialize on page navigation
    document.addEventListener('shopify:section:load', reinitializeScrollAnimations);
    document.addEventListener('DOMContentLoaded', reinitializeScrollAnimations);
    
    // Fix for theme editor and navigation
    if (Shopify && Shopify.designMode) {
      document.addEventListener('shopify:section:load', () => {
        setTimeout(reinitializeScrollAnimations, 100);
      });
    }
    
    // Additional fix for page visibility changes
    document.addEventListener('visibilitychange', () => {
      if (!document.hidden) {
        setTimeout(reinitializeScrollAnimations, 100);
      }
    });
    </script>

    <script>
    // Enhanced Scroll Restoration and Navigation - HOMEPAGE SPECIFIC
    (function() {
      'use strict';
      
      console.log('🔧 Enhanced scroll restoration loading...');
      
      var isNavigating = false;
      var isHomepage = document.body.classList.contains('home-section');
      
      // Save scroll position for current page
      function saveScrollPosition() {
        const currentPath = window.location.pathname;
        const scrollPos = window.pageYOffset;
        
        try {
          let scrollPositions = JSON.parse(sessionStorage.getItem('shopifyScrollPositions') || '{}');
          
          // Only save homepage scroll positions
          if (isHomepage) {
            scrollPositions[currentPath] = scrollPos;
            sessionStorage.setItem('shopifyScrollPositions', JSON.stringify(scrollPositions));
            console.log('💾 Saved homepage scroll position:', scrollPos, 'for path:', currentPath);
          } else {
            // For non-homepage, always clear saved position
            if (scrollPositions[currentPath]) {
              delete scrollPositions[currentPath];
              sessionStorage.setItem('shopifyScrollPositions', JSON.stringify(scrollPositions));
              console.log('🗑️ Cleared scroll position for non-homepage:', currentPath);
            }
          }
        } catch(e) {
          console.log('❌ Could not save scroll position');
        }
      }
      
      // Restore scroll position for current page
      function restoreScrollPosition() {
        const currentPath = window.location.pathname;
        
        try {
          const scrollPositions = JSON.parse(sessionStorage.getItem('shopifyScrollPositions') || '{}');
          const savedPosition = scrollPositions[currentPath];
          
          if (isHomepage && savedPosition && savedPosition > 0) {
            console.log('📍 Restoring homepage scroll position:', savedPosition, 'for path:', currentPath);
            
            // Use requestAnimationFrame for smoother restoration
            requestAnimationFrame(function() {
              window.scrollTo({
                top: savedPosition,
                behavior: 'instant'
              });
              
              // Update scroll system to match restored position
              setTimeout(function() {
                if (window.scrollSystem && window.scrollSystem.initialized) {
                  window.updateCurrentSectionFromScrollPosition();
                  if (typeof window.updateDotNavigation === 'function') {
                    window.updateDotNavigation();
                  }
                }
              }, 100);
              
              // Clean up old positions after successful restore
              setTimeout(function() {
                const key = Object.keys(scrollPositions).find(k => k !== currentPath && Math.abs(scrollPositions[k] - savedPosition) < 50);
                if (key && scrollPositions[key]) {
                  console.log('🧹 Cleaning up old position for:', key);
                  delete scrollPositions[key];
                  sessionStorage.setItem('shopifyScrollPositions', JSON.stringify(scrollPositions));
                }
              }, 300);
            });
          } else if (!isHomepage) {
            // For non-homepage, always scroll to top
            console.log('📄 Non-homepage detected - scrolling to top');
            window.scrollTo({
              top: 0,
              behavior: 'instant'
            });
          }
        } catch(e) {
          console.log('❌ Could not restore scroll position');
        }
      }
      
      // Force scroll to top on page refresh for non-homepage
      function handlePageRefresh() {
        if (!isHomepage) {
          console.log('🔄 Page refresh on non-homepage - forcing scroll to top');
          window.scrollTo(0, 0);
          // Also clear any saved position for this page
          try {
            let scrollPositions = JSON.parse(sessionStorage.getItem('shopifyScrollPositions') || '{}');
            const currentPath = window.location.pathname;
            if (scrollPositions[currentPath]) {
              delete scrollPositions[currentPath];
              sessionStorage.setItem('shopifyScrollPositions', JSON.stringify(scrollPositions));
            }
          } catch(e) {}
        }
      }
      
      // Save position when leaving page
      window.addEventListener('beforeunload', function() {
        if (!isNavigating) {
          saveScrollPosition();
        }
      });
      
      // Handle page navigation
      window.addEventListener('pageshow', function(event) {
        console.log('📄 Page show event - persisted:', event.persisted, 'isHomepage:', isHomepage);
        
        if (event.persisted) {
          // This is back button navigation
          isNavigating = false;
          restoreScrollPosition();
          
          // Re-initialize scroll system for homepage
          if (isHomepage) {
            setTimeout(function() {
              if (window.scrollSystem && typeof window.resetScrollSystem === 'function') {
                window.resetScrollSystem();
                window.initializeScrollSystem();
              }
            }, 500);
          }
        } else {
          // Fresh page load
          handlePageRefresh();
        }
      });
      
      // Handle initial page load
      function handleInitialLoad() {
        console.log('🏠 Initial page load handling - isHomepage:', isHomepage);
        
        if (isHomepage) {
          // For homepage, try to restore position
          restoreScrollPosition();
        } else {
          // For other pages, always start at top
          window.scrollTo(0, 0);
        }
      }
      
      // Check if page was refreshed (not back/forward navigation)
      const wasRefreshed = performance.navigation && performance.navigation.type === performance.navigation.TYPE_RELOAD;
      if (wasRefreshed && !isHomepage) {
        console.log('🔄 Detected page refresh on non-homepage');
        window.scrollTo(0, 0);
      }
      
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', handleInitialLoad);
      } else {
        handleInitialLoad();
      }
      
      // Mark navigation when clicking internal links
      document.addEventListener('click', function(e) {
        const link = e.target.closest('a');
        if (link && link.href && link.href.includes(window.location.hostname)) {
          isNavigating = true;
          console.log('🔗 Internal navigation detected');
          
          // If navigating away from homepage, save current position
          if (isHomepage) {
            saveScrollPosition();
          }
        }
      });
      
      // Additional safety: Force non-homepage pages to top on window focus
      window.addEventListener('focus', function() {
        if (!isHomepage && !isNavigating) {
          setTimeout(function() {
            if (window.pageYOffset > 100) {
              console.log('🎯 Window focus - forcing non-homepage to top');
              window.scrollTo(0, 0);
            }
          }, 100);
        }
      });
      
    })();
    </script>

    <script>
    // Debug Panel for Scroll System
    if (window.location.search.includes('debug=scroll')) {
      const debugPanel = document.createElement('div');
      debugPanel.style.cssText = `
        position: fixed; 
        top: 10px; 
        right: 10px; 
        background: rgba(0,0,0,0.8); 
        color: white; 
        padding: 10px; 
        font-family: monospace; 
        z-index: 9999; 
        max-width: 300px; 
        font-size: 12px;
        border-radius: 4px;
      `;
      debugPanel.innerHTML = '<div id="debug-content">Debug info will appear here...</div>';
      document.body.appendChild(debugPanel);
      
      // Override console.log to show in debug panel
      const originalLog = console.log;
      console.log = function(...args) {
        originalLog.apply(console, args);
        const debugContent = document.getElementById('debug-content');
        if (debugContent) {
          debugContent.innerHTML += '<br>' + args.join(' ');
          debugContent.scrollTop = debugContent.scrollHeight;
        }
      };
    }
    </script>

    <!-- Scroll To Top Button -->
    {% render 'scroll-button' %}

    <!-- Section Dots Container for Homepage Scroll -->
    {% if template contains 'index' %}
      <div id="section-dots" class="section-dot-navigation"></div>
    {% endif %}

    <!-- Load custom.js scroll system -->
    <script src="{{ 'custom.js' | asset_url }}"></script>
    
    <!-- Mobile-specific scroll optimization -->
    <script>
      if (window.isMobileDevice && window.isMobileDevice()) {
        // Disable smooth scrolling behavior on mobile for better performance
        document.addEventListener('DOMContentLoaded', function() {
          // Only apply smooth scrolling when using the custom scroll system
          var style = document.createElement('style');
          style.innerHTML = `
            @media screen and (max-width: 749px) {
              html {
                scroll-behavior: auto !important;
              }
              
              html.home-section {
                scroll-behavior: smooth;
              }
            }
          `;
          document.head.appendChild(style);
        });
      }
    </script>
    
  </body>
</html>