{% if template.name == 'page' and template.suffix == 'techpack-upload' %}
    <link rel="stylesheet" href="{{ 'techpack-unified-styles.css' | asset_url }}?v={{ 'now' | date: '%s' }}">
    <style>   
        .techpack-container {
            max-width: 900px;
            margin: 0 auto;
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 60px rgba(0,0,0,0.08);
            overflow: hidden;
        }
        
        .techpack-header {
            background: linear-gradient(135deg, #1a1a1a, #2d2d2d);
            color: white;
            padding: 20px 40px;
            text-align: center;
        }
        
        .techpack-header h1 {
            font-size: 2em;
            margin-bottom: 5px;
            font-weight: 300;
            letter-spacing: -0.5px;
        }
        
        .techpack-header p {
            opacity: 0.9;
            font-size: 1.1em;
            font-weight: 300;
            color: #e0e0e0;
        }
        
        .progress-bar {
            display: flex;
            justify-content: space-between;
            background: linear-gradient(135deg, #1a1a1a 0%, #333333 100%);
            padding: 10px 20px
            border-bottom: none;
            position: relative;
            overflow: hidden;
        }
      
        .progress-bar::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(45deg, rgba(255,255,255,0.03) 0%, rgba(255,255,255,0.01) 100%);
            z-index: 1;
        }  

        /* Country dropdown validation styling */
        .techpack-form__country-input.field-error,
        .techpack-form__country-input.error {
          border-color: #6b7280 !important;
          background-color: rgba(107, 114, 128, 0.05) !important;
          box-shadow: 0 0 0 3px rgba(107, 114, 128, 0.08) !important;
          animation: pulseGrey 2s infinite;
        }
        
        /* Country dropdown success state */
        .techpack-form__country-input:valid:not([value=""]) {
          border-color: var(--techpack-success) !important;
          background-color: rgba(34, 197, 94, 0.02) !important;
          box-shadow: 0 0 0 3px rgba(34, 197, 94, 0.08) !important;
        }
        
        /* Country wrapper validation */
        .techpack-form__group--error .techpack-form__country-wrapper .techpack-form__country-input {
          border-color: #6b7280 !important;
          background-color: rgba(107, 114, 128, 0.05) !important;
          box-shadow: 0 0 0 3px rgba(107, 114, 128, 0.08) !important;
        }      
      
        .step {
                flex: 1;
            text-align: center;
            position: relative;
            padding: 9px 6px; /* Changed from 20px 10px */
            color: #999999;
            font-weight: 600;
            transition: all 0.4s ease;
            z-index: 2;
            border-radius: 8px; /* Changed from 12px */
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255,255,255,0.1);
            margin: 0 2px; /* Changed from 0 5px */
            background: rgba(255,255,255,0.02);
        }
          
        .step::after {
            content: '';
            position: absolute;
            top: 50%;
            right: -15px;
            width: 30px;
            height: 2px;
            background: linear-gradient(90deg, transparent, #666666, transparent);
            z-index: 1;
            transform: translateY(-50%);
        }
        
        .step:last-child::after {
            display: none;
        }
        
        .step.active {
            color: #ffffff;
            background: linear-gradient(135deg, rgba(0,0,0,0.4), rgba(255,255,255,0.1));
            box-shadow: 0 0 20px rgba(255,255,255,0.1);
            transform: translateY(-3px);
            border-color: rgba(255,255,255,0.2);
        }
        
        .step.active::after {
            background: linear-gradient(90deg, transparent, #ffffff, transparent);
            box-shadow: 0 0 10px rgba(255,255,255,0.3);
        }
        
        .step.completed {
            color: #e0e0e0;
            background: linear-gradient(135deg, rgba(0,0,0,0.2), rgba(255,255,255,0.05));
            box-shadow: 0 0 15px rgba(0,0,0,0.1);
            border-color: rgba(255,255,255,0.15);
        }
        
        .step.completed::after {
            background: linear-gradient(90deg, transparent, #cccccc, transparent);
        }
        
        .form-container {
            padding: 25px 40px;
            background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
            color: #2d3748;
        }
        
        .step-content {
            display: none;
        }
        
        .step-content.active {
            display: block;
            animation: fadeIn 0.5s ease-in;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px; /* Changed from 25px */
            margin-bottom: 18px; /* Changed from 25px */
        }

        .form-row.single {
            grid-template-columns: 1fr;
        }

        .form-row.triple {
            grid-template-columns: 1fr 1fr 1fr;
        }

        .form-group {
            margin-bottom: 18px; /* Changed from 25px */
        }

        .form-group label {
            display: block;
            margin-bottom: 6px;
            font-weight: 700;
            color: #2d3748;
            font-size: 12px;
            text-transform: uppercase;
            letter-spacing: 0.8px;
        }
      
        .form-group input, 
        .form-group select, 
        .form-group textarea {
            width: 100%;
            padding: 12px 16px; /* Changed from 16px 20px */
            border: 2px solid #e2e8f0;
            border-radius: 8px; /* Changed from 12px */
            font-size: 12px; /* Changed from 16px */
            transition: all 0.3s ease;
            background: #ffffff;
            color: #2d3748;
            height: 44px; /* Add this to control height */
        }

        .form-group input:focus, 
        .form-group select:focus, 
        .form-group textarea:focus {
            outline: none;
            border-color: #4a5568;
            box-shadow: 0 0 0 3px rgba(74, 85, 104, 0.1);
            background: #ffffff;
        }
        
        .file-upload {
            border: 2px dashed #cbd5e0;
            border-radius: 15px;
            padding: 50px;
            text-align: center;
            background: #f7fafc;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .file-upload:hover {
            background: #edf2f7;
            border-color: #a0aec0;
        }
        
        .file-upload.dragover {
            background: #e2e8f0;
            border-color: #718096;
            transform: scale(1.02);
        }
        
        .file-icon {
            font-size: 3em;
            color: #718096;
            margin-bottom: 15px;
        }
        
        .garments-section {
            background: #f7fafc;
            padding: 30px;
            border-radius: 15px;
            margin: 25px 0;
            border: 1px solid #e2e8f0;
        }
        
        .garment-item {
            background: white;
            border-radius: 12px;
            padding: 25px;
            margin-bottom: 20px;
            border: 1px solid #e2e8f0;
            box-shadow: 0 2px 8px rgba(0,0,0,0.04);
        }
        
        .garment-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 1px solid #e2e8f0;
        }
        
        .garment-title {
            font-size: 1.2em;
            font-weight: 600;
            color: #2d3748;
        }
        
        .remove-garment {
            background: #e53e3e;
            color: white;
            border: none;
            border-radius: 8px;
            width: 35px;
            height: 35px;
            cursor: pointer;
            font-size: 16px;
            transition: all 0.3s ease;
        }
        
        .remove-garment:hover {
            background: #c53030;
            transform: scale(1.1);
        }
        
        .color-quantity-section {
            margin-top: 20px;
        }
        
        .color-item {
            display: flex;
            gap: 12px;
            margin-bottom: 15px;
            align-items: center;
            background: #f7fafc;
            padding: 15px;
            border-radius: 10px;
            border: 1px solid #e2e8f0;
        }
        
        .color-picker {
            width: 50px;
            height: 40px;
            border: 2px solid #e2e8f0;
            border-radius: 8px;
            cursor: pointer;
        }
        
        .size-input {
            width: 70px !important;
            padding: 8px !important;
            text-align: center;
            font-size: 14px !important;
        }
        
        .add-btn {
            background: linear-gradient(135deg, #4a5568, #2d3748);
            color: white;
            border: none;
            border-radius: 12px;
            padding: 15px 25px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 10px;
            margin-top: 20px;
        }
        
        .add-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(74, 85, 104, 0.3);
            background: linear-gradient(135deg, #2d3748, #1a202c);
        }
        
        .btn-group {
            display: flex;
            gap: 15px;
            justify-content: space-between;
            margin-top: 40px;
        }
        
        .btn {
            padding: 15px 30px;
            border: none;
            border-radius: 12px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            flex: 1;
        }
        
        .btn-primary {
            background: linear-gradient(135deg, #2d3748, #1a202c);
            color: white;
        }
        
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 30px rgba(45, 55, 72, 0.3);
            background: linear-gradient(135deg, #1a202c, #000000);
        }
        
        .btn-secondary {
            background: #e2e8f0;
            color: #4a5568;
            border: 2px solid #cbd5e0;
        }
        
        .btn-secondary:hover {
            background: #cbd5e0;
            border-color: #a0aec0;
            color: #2d3748;
        }
        
        .btn-success {
            background: linear-gradient(135deg, #38a169, #2f855a);
            color: white;
        }
        
        .btn-success:hover {
            background: linear-gradient(135deg, #2f855a, #276749);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(56, 161, 105, 0.3);
        }
        
        .file-list {
            margin-top: 20px;
        }
        
        .file-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            background: white;
            padding: 15px 20px;
            border-radius: 10px;
            margin-bottom: 10px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.06);
            border: 1px solid #e2e8f0;
        }
        
        .remove-file {
            background: #e53e3e;
            color: white;
            border: none;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.3s ease;
        }
        
        .remove-file:hover {
            background: #c53030;
            transform: scale(1.1);
        }
        
        .summary-card {
            background: white;
            border-radius: 12px;
            padding: 25px;
            margin-bottom: 20px;
            border: 1px solid #e2e8f0;
            box-shadow: 0 2px 8px rgba(0,0,0,0.04);
        }
        
        .summary-title {
            font-weight: 600;
            color: #2d3748;
            margin-bottom: 15px;
            font-size: 1.1em;
        }
        
        .success-message {
            text-align: center;
            padding: 50px;
        }
        
        .success-icon {
            font-size: 4em;
            color: #38a169;
            margin-bottom: 25px;
        }

        .searchable-select {
            position: relative;
        }
        
        .searchable-select input {
            padding-right: 40px !important;
        }
        
        .dropdown-arrow {
            position: absolute;
            right: 12px;
            top: 50%;
            transform: translateY(-50%);
            pointer-events: none;
            color: #6b7280;
            font-size: 12px;
        }
        
        .dropdown-list {
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            background: white;
            border: 2px solid #e2e8f0;
            border-top: none;
            border-radius: 0 0 8px 8px;
            max-height: 200px;
            overflow-y: auto;
            z-index: 1000;
            display: none;
        }
        
        .dropdown-item {
            padding: 12px 16px;
            cursor: pointer;
            transition: background-color 0.2s;
            font-size: 14px;
        }
        
        .dropdown-item:hover {
            background-color: #f7fafc;
        }
        
        .dropdown-item.highlighted {
            background-color: #edf2f7;
        }
        
        .section-title {
            font-size: 1.4em; /* Changed from 1.8em */
            color: #2d3748;
            margin-bottom: 20px; /* Changed from 30px */
            font-weight: 700; /* Changed from 300 for more luxurious bold */
            letter-spacing: -0.3px; /* Add this for luxury feel */
        }
        
        /* Enhanced styling for form elements */
        .form-group input::placeholder,
        .form-group textarea::placeholder {
            color: #a0aec0;
        }
        
        .form-group select {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
            background-position: right 12px center;
            background-repeat: no-repeat;
            background-size: 16px;
            appearance: none;
        }
        
        @media (max-width: 768px) {
            .techpack-container {
                margin: 10px;
                border-radius: 15px;
            }
            
            .form-container {
                padding: 25px;
            }
            
            .form-row {
                grid-template-columns: 1fr;
            }
            
            .color-item {
                flex-direction: column;
                align-items: stretch;
                gap: 10px;
            }
            
            .size-input {
                width: 100% !important;
            }
            
            .btn-group {
                flex-direction: column;
            }
            
            .garment-header {
                flex-direction: column;
                gap: 15px;
                align-items: flex-start;
            }
            
            .progress-bar {
                padding: 20px;
            }
            
            .step {
                margin: 0 2px;
                padding: 15px 5px;
                font-size: 14px;
            }
        }

        .printing-options {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-top: 8px;
        }
        
        .printing-options label {
            background: #edf2f7;
            border: 2px solid #cbd5e0;
            border-radius: 8px;
            padding: 10px 15px;
            font-size: 13px;
            cursor: pointer;
            transition: all 0.2s ease;
            user-select: none;
        }
        
        .printing-options input[type="checkbox"] {
            display: none;
        }
        
        .printing-options input[type="checkbox"]:checked + span,
        .printing-options label:has(input:checked) {
            background: #2d3748;
            color: white;
            border-color: #2d3748;
        }

        input:invalid {
            border-color: #f6b2b2; /* Light red */
        }      
      
        .date-wrapper {
          position: relative;
          width: 100%;               /* fill the width of its parent .form-group */
        }
        
        .date-input {
          width: 100%;
          padding-right: 60px;       /* leave room for “Select →” + native icon */
          height: 44px;              /* match your other inputs */
          font-size: 14px;
          line-height: 1.4;
          box-sizing: border-box;    /* include padding in the total width */
        }
        
        .date-hint {
          position: absolute;
          top: 50%;
          right: 35px;               /* sits just to the left of the calendar icon */
          transform: translateY(-50%);
          font-size: 12px;
          color: #6c757d;            /* muted grey */
          pointer-events: none;      /* clicks still open the native date-picker */
          white-space: nowrap;
        }
        
        /* Dim the hint slightly when the input is focused */
        .date-input:focus + .date-hint {
          color: #adb5bd;
        }

    </style>

    <div class="techpack-container">
      
        <div class="progress-bar">
            <div class="step active" data-step="1">1. Basic Information</div>
            <div class="step" data-step="2">2. File Upload</div>
            <div class="step" data-step="3">3. Garments & Colors</div>
            <div class="step" data-step="4">4. Review & Submit</div>
        </div>
        
        <div class="form-container">
            <form id="techpackForm" action="#" method="POST" enctype="multipart/form-data">
                <!-- Step 1: Basic Information -->
                <div class="step-content active" data-step="1">
                    <h2 class="section-title">Project Basic Information</h2>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label for="clientName">Client Name *</label>
                            <input type="text" id="clientName" name="clientName" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="companyName">Company Name *</label>
                            <input type="text" id="companyName" name="companyName" required>
                        </div>
                    </div>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label for="email">Contact Email *</label>
                            <input type="email" id="email" name="email" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="phone">Phone Number</label>
                            <input type="tel" id="phone" name="phone">
                        </div>
                    </div>
                    
                    <div class="form-row">
    <div class="form-group">
      <label for="request-type">Select Sample or Bulk Order Request</label>
      <div class="select-wrapper">
        <select
          id="request-type"
          name="requestType"
          class="form-select"
          required
        >
          <option value="">Select request type...</option>
          <option value="sample-request">Sample Request</option>
          <option value="bulk-order-request">Bulk Order Request</option>
        </select>
      </div>
    </div>
    
    <div class="form-group">
        <label for="vatNumber">VAT / EIN Nº</label>
        <input type="text" id="vatNumber" name="vatNumber" placeholder="e.g. GB123456789">
    </div>
</div>

<div class="form-group">
    <label for="country">Country *</label>
    <div class="searchable-select" id="countryContainer">
        <input type="text" id="country" name="country" placeholder="Type to search countries..." autocomplete="off" required>
        <div class="dropdown-arrow">▼</div>
        <div class="dropdown-list" id="countryDropdown"></div>
    </div>
</div>
                    
                    <div class="form-group">
                        <label for="notes">Additional Notes</label>
                        <textarea id="notes" name="notes" rows="4" placeholder="Specific project details..."></textarea>
                    </div>
                    
                    <div class="btn-group">
                        <button type="button" class="btn btn-primary" onclick="TechpackForm.nextStep()">Next →</button>
                    </div>
                </div>
                
                <!-- Step 2: File Upload -->
                <div class="step-content" data-step="2">
                    <h2 class="section-title">Technical Files Upload</h2>
                    
                    <div class="file-upload" onclick="document.getElementById('techpackFiles').click()">
                        <div class="file-icon">📁</div>
                        <h3>Click to select files</h3>
                        <p>or drag files here</p>
                        <small>Accepted formats: PDF, AI, PNG, JPG, ZIP (max. 10MB each)</small>
                    </div>
                    
                    <input type="file" id="techpackFiles" name="files[]" multiple accept=".pdf,.ai,.png,.jpg,.jpeg,.zip" style="display: none;">
                    
                    <div class="file-list" id="fileList"></div>
                    
                    <div class="btn-group">
                        <button type="button" class="btn btn-secondary" onclick="TechpackForm.prevStep()">← Previous</button>
                        <button type="button" class="btn btn-primary" onclick="TechpackForm.nextStep()">Next →</button>
                    </div>
                </div>
                
                <!-- Step 3: Garments & Colors -->
                <div class="step-content" data-step="3">
                    <h2 class="section-title">Garments & Colors</h2>
                    
                    <div class="garments-section">
                        <div id="garmentsContainer">
                            <!-- Initial garment will be added by JavaScript -->
                        </div>
                        
                        <button type="button" class="add-btn" onclick="TechpackForm.addGarment()">
                            <span style="font-size: 1.2em;">+</span> Add Garment
                        </button>
                    </div>
                    
                    <div class="btn-group">
                        <button type="button" class="btn btn-secondary" onclick="TechpackForm.prevStep()">← Previous</button>
                        <button type="button" class="btn btn-primary" onclick="TechpackForm.nextStep()">Next →</button>
                    </div>
                </div>
                
                <!-- Step 4: Review & Submit -->
                <div class="step-content" data-step="4">
                    <h2 class="section-title">Final Review</h2>
                    
                    <div id="summaryContainer"></div>
                    
                    <div class="btn-group">
                        <button type="button" class="btn btn-secondary" onclick="TechpackForm.prevStep()">← Previous</button>
                        <button type="submit" class="btn btn-success">✉️ Submit Techpack</button>
                    </div>
                </div>
                
                <!-- Success Step -->
                <div class="step-content" data-step="5">
                    <div class="success-message">
                        <div class="success-icon">✅</div>
                        <h2>Techpack Submitted Successfully!</h2>
                        <p>Thank you for your request. You will receive a confirmation email shortly.</p>
                        <p>Our team will contact you within the next 24 hours.</p>
                        <button type="button" class="btn btn-primary" onclick="TechpackForm.resetForm()" style="margin-top: 25px;">New Techpack</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <script>
        window.TechpackForm = (function() {
            let currentStep = 1;
            let uploadedFiles = [];
            let garmentCounter = 0;
            
            const garmentTypes = [
                { value: 'zip-up Jacket', label: 'Zip-up Jacket' },
                { value: 'hoodie', label: 'Hoodie' },
                { value: 'T-shirt', label: 'T-shirt' },
                { value: 'sweatshirt', label: 'Sweatshirt' },
                { value: 'sweatpants', label: 'Sweatpants' },
                { value: 'shorts', label: 'Shorts' },
                { value: 'longsleeve', label: 'Longsleeve' },
                { value: 'dress', label: 'Dress' },
                { value: 'shirt', label: 'Shirt' },
                { value: 'other', label: 'Other' }
            ];
            
            function nextStep() {
                if (validateCurrentStep()) {
                    if (currentStep < 4) {
                        currentStep++;
                        showStep(currentStep);
                    }
                }
            }
            
            function prevStep() {
                if (currentStep > 1) {
                    currentStep--;
                    showStep(currentStep);
                }
            }
            
            function showStep(step) {
                document.querySelectorAll('.step-content').forEach(content => {
                    content.classList.remove('active');
                });
                
                const currentContent = document.querySelector(`[data-step="${step}"].step-content`);
                if (currentContent) {
                    currentContent.classList.add('active');
                }
                
                document.querySelectorAll('.step').forEach((stepEl, index) => {
                    stepEl.classList.remove('active', 'completed');
                    if (index + 1 < step) {
                        stepEl.classList.add('completed');
                    } else if (index + 1 === step) {
                        stepEl.classList.add('active');
                    }
                });
                
                if (step === 4) {
                    generateSummary();
                }
            }
            
            function validateCurrentStep() {
                const currentContent = document.querySelector(`[data-step="${currentStep}"].step-content`);
                if (!currentContent) return false;
                
                const requiredFields = currentContent.querySelectorAll('[required]');
                
                for (let field of requiredFields) {
                    if (!field.value.trim()) {
                        field.focus();
                        alert('Please fill all required fields.');
                        return false;
                    }
                }
                
                if (currentStep === 2 && uploadedFiles.length === 0) {
                    alert('Please upload at least one file.');
                    return false;
                }
                
                if (currentStep === 3) {
                    const garments = document.querySelectorAll('.garment-item');
                    if (garments.length === 0) {
                        alert('Please add at least one garment.');
                        return false;
                    }
                }
                
                return true;
            }
            
            function addGarment() {
                garmentCounter++;
                const container = document.getElementById('garmentsContainer');
                const garmentItem = document.createElement('div');
                garmentItem.className = 'garment-item';
                garmentItem.setAttribute('data-garment-id', garmentCounter);
                
                garmentItem.innerHTML = `
                    <div class="garment-header">
                        <div class="garment-title">Garment ${garmentCounter}</div>
                        <button type="button" class="remove-garment" onclick="TechpackForm.removeGarment(${garmentCounter})" title="Remove Garment">×</button>
                    </div>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label>Garment Type *</label>
                            <select name="garmentType_${garmentCounter}" required>
                                <option value="">Select garment type</option>
                                ${garmentTypes.map(type => `<option value="${type.value}">${type.label}</option>`).join('')}
                            </select>
                        </div>
                        
                        <div class="form-group">
                            <label>Fabric Type</label>
                            <input type="text" name="fabric_${garmentCounter}" placeholder="e.g. 100% Cotton, Polyester, etc.">
                        </div>
                    </div>

                    <div class="form-group" style="grid-column: 1 / -1;">
                        <label>Printing Method(s)</label>
                        <div class="printing-options">
                            <label><input type="checkbox" name="printingMethod_${garmentCounter}[]" value="Embroidery"> Embroidery</label>
                            <label><input type="checkbox" name="printingMethod_${garmentCounter}[]" value="Screenprint"> Screenprint</label>
                            <label><input type="checkbox" name="printingMethod_${garmentCounter}[]" value="Digital Print"> Digital Print</label>
                            <label><input type="checkbox" name="printingMethod_${garmentCounter}[]" value="Other"> Other</label>
                        </div>
                    </div>
                    
                    <div class="color-quantity-section">
                        <h4 style="margin-bottom: 15px; color: #2d3748;">Colors & Quantities</h4>
                        <div id="colorContainer_${garmentCounter}">
                            <div class="color-item">
                                <input type="color" class="color-picker" name="colors_${garmentCounter}[]" value="#000000">
                                <input type="text" placeholder="Color name" name="colorNames_${garmentCounter}[]" style="flex: 1;">
                                <input type="number" placeholder="XS" name="xs_${garmentCounter}[]" min="0" class="size-input">
                                <input type="number" placeholder="S" name="s_${garmentCounter}[]" min="0" class="size-input">
                                <input type="number" placeholder="M" name="m_${garmentCounter}[]" min="0" class="size-input">
                                <input type="number" placeholder="L" name="l_${garmentCounter}[]" min="0" class="size-input">
                                <input type="number" placeholder="XL" name="xl_${garmentCounter}[]" min="0" class="size-input">
                                <button type="button" class="remove-file" onclick="TechpackForm.removeColorRow(this)">×</button>
                            </div>
                        </div>
                        <button type="button" class="add-btn" onclick="TechpackForm.addColorRow(${garmentCounter})" style="margin-top: 15px; padding: 10px 20px; font-size: 14px;">
                            <span style="font-size: 1em;">+</span> Add Color
                        </button>
                    </div>
                `;
                
                container.appendChild(garmentItem);
            }
            
            function removeGarment(garmentId) {
                const garments = document.querySelectorAll('.garment-item');
                if (garments.length > 1) {
                    const garment = document.querySelector(`[data-garment-id="${garmentId}"]`);
                    if (garment) {
                        garment.remove();
                    }
                } else {
                    alert('You must have at least one garment.');
                }
            }
            
            function addColorRow(garmentId) {
                const container = document.getElementById(`colorContainer_${garmentId}`);
                const colorItem = document.createElement('div');
                colorItem.className = 'color-item';
                colorItem.innerHTML = `
                    <input type="color" class="color-picker" name="colors_${garmentId}[]" value="#000000">
                    <input type="text" placeholder="Color name" name="colorNames_${garmentId}[]" style="flex: 1;">
                    <input type="number" placeholder="XS" name="xs_${garmentId}[]" min="0" class="size-input">
                    <input type="number" placeholder="S" name="s_${garmentId}[]" min="0" class="size-input">
                    <input type="number" placeholder="M" name="m_${garmentId}[]" min="0" class="size-input">
                    <input type="number" placeholder="L" name="l_${garmentId}[]" min="0" class="size-input">
                    <input type="number" placeholder="XL" name="xl_${garmentId}[]" min="0" class="size-input">
                    <button type="button" class="remove-file" onclick="TechpackForm.removeColorRow(this)">×</button>
                `;
                container.appendChild(colorItem);
            }
            
            function removeColorRow(button) {
                const container = button.parentElement.parentElement;
                const colorRows = container.querySelectorAll('.color-item');
                if (colorRows.length > 1) {
                    button.parentElement.remove();
                }
            }
            
            function handleFileUpload(e) {
                const files = Array.from(e.target.files || e.dataTransfer.files);
                
                files.forEach(file => {
                    if (validateFile(file)) {
                        uploadedFiles.push(file);
                        addFileToList(file);
                    }
                });
                
                document.getElementById('techpackFiles').value = '';
            }
            
            function validateFile(file) {
                const maxSize = 10 * 1024 * 1024; // 10MB
                const allowedTypes = ['.pdf', '.ai', '.png', '.jpg', '.jpeg', '.zip'];
                const fileExtension = '.' + file.name.split('.').pop().toLowerCase();
                
                if (file.size > maxSize) {
                    alert(`File ${file.name} is too large. Maximum size is 10MB.`);
                    return false;
                }
                
                if (!allowedTypes.includes(fileExtension)) {
                    alert(`File type ${fileExtension} is not allowed.`);
                    return false;
                }
                
                return true;
            }
            
            function addFileToList(file) {
                const fileList = document.getElementById('fileList');
                const fileItem = document.createElement('div');
                fileItem.className = 'file-item';
                fileItem.innerHTML = `
                    <span>📄 ${file.name} (${formatFileSize(file.size)})</span>
                    <button type="button" class="remove-file" onclick="TechpackForm.removeFile('${file.name}')">×</button>
                `;
                fileList.appendChild(fileItem);
            }
            
            function removeFile(fileName) {
                uploadedFiles = uploadedFiles.filter(file => file.name !== fileName);
                updateFileList();
            }
            
            function updateFileList() {
                const fileList = document.getElementById('fileList');
                fileList.innerHTML = '';
                uploadedFiles.forEach(file => addFileToList(file));
            }
            
            function formatFileSize(bytes) {
                if (bytes === 0) return '0 Bytes';
                const k = 1024;
                const sizes = ['Bytes', 'KB', 'MB', 'GB'];
                const i = Math.floor(Math.log(bytes) / Math.log(k));
                return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
            }
            
            function generateSummary() {
                const formData = new FormData(document.getElementById('techpackForm'));
                const summaryContainer = document.getElementById('summaryContainer');
                
                let html = `
                    <div class="summary-card">
                        <div class="summary-title">Client Information</div>
                        <p><strong>Client Name:</strong> ${formData.get('clientName') || 'Not specified'}</p>
                        <p><strong>Company Name:</strong> ${formData.get('companyName') || 'Not specified'}</p>
                        <p><strong>Email:</strong> ${formData.get('email') || 'Not specified'}</p>
                        <p><strong>Phone:</strong> ${formData.get('phone') || 'Not specified'}</p>
                        <p><strong>Request Type:</strong> ${formData.get('requestType') === 'sample-request' ? 'Sample Request' : formData.get('requestType') === 'bulk-order-request' ? 'Bulk Order Request' : 'Not specified'}</p>
                    </div>
                    
                    <div class="summary-card">
                        <div class="summary-title">Files (${uploadedFiles.length})</div>
                        ${uploadedFiles.length > 0 ? uploadedFiles.map(file => `<p>• ${file.name}</p>`).join('') : '<p>No files uploaded</p>'}
                    </div>
                    
                    <div class="summary-card">
                        <div class="summary-title">Garments & Colors</div>
                        ${generateGarmentsSummary(formData)}
                    </div>
                `;
                
                summaryContainer.innerHTML = html;
            }
            
            function generateGarmentsSummary(formData) {
                const garments = document.querySelectorAll('.garment-item');
                let summary = '';
                
                garments.forEach((garment, index) => {
                    const garmentId = garment.getAttribute('data-garment-id');
                    const type = formData.get(`garmentType_${garmentId}`) || 'Not specified';
                    const fabric = formData.get(`fabric_${garmentId}`) || 'Not specified';
                
                    summary += `<div style="margin-bottom: 15px; padding: 15px; background: white; border-radius: 8px;">`;
                    summary += `<h4>Garment ${parseInt(garmentId)}</h4>`;
                    summary += `<p><strong>Type:</strong> ${type}</p>`;
                    summary += `<p><strong>Fabric:</strong> ${fabric}</p>`;
                
                    // ✅ Add this for printing method(s)
                    const methods = formData.getAll(`printingMethod_${garmentId}[]`);
                    if (methods.length > 0) {
                        summary += `<p><strong>Printing Methods:</strong> ${methods.join(', ')}</p>`;
                    }
                    
                    // Colors summary
                    const colorNames = formData.getAll(`colorNames_${garmentId}[]`);
                    const xs = formData.getAll(`xs_${garmentId}[]`);
                    const s = formData.getAll(`s_${garmentId}[]`);
                    const m = formData.getAll(`m_${garmentId}[]`);
                    const l = formData.getAll(`l_${garmentId}[]`);
                    const xl = formData.getAll(`xl_${garmentId}[]`);
                    
                    if (colorNames.length > 0) {
                        summary += `<p><strong>Colors:</strong></p>`;
                        colorNames.forEach((name, colorIndex) => {
                            if (name && name.trim()) {
                                const total = parseInt(xs[colorIndex] || 0) + parseInt(s[colorIndex] || 0) + 
                                            parseInt(m[colorIndex] || 0) + parseInt(l[colorIndex] || 0) + parseInt(xl[colorIndex] || 0);
                                summary += `<span style="margin-left: 10px;">• ${name}: XS:${xs[colorIndex]||0} S:${s[colorIndex]||0} M:${m[colorIndex]||0} L:${l[colorIndex]||0} XL:${xl[colorIndex]||0} (Total: ${total})</span><br>`;
                            }
                        });
                    }
                    summary += `</div>`;
                });
                
                return summary || '<p>No garments specified</p>';
            }
            
            function resetForm() {
                document.getElementById('techpackForm').reset();
                uploadedFiles = [];
                garmentCounter = 0;
                currentStep = 1;
                
                document.getElementById('fileList').innerHTML = '';
                document.getElementById('garmentsContainer').innerHTML = '';
                
                showStep(1);
                addGarment(); // Add initial garment
            }
            
            function submitForm(e) {
                e.preventDefault();
                
                // Here you would normally send the data to your server
                // For this demo, we'll just show the success message
                
                const formData = new FormData(document.getElementById('techpackForm'));
                
                // Add files to form data
                uploadedFiles.forEach((file, index) => {
                    formData.append(`file_${index}`, file);
                });
                
                // Simulate form submission
                setTimeout(() => {
                    currentStep = 5;
                    showStep(5);
                }, 1000);
                
                // In a real application, you would do something like:
                // fetch('/submit-techpack', {
                //     method: 'POST',
                //     body: formData
                // }).then(response => {
                //     if (response.ok) {
                //         currentStep = 5;
                //         showStep(5);
                //     }
                // });
            }

                    const countries = [
            { value: 'AT', label: 'Austria' },
            { value: 'BE', label: 'Belgium' },
            { value: 'BG', label: 'Bulgaria' },
            { value: 'HR', label: 'Croatia' },
            { value: 'CY', label: 'Cyprus' },
            { value: 'CZ', label: 'Czech Republic' },
            { value: 'DK', label: 'Denmark' },
            { value: 'EE', label: 'Estonia' },
            { value: 'FI', label: 'Finland' },
            { value: 'FR', label: 'France' },
            { value: 'DE', label: 'Germany' },
            { value: 'GR', label: 'Greece' },
            { value: 'HU', label: 'Hungary' },
            { value: 'IE', label: 'Ireland' },
            { value: 'IT', label: 'Italy' },
            { value: 'LV', label: 'Latvia' },
            { value: 'LT', label: 'Lithuania' },
            { value: 'LU', label: 'Luxembourg' },
            { value: 'MT', label: 'Malta' },
            { value: 'NL', label: 'Netherlands' },
            { value: 'PL', label: 'Poland' },
            { value: 'PT', label: 'Portugal' },
            { value: 'RO', label: 'Romania' },
            { value: 'SK', label: 'Slovakia' },
            { value: 'SI', label: 'Slovenia' },
            { value: 'ES', label: 'Spain' },
            { value: 'SE', label: 'Sweden' },
            { value: 'US', label: 'United States' },
            { value: 'CA', label: 'Canada' },
            { value: 'AU', label: 'Australia' },
            { value: 'OTHER', label: 'Other' }
        ];
        
        function initCountrySearch() {
            const input = document.getElementById('country');
            const dropdown = document.getElementById('countryDropdown');
            let highlightedIndex = -1;
            
            function showDropdown() {
                dropdown.style.display = 'block';
            }
            
            function hideDropdown() {
                setTimeout(() => {
                    dropdown.style.display = 'none';
                }, 200);
            }
            
            function filterCountries(searchTerm) {
                return countries.filter(country => 
                    country.label.toLowerCase().includes(searchTerm.toLowerCase())
                );
            }
            
            function renderDropdown(filteredCountries) {
                dropdown.innerHTML = '';
                filteredCountries.forEach((country, index) => {
                    const item = document.createElement('div');
                    item.className = 'dropdown-item';
                    item.textContent = country.label;
                    item.addEventListener('click', () => selectCountry(country));
                    dropdown.appendChild(item);
                });
                highlightedIndex = -1;
            }
            
            function selectCountry(country) {
                input.value = country.label;
                input.setAttribute('data-value', country.value);
                hideDropdown();
                toggleVatRequirement(); // Call your existing VAT function
            }
            
            input.addEventListener('input', function() {
                const searchTerm = this.value;
                const filtered = filterCountries(searchTerm);
                renderDropdown(filtered);
                showDropdown();
            });
            
            input.addEventListener('focus', function() {
                const filtered = filterCountries(this.value);
                renderDropdown(filtered);
                showDropdown();
            });
            
            input.addEventListener('blur', function () {
                const typed = input.value.trim().toLowerCase();
                const filtered = countries.filter(c => c.label.toLowerCase().includes(typed));
            
                if (filtered.length === 1) {
                    // Auto-correct to exact match
                    const matched = filtered[0];
                    input.value = matched.label;
                    input.setAttribute('data-value', matched.value);
                } else {
                    // Try to match exact label
                    const exactMatch = countries.find(c => c.label.toLowerCase() === typed);
                    if (exactMatch) {
                        input.setAttribute('data-value', exactMatch.value);
                    } else {
                        input.removeAttribute('data-value');
                    }
                }
            
                toggleVatRequirement();
                hideDropdown();
            });
           
            input.addEventListener('keydown', function(e) {
                const items = dropdown.querySelectorAll('.dropdown-item');
                
                if (e.key === 'ArrowDown') {
                    e.preventDefault();
                    highlightedIndex = Math.min(highlightedIndex + 1, items.length - 1);
                    updateHighlight(items);
                } else if (e.key === 'ArrowUp') {
                    e.preventDefault();
                    highlightedIndex = Math.max(highlightedIndex - 1, -1);
                    updateHighlight(items);
                } else if (e.key === 'Enter') {
                    e.preventDefault();
                    if (highlightedIndex >= 0 && items[highlightedIndex]) {
                        const countryLabel = items[highlightedIndex].textContent;
                        const country = countries.find(c => c.label === countryLabel);
                        if (country) selectCountry(country);
                    }
                }
            });
            
            function updateHighlight(items) {
                items.forEach((item, index) => {
                    item.classList.toggle('highlighted', index === highlightedIndex);
                });
            }
        }
        
        function toggleVatRequirement() {
            const countryInput = document.getElementById('country');
            const countryValue = countryInput.getAttribute('data-value');
            const vatInput = document.getElementById('vatNumber');
            const vatLabel = vatInput.parentElement.querySelector('label');
            
            const euCountries = ['AT', 'BE', 'BG', 'HR', 'CY', 'CZ', 'DK', 'EE', 'FI', 'FR', 'DE', 'GR', 'HU', 'IE', 'IT', 'LV', 'LT', 'LU', 'MT', 'NL', 'PL', 'PT', 'RO', 'SK', 'SI', 'ES', 'SE'];
            
            if (euCountries.includes(countryValue)) {
                vatInput.setAttribute('required', 'required');
                vatLabel.textContent = 'VAT Number *';
            } else {
                vatInput.removeAttribute('required');
                vatLabel.textContent = 'VAT / EIN Nº';
            }
        }
            
            // Initialize form
            function init() {
                // Set up file upload handlers
                const fileInput = document.getElementById('techpackFiles');
                const fileUpload = document.querySelector('.file-upload');
                
                fileInput.addEventListener('change', handleFileUpload);
                
                // Drag and drop handlers
                fileUpload.addEventListener('dragover', function(e) {
                    e.preventDefault();
                    this.classList.add('dragover');
                });
                
                fileUpload.addEventListener('dragleave', function(e) {
                    e.preventDefault();
                    this.classList.remove('dragover');
                });
                
                fileUpload.addEventListener('drop', function(e) {
                    e.preventDefault();
                    this.classList.remove('dragover');
                    handleFileUpload(e);
                });
                
                // Form submit handler
                document.getElementById('techpackForm').addEventListener('submit', submitForm);
                
                // Add initial garment
                addGarment();

                // Initialize country search
                initCountrySearch();

            }
            
            // Public API
            return {
                nextStep,
                prevStep,
                addGarment,
                removeGarment,
                addColorRow,
                removeColorRow,
                removeFile,
                resetForm,
                toggleVatRequirement,
                init
            };
        })();
        
        // Initialize when DOM is loaded
        document.addEventListener('DOMContentLoaded', function() {
            TechpackForm.init();
        });
    </script>
{% endif %}