<!doctype html>
<html class="no-js" lang="{{ request.locale.iso_code }}">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="theme-color" content="">
    <link rel="canonical" href="{{ canonical_url }}">

    {%- if settings.favicon != blank -%}
      <link rel="icon" type="image/png" href="{{ settings.favicon | image_url: width: 32, height: 32 }}">
    {%- endif -%}

    {%- unless settings.type_header_font.system? and settings.type_body_font.system? -%}
      <link rel="preconnect" href="https://fonts.shopifycdn.com" crossorigin>
    {%- endunless -%}

    <title>
      {{ page_title }}
      {%- if current_tags %} &ndash; tagged "{{ current_tags | join: ', ' }}"{% endif -%}
      {%- if current_page != 1 %} &ndash; Page {{ current_page }}{% endif -%}
      {%- unless page_title contains shop.name %} &ndash; {{ shop.name }}{% endunless -%}
    </title>

    {% if page_description %}
      <meta name="description" content="{{ page_description | escape }}">
    {% endif %}

    {% render 'meta-tags' %}

    <script src="{{ 'constants.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'pubsub.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'global.js' | asset_url }}" defer="defer"></script>
    {%- if settings.animations_reveal_on_scroll -%}
      <script src="{{ 'animations.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js" async></script>
    {{ content_for_header }}

    {%- liquid
      assign body_font_bold = settings.type_body_font | font_modify: 'weight', 'bold'
      assign body_font_italic = settings.type_body_font | font_modify: 'style', 'italic'
      assign body_font_bold_italic = body_font_bold | font_modify: 'style', 'italic'
    %}

    {% style %}
      {{ settings.type_body_font | font_face: font_display: 'swap' }}
      {{ body_font_bold | font_face: font_display: 'swap' }}
      {{ body_font_italic | font_face: font_display: 'swap' }}
      {{ body_font_bold_italic | font_face: font_display: 'swap' }}
      {{ settings.type_header_font | font_face: font_display: 'swap' }}

      {% for scheme in settings.color_schemes -%}
        {% assign scheme_classes = scheme_classes | append: ', .color-' | append: scheme.id %}
        {% if forloop.index == 1 -%}
          :root,
        {%- endif %}
        .color-{{ scheme.id }} {
          --color-background: {{ scheme.settings.background.red }},{{ scheme.settings.background.green }},{{ scheme.settings.background.blue }};
        {% if scheme.settings.background_gradient != empty %}
          --gradient-background: {{ scheme.settings.background_gradient }};
        {% else %}
          --gradient-background: --color-background;
        {% endif %}
          --color-foreground: {{ scheme.settings.text.red }},{{ scheme.settings.text.green }},{{ scheme.settings.text.blue }};
          --color-button: {{ scheme.settings.button.red }},{{ scheme.settings.button.green }},{{ scheme.settings.button.blue }};
          --color-button-text: {{ scheme.settings.button_label.red }},{{ scheme.settings.button_label.green }},{{ scheme.settings.button_label.blue }};
          --color-secondary-button: {{ scheme.settings.background.red }},{{ scheme.settings.background.green }},{{ scheme.settings.background.blue }};
          --color-secondary-button-text: {{ scheme.settings.text.red }},{{ scheme.settings.text.green }},{{ scheme.settings.text.blue }};
          --color-link: {{ scheme.settings.text.red }},{{ scheme.settings.text.green }},{{ scheme.settings.text.blue }};
          --color-badge-foreground: {{ scheme.settings.text.red }},{{ scheme.settings.text.green }},{{ scheme.settings.text.blue }};
          --color-badge-background: {{ scheme.settings.background.red }},{{ scheme.settings.background.green }},{{ scheme.settings.background.blue }};
          --color-badge-border: {{ scheme.settings.text.red }},{{ scheme.settings.text.green }},{{ scheme.settings.text.blue }};
          --payment-terms-background-color: {{ scheme.settings.background | color_modify: 'alpha', 0.1 }};
        }
      {% endfor %}

      {{ settings.type_body_font | font_face: font_display: 'swap' }}
      {{ settings.type_header_font | font_face: font_display: 'swap' }}

      {% assign base_font_size = settings.body_scale | divided_by: 100.0 %}
      {% assign header_font_size = settings.heading_scale | times: 1.0 | divided_by: base_font_size %}

      :root {
        --font-body-family: {{ settings.type_body_font.family }}, {{ settings.type_body_font.fallback_families }};
        --font-body-style: {{ settings.type_body_font.style }};
        --font-body-weight: {{ settings.type_body_font.weight }};
        --font-body-weight-bold: {{ settings.type_body_font.weight | plus: 300 | at_most: 1000 }};

        --font-heading-family: {{ settings.type_header_font.family }}, {{ settings.type_header_font.fallback_families }};
        --font-heading-style: {{ settings.type_header_font.style }};
        --font-heading-weight: {{ settings.type_header_font.weight }};

        --font-body-scale: {{ base_font_size }};
        --font-heading-scale: {{ header_font_size }};

        --media-padding: {{ settings.media_padding }}px;
        --media-border-opacity: {{ settings.media_border_opacity | divided_by: 100.0 }};
        --media-border-width: {{ settings.media_border_thickness }}px;
        --media-radius: {{ settings.media_radius }}px;
        --media-shadow-opacity: {{ settings.media_shadow_opacity | divided_by: 100.0 }};
        --media-shadow-horizontal-offset: {{ settings.media_shadow_horizontal_offset }}px;
        --media-shadow-vertical-offset: {{ settings.media_shadow_vertical_offset }}px;
        --media-shadow-blur-radius: {{ settings.media_shadow_blur }}px;
        --media-shadow-visible: {% if settings.media_shadow_opacity > 0 %}1{% else %}0{% endif %};

        --page-width: {{ settings.page_width | divided_by: 10 }}rem;
        --page-width-margin: {% if settings.page_width == '1600' %}2{% else %}0{% endif %}rem;

        --product-card-image-padding: {{ settings.card_image_padding | divided_by: 10.0 }}rem;
        --product-card-corner-radius: {{ settings.card_corner_radius | divided_by: 10.0 }}rem;
        --product-card-text-alignment: {{ settings.card_text_alignment }};
        --product-card-border-width: {{ settings.card_border_thickness | divided_by: 10.0 }}rem;
        --product-card-border-opacity: {{ settings.card_border_opacity | divided_by: 100.0 }};
        --product-card-shadow-opacity: {{ settings.card_shadow_opacity | divided_by: 100.0 }};
        --product-card-shadow-visible: {% if settings.card_shadow_opacity > 0 %}1{% else %}0{% endif %};
        --product-card-shadow-horizontal-offset: {{ settings.card_shadow_horizontal_offset | divided_by: 10.0 }}rem;
        --product-card-shadow-vertical-offset: {{ settings.card_shadow_vertical_offset | divided_by: 10.0 }}rem;
        --product-card-shadow-blur-radius: {{ settings.card_shadow_blur | divided_by: 10.0 }}rem;

        --collection-card-image-padding: {{ settings.collection_card_image_padding | divided_by: 10.0 }}rem;
        --collection-card-corner-radius: {{ settings.collection_card_corner_radius | divided_by: 10.0 }}rem;
        --collection-card-text-alignment: {{ settings.collection_card_text_alignment }};
        --collection-card-border-width: {{ settings.collection_card_border_thickness | divided_by: 10.0 }}rem;
        --collection-card-border-opacity: {{ settings.collection_card_border_opacity | divided_by: 100.0 }};
        --collection-card-shadow-opacity: {{ settings.collection_card_shadow_opacity | divided_by: 100.0 }};
        --collection-card-shadow-visible: {% if settings.collection_card_shadow_opacity > 0 %}1{% else %}0{% endif %};
        --collection-card-shadow-horizontal-offset: {{ settings.collection_card_shadow_horizontal_offset | divided_by: 10.0 }}rem;
        --collection-card-shadow-vertical-offset: {{ settings.collection_card_shadow_vertical_offset | divided_by: 10.0 }}rem;
        --collection-card-shadow-blur-radius: {{ settings.collection_card_shadow_blur | divided_by: 10.0 }}rem;

        --blog-card-image-padding: {{ settings.blog_card_image_padding | divided_by: 10.0 }}rem;
        --blog-card-corner-radius: {{ settings.blog_card_corner_radius | divided_by: 10.0 }}rem;
        --blog-card-text-alignment: {{ settings.blog_card_text_alignment }};
        --blog-card-border-width: {{ settings.blog_card_border_thickness | divided_by: 10.0 }}rem;
        --blog-card-border-opacity: {{ settings.blog_card_border_opacity | divided_by: 100.0 }};
        --blog-card-shadow-opacity: {{ settings.blog_card_shadow_opacity | divided_by: 100.0 }};
        --blog-card-shadow-visible: {% if settings.blog_card_shadow_opacity > 0 %}1{% else %}0{% endif %};
        --blog-card-shadow-horizontal-offset: {{ settings.blog_card_shadow_horizontal_offset | divided_by: 10.0 }}rem;
        --blog-card-shadow-vertical-offset: {{ settings.blog_card_shadow_vertical_offset | divided_by: 10.0 }}rem;
        --blog-card-shadow-blur-radius: {{ settings.blog_card_shadow_blur | divided_by: 10.0 }}rem;

        --badge-corner-radius: {{ settings.badge_corner_radius | divided_by: 10.0 }}rem;

        --popup-border-width: {{ settings.popup_border_thickness }}px;
        --popup-border-opacity: {{ settings.popup_border_opacity | divided_by: 100.0 }};
        --popup-corner-radius: {{ settings.popup_corner_radius }}px;
        --popup-shadow-opacity: {{ settings.popup_shadow_opacity | divided_by: 100.0 }};
        --popup-shadow-horizontal-offset: {{ settings.popup_shadow_horizontal_offset }}px;
        --popup-shadow-vertical-offset: {{ settings.popup_shadow_vertical_offset }}px;
        --popup-shadow-blur-radius: {{ settings.popup_shadow_blur }}px;

        --drawer-border-width: {{ settings.drawer_border_thickness }}px;
        --drawer-border-opacity: {{ settings.drawer_border_opacity | divided_by: 100.0 }};
        --drawer-shadow-opacity: {{ settings.drawer_shadow_opacity | divided_by: 100.0 }};
        --drawer-shadow-horizontal-offset: {{ settings.drawer_shadow_horizontal_offset }}px;
        --drawer-shadow-vertical-offset: {{ settings.drawer_shadow_vertical_offset }}px;
        --drawer-shadow-blur-radius: {{ settings.drawer_shadow_blur }}px;

        --spacing-sections-desktop: {{ settings.spacing_sections }}px;
        --spacing-sections-mobile: {% if settings.spacing_sections < 24 %}{{ settings.spacing_sections }}{% else %}{{ settings.spacing_sections | times: 0.7 | round | at_least: 20 }}{% endif %}px;

        --grid-desktop-vertical-spacing: {{ settings.spacing_grid_vertical }}px;
        --grid-desktop-horizontal-spacing: {{ settings.spacing_grid_horizontal }}px;
        --grid-mobile-vertical-spacing: {{ settings.spacing_grid_vertical | divided_by: 2 }}px;
        --grid-mobile-horizontal-spacing: {{ settings.spacing_grid_horizontal | divided_by: 2 }}px;

        --text-boxes-border-opacity: {{ settings.text_boxes_border_opacity | divided_by: 100.0 }};
        --text-boxes-border-width: {{ settings.text_boxes_border_thickness }}px;
        --text-boxes-radius: {{ settings.text_boxes_radius }}px;
        --text-boxes-shadow-opacity: {{ settings.text_boxes_shadow_opacity | divided_by: 100.0 }};
        --text-boxes-shadow-visible: {% if settings.text_boxes_shadow_opacity > 0 %}1{% else %}0{% endif %};
        --text-boxes-shadow-horizontal-offset: {{ settings.text_boxes_shadow_horizontal_offset }}px;
        --text-boxes-shadow-vertical-offset: {{ settings.text_boxes_shadow_vertical_offset }}px;
        --text-boxes-shadow-blur-radius: {{ settings.text_boxes_shadow_blur }}px;

        --buttons-radius: {{ settings.buttons_radius }}px;
        --buttons-radius-outset: {% if settings.buttons_radius > 0 %}{{ settings.buttons_radius | plus: settings.buttons_border_thickness }}{% else %}0{% endif %}px;
        --buttons-border-width: {% if settings.buttons_border_opacity > 0 %}{{ settings.buttons_border_thickness }}{% else %}0{% endif %}px;
        --buttons-border-opacity: {{ settings.buttons_border_opacity | divided_by: 100.0 }};
        --buttons-shadow-opacity: {{ settings.buttons_shadow_opacity | divided_by: 100.0 }};
        --buttons-shadow-visible: {% if settings.buttons_shadow_opacity > 0 %}1{% else %}0{% endif %};
        --buttons-shadow-horizontal-offset: {{ settings.buttons_shadow_horizontal_offset }}px;
        --buttons-shadow-vertical-offset: {{ settings.buttons_shadow_vertical_offset }}px;
        --buttons-shadow-blur-radius: {{ settings.buttons_shadow_blur }}px;
        --buttons-border-offset: {% if settings.buttons_radius > 0 or settings.buttons_shadow_opacity > 0 %}0.3{% else %}0{% endif %}px;

        --inputs-radius: {{ settings.inputs_radius }}px;
        --inputs-border-width: {{ settings.inputs_border_thickness }}px;
        --inputs-border-opacity: {{ settings.inputs_border_opacity | divided_by: 100.0 }};
        --inputs-shadow-opacity: {{ settings.inputs_shadow_opacity | divided_by: 100.0 }};
        --inputs-shadow-horizontal-offset: {{ settings.inputs_shadow_horizontal_offset }}px;
        --inputs-margin-offset: {% if settings.inputs_shadow_vertical_offset != 0 and settings.inputs_shadow_opacity > 0 %}{{ settings.inputs_shadow_vertical_offset | abs }}{% else %}0{% endif %}px;
        --inputs-shadow-vertical-offset: {{ settings.inputs_shadow_vertical_offset }}px;
        --inputs-shadow-blur-radius: {{ settings.inputs_shadow_blur }}px;
        --inputs-radius-outset: {% if settings.inputs_radius > 0 %}{{ settings.inputs_radius | plus: settings.inputs_border_thickness }}{% else %}0{% endif %}px;

        --variant-pills-radius: {{ settings.variant_pills_radius }}px;
        --variant-pills-border-width: {{ settings.variant_pills_border_thickness }}px;
        --variant-pills-border-opacity: {{ settings.variant_pills_border_opacity | divided_by: 100.0 }};
        --variant-pills-shadow-opacity: {{ settings.variant_pills_shadow_opacity | divided_by: 100.0 }};
        --variant-pills-shadow-horizontal-offset: {{ settings.variant_pills_shadow_horizontal_offset }}px;
        --variant-pills-shadow-vertical-offset: {{ settings.variant_pills_shadow_vertical_offset }}px;
        --variant-pills-shadow-blur-radius: {{ settings.variant_pills_shadow_blur }}px;
      }

      *,
      *::before,
      *::after {
        box-sizing: inherit;
      }

      html {
        box-sizing: border-box;
        font-size: calc(var(--font-body-scale) * 62.5%);
        height: 100%;
      }

      body {
        display: grid;
        grid-template-rows: auto auto 1fr auto;
        grid-template-columns: 100%;
        min-height: 100%;
        margin: 0;
        font-size: 1.5rem;
        letter-spacing: 0.06rem;
        line-height: calc(1 + 0.8 / var(--font-body-scale));
        font-family: var(--font-body-family);
        font-style: var(--font-body-style);
        font-weight: var(--font-body-weight);
      }

      @media screen and (min-width: 750px) {
        body {
          font-size: 1.6rem;
        }
      }
    {% endstyle %}

    {{ 'base.css' | asset_url | stylesheet_tag }}

    {%- unless settings.type_body_font.system? -%}
      <link rel="preload" as="font" href="{{ settings.type_body_font | font_url }}" type="font/woff2" crossorigin>
    {%- endunless -%}
    {%- unless settings.type_header_font.system? -%}
      <link rel="preload" as="font" href="{{ settings.type_header_font | font_url }}" type="font/woff2" crossorigin>
    {%- endunless -%}

    {%- if localization.available_countries.size > 1 or localization.available_languages.size > 1 -%}
      {{ 'component-localization-form.css' | asset_url | stylesheet_tag: preload: true }}
      <script src="{{ 'localization-form.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}

    {%- if settings.predictive_search_enabled -%}
      <link
        rel="stylesheet"
        href="{{ 'component-predictive-search.css' | asset_url }}"
        media="print"
        onload="this.media='all'"
      >
    {%- endif -%}

    <script>
      document.documentElement.className = document.documentElement.className.replace('no-js', 'js');
      if (Shopify.designMode) {
        document.documentElement.classList.add('shopify-design-mode');
      }
    </script>

    {{ 'wholesale.css' | asset_url | stylesheet_tag }}
    {{ 'techpack-app.css' | asset_url | stylesheet_tag }}
    {{ 'premium-enhancements.css' | asset_url | stylesheet_tag }}
  </head>

  <body class="{% if template contains 'bss-b2b-wholesaler-22949' %}wholesale-form{% endif %} {% if template contains 'index' %}home-section{% endif %} gradient{% if settings.animations_hover_elements != 'none' %} animate--hover-{{ settings.animations_hover_elements }}{% endif %}">
    <a class="skip-to-content-link button visually-hidden" href="#MainContent">
      {{ 'accessibility.skip_to_text' | t }}
    </a>

    {%- if settings.cart_type == 'drawer' -%}
      {%- render 'cart-drawer' -%}
    {%- endif -%}
    {% unless template contains 'index' %}
      {% sections 'header-group' %}
    {% endunless %}
    <main id="MainContent" class="content-for-layout focus-none" role="main" tabindex="-1">
      {{ content_for_layout }}
    </main>
    {% unless template contains 'index' %}
      {%- comment -%} Wholesale Inquiry Modal goes here {%- endcomment -%}
      {% render 'wholesale-modal' %}
      {% sections 'footer-group' %}
    {% endunless %}
    <ul hidden>
      <li id="a11y-refresh-page-message">{{ 'accessibility.refresh_page' | t }}</li>
      <li id="a11y-new-window-message">{{ 'accessibility.link_messages.new_window' | t }}</li>
    </ul>

    <script>
      window.shopUrl = '{{ request.origin }}';
      window.routes = {
        cart_add_url: '{{ routes.cart_add_url }}',
        cart_change_url: '{{ routes.cart_change_url }}',
        cart_update_url: '{{ routes.cart_update_url }}',
        cart_url: '{{ routes.cart_url }}',
        predictive_search_url: '{{ routes.predictive_search_url }}',
      };

      window.cartStrings = {
        error: `{{ 'sections.cart.cart_error' | t }}`,
        quantityError: `{{ 'sections.cart.cart_quantity_error_html' | t: quantity: '[quantity]' }}`
      }

      window.variantStrings = {
        addToCart: `{{ 'products.product.add_to_cart' | t }}`,
        soldOut: `{{ 'products.product.sold_out' | t }}`,
        unavailable: `{{ 'products.product.unavailable' | t }}`,
        unavailable_with_option: `{{ 'products.product.value_unavailable' | t: option_value: '[value]' }}`,
      }

      window.accessibilityStrings = {
        imageAvailable: `{{ 'products.product.media.image_available' | t: index: '[index]' }}`,
        shareSuccess: `{{ 'general.share.success_message' | t }}`,
        pauseSlideshow: `{{ 'sections.slideshow.pause_slideshow' | t }}`,
        playSlideshow: `{{ 'sections.slideshow.play_slideshow' | t }}`,
        recipientFormExpanded: `{{ 'recipient.form.expanded' | t }}`,
        recipientFormCollapsed: `{{ 'recipient.form.collapsed' | t }}`,
        countrySelectorSearchCount: `{{ 'localization.country_results_count' | t: count: '[count]' }}`
      }
    </script>

    {%- if settings.predictive_search_enabled -%}
      <script src="{{ 'predictive-search.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}

    <!-- CLICKABLE CARDS SCRIPT -->
    <script>
    document.addEventListener('DOMContentLoaded', function() {
      console.log('🎯 Making product cards clickable...');
      
      function makeCardsClickable() {
        const productCards = document.querySelectorAll(
          '.product-card-wrapper, .card-wrapper, .product-recommendations .card-wrapper, .you-may-also-like .card-wrapper, .card, .collection .card-wrapper'
        );
        
        productCards.forEach(card => {
          // Skip if already processed
          if (card.hasAttribute('data-clickable-processed')) return;
          
          // Find the main product link
          const productLink = card.querySelector(
            '.card__heading a, .card__information a, .card__media a, a[href*="/products/"]'
          );
          
          if (productLink && productLink.href) {
            const productUrl = productLink.href;
            
            // Mark as processed
            card.setAttribute('data-clickable-processed', 'true');
            
            // Make the whole card clickable
            card.style.cursor = 'pointer';
            card.addEventListener('click', function(e) {
              // Don't interfere with existing links, buttons, or form elements
              if (e.target.closest('a, button, input, textarea, select, [contenteditable]')) {
                return;
              }
              
              // Navigate to product
              window.location.href = productUrl;
            });
            
            console.log('✅ Made card clickable:', productUrl);
          }
        });
      }
      
      // Initial run
      makeCardsClickable();
      
      // Re-run when new content loads (like AJAX pagination)
      const observer = new MutationObserver(function(mutations) {
        let shouldReprocess = false;
        mutations.forEach(mutation => {
          if (mutation.addedNodes.length > 0) {
            mutation.addedNodes.forEach(node => {
              if (node.nodeType === 1 && (
                node.classList.contains('card-wrapper') ||
                node.querySelector('.card-wrapper') ||
                node.classList.contains('product-card-wrapper') ||
                node.querySelector('.product-card-wrapper')
              )) {
                shouldReprocess = true;
              }
            });
          }
        });
        
        if (shouldReprocess) {
          setTimeout(makeCardsClickable, 100);
        }
      });
      
      observer.observe(document.body, {
        childList: true,
        subtree: true
      });
    });
    </script>
    <!-- END CLICKABLE CARDS SCRIPT -->

    <!-- PREMIUM SCROLL EFFECTS SCRIPT - HOMEPAGE ONLY -->
    <script>
    // ===============================================
    // PREMIUM SCROLL EFFECTS JAVASCRIPT
    // 🏠 HOMEPAGE ONLY VERSION
    // ===============================================
    
    document.addEventListener('DOMContentLoaded', function() {
      
      // ⚠️ CRITICAL: Check if we're on the homepage before doing ANYTHING
      const isHomepage = document.body.classList.contains('home-section');
      if (!isHomepage) {
        console.log('❌ Not homepage, skipping premium scroll effects');
        return;
      }
      
      console.log('🏠 Homepage detected - initializing premium scroll effects');
      
      // ===============================================
      // SCROLL PROGRESS BAR
      // ===============================================
      function createScrollProgress() {
        const progressBar = document.createElement('div');
        progressBar.className = 'scroll-progress';
        progressBar.style.cssText = `
          position: fixed;
          top: 0;
          left: 0;
          width: 0%;
          height: 3px;
          background: linear-gradient(90deg, #ff6b6b, #4ecdc4);
          z-index: 9999;
          transition: width 0.3s ease;
        `;
        document.body.appendChild(progressBar);
        
        function updateProgress() {
          const scrolled = (window.pageYOffset / (document.documentElement.scrollHeight - window.innerHeight)) * 100;
          progressBar.style.width = scrolled + '%';
        }
        
        window.addEventListener('scroll', updateProgress);
        updateProgress();
      }
      
      // ===============================================
      // SCROLL INDICATORS (DOT NAVIGATION)
      // ===============================================
      function createScrollIndicators() {
        const sections = document.querySelectorAll('.section, .shopify-section');
        if (sections.length <= 1) return;
        
        const indicators = document.createElement('div');
        indicators.className = 'scroll-indicators';
        indicators.style.cssText = `
          position: fixed;
          right: 20px;
          top: 50%;
          transform: translateY(-50%);
          z-index: 1000;
          display: flex;
          flex-direction: column;
          gap: 10px;
        `;
        
        sections.forEach((section, index) => {
          const indicator = document.createElement('div');
          indicator.className = 'scroll-indicator';
          indicator.style.cssText = `
            width: 10px;
            height: 10px;
            border-radius: 50%;
            background: rgba(0,0,0,0.3);
            cursor: pointer;
            transition: all 0.3s ease;
          `;
          indicator.setAttribute('data-section', index);
          
          indicator.addEventListener('click', () => {
            section.scrollIntoView({ behavior: 'smooth' });
          });
          
          indicators.appendChild(indicator);
        });
        
        document.body.appendChild(indicators);
        
        // Update active indicator on scroll
        function updateActiveIndicator() {
          const scrollPosition = window.pageYOffset + window.innerHeight / 2;
          
          sections.forEach((section, index) => {
            const sectionTop = section.offsetTop;
            const sectionBottom = sectionTop + section.offsetHeight;
            const indicator = indicators.children[index];
            
            if (scrollPosition >= sectionTop && scrollPosition <= sectionBottom) {
              indicator.style.background = '#007bff';
              indicator.style.transform = 'scale(1.3)';
            } else {
              indicator.style.background = 'rgba(0,0,0,0.3)';
              indicator.style.transform = 'scale(1)';
            }
          });
        }
        
        window.addEventListener('scroll', updateActiveIndicator);
        updateActiveIndicator();
      }
      
      // ===============================================
      // FLOATING PARTICLES
      // ===============================================
      function createFloatingElements() {
        const container = document.createElement('div');
        container.className = 'floating-elements';
        container.style.cssText = `
          position: fixed;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          pointer-events: none;
          z-index: 1;
        `;
        
        for (let i = 0; i < 4; i++) {
          const shape = document.createElement('div');
          shape.className = 'floating-shape';
          shape.style.cssText = `
            position: absolute;
            width: 20px;
            height: 20px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            animation: float${i} ${15 + i * 2}s infinite linear;
            top: ${Math.random() * 100}%;
            left: ${Math.random() * 100}%;
          `;
          container.appendChild(shape);
        }
        
        // Add floating animations
        const style = document.createElement('style');
        style.textContent = `
          @keyframes float0 {
            0% { transform: translateY(0px) rotate(0deg); }
            100% { transform: translateY(-100vh) rotate(360deg); }
          }
          @keyframes float1 {
            0% { transform: translateY(0px) rotate(0deg); }
            100% { transform: translateY(-100vh) rotate(-360deg); }
          }
          @keyframes float2 {
            0% { transform: translateY(0px) rotate(0deg); }
            100% { transform: translateY(-100vh) rotate(180deg); }
          }
          @keyframes float3 {
            0% { transform: translateY(0px) rotate(0deg); }
            100% { transform: translateY(-100vh) rotate(-180deg); }
          }
        `;
        document.head.appendChild(style);
        document.body.appendChild(container);
      }
      
      // ===============================================
      // ENHANCED PRODUCT GRID ANIMATIONS
      // ===============================================
      function animateProductGrids() {
        const productGrids = document.querySelectorAll('.product-grid, .collection-grid');
        
        const observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              entry.target.classList.add('animate-in');
              
              // Stagger animation for grid items
              const items = entry.target.querySelectorAll('.grid__item');
              items.forEach((item, index) => {
                setTimeout(() => {
                  item.style.opacity = '1';
                  item.style.transform = 'translateY(0)';
                }, index * 100);
              });
            }
          });
        }, {
          threshold: 0.1,
          rootMargin: '50px'
        });
        
        productGrids.forEach(grid => observer.observe(grid));
      }
      
      // ===============================================
      // SECTION REVEAL ANIMATIONS
      // ===============================================
      function animateSections() {
        const sections = document.querySelectorAll('.section, .shopify-section');
        
        const observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              entry.target.style.opacity = '1';
              entry.target.style.transform = 'translateY(0)';
            }
          });
        }, {
          threshold: 0.1,
          rootMargin: '100px'
        });
        
        sections.forEach(section => {
          section.style.opacity = '0';
          section.style.transform = 'translateY(30px)';
          section.style.transition = 'opacity 0.8s ease, transform 0.8s ease';
          observer.observe(section);
        });
      }
      
      // ===============================================
      // CUSTOM CURSOR
      // ===============================================
      function createCustomCursor() {
        const cursor = document.createElement('div');
        cursor.className = 'custom-cursor';
        cursor.style.cssText = `
          position: fixed;
          width: 20px;
          height: 20px;
          background: rgba(255, 255, 255, 0.8);
          border-radius: 50%;
          pointer-events: none;
          z-index: 9999;
          transition: transform 0.1s ease;
          mix-blend-mode: difference;
        `;
        document.body.appendChild(cursor);
        
        document.addEventListener('mousemove', (e) => {
          cursor.style.left = e.clientX - 10 + 'px';
          cursor.style.top = e.clientY - 10 + 'px';
        });
        
        // Scale cursor on hover
        document.addEventListener('mouseenter', (e) => {
          if (e.target.tagName === 'A' || e.target.tagName === 'BUTTON') {
            cursor.style.transform = 'scale(2)';
          }
        }, true);
        
        document.addEventListener('mouseleave', (e) => {
          if (e.target.tagName === 'A' || e.target.tagName === 'BUTTON') {
            cursor.style.transform = 'scale(1)';
          }
        }, true);
      }
      
      // ===============================================
      // PARALLAX FOR HERO SECTIONS
      // ===============================================
      function initParallax() {
        const heroSections = document.querySelectorAll('.hero-section, .banner-section, [data-section-type="hero"]');
        
        function updateParallax() {
          const scrolled = window.pageYOffset;
          
          heroSections.forEach(section => {
            const rate = scrolled * -0.5;
            const bg = section.querySelector('::before') || section;
            if (bg.style) {
              bg.style.transform = `translateY(${rate}px)`;
            }
          });
        }
        
        window.addEventListener('scroll', updateParallax);
      }
      
      // ===============================================
      // ENHANCED PAGE TRANSITIONS
      // ===============================================
      function enhancePageTransitions() {
        // Work with your existing scroll system
        let isScrolling = false;
        
        window.addEventListener('scroll', () => {
          if (!isScrolling) {
            isScrolling = true;
            
            // Add transition class during scroll
            document.body.classList.add('scrolling');
            
            setTimeout(() => {
              isScrolling = false;
              document.body.classList.remove('scrolling');
            }, 150);
          }
        });
      }
      
      // ===============================================
      // LOADING SKELETONS
      // ===============================================
      function createLoadingSkeletons() {
        const productCards = document.querySelectorAll('.product-card-wrapper, .card-wrapper');
        
        productCards.forEach(card => {
          const img = card.querySelector('img');
          if (img && !img.complete) {
            const skeleton = document.createElement('div');
            skeleton.className = 'skeleton skeleton-product';
            skeleton.style.cssText = `
              position: absolute;
              top: 0;
              left: 0;
              width: 100%;
              height: 100%;
              background: linear-gradient(90deg, #f0f0f0, #e0e0e0, #f0f0f0);
              background-size: 200% 100%;
              animation: shimmer 1.5s infinite;
            `;
            img.parentNode.style.position = 'relative';
            img.parentNode.insertBefore(skeleton, img);
            
            img.addEventListener('load', () => {
              skeleton.remove();
            });
          }
        });
        
        // Add shimmer animation
        if (!document.querySelector('#shimmer-style')) {
          const style = document.createElement('style');
          style.id = 'shimmer-style';
          style.textContent = `
            @keyframes shimmer {
              0% { background-position: -200% 0; }
              100% { background-position: 200% 0; }
            }
          `;
          document.head.appendChild(style);
        }
      }
      
      // ===============================================
      // INITIALIZE ALL EFFECTS
      // ===============================================
      function initAllEffects() {
        // Check if user prefers reduced motion
        const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
        
        if (!prefersReducedMotion) {
          createScrollProgress();
          createScrollIndicators();
          createFloatingElements();
          animateProductGrids();
          animateSections();
          createCustomCursor();
          initParallax();
          enhancePageTransitions();
        }
        
        // Always run these (they have reduced motion fallbacks)
        createLoadingSkeletons();
      }
      
      // Start everything
      initAllEffects();
      
      // ===============================================
      // COMPATIBILITY WITH EXISTING SCROLL SYSTEM
      // ===============================================
      
      // Listen for your existing scroll events and enhance them
      window.addEventListener('wheel', (e) => {
        // Add smooth transition during your page-to-page scroll
        document.body.classList.add('page-transitioning');
        
        setTimeout(() => {
          document.body.classList.remove('page-transitioning');
        }, 1000);
      });
      
      // Enhance existing scroll animations
      const existingScrollElements = document.querySelectorAll('[data-scroll]');
      existingScrollElements.forEach(element => {
        element.style.transition = 'all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94)';
      });
      
    });
    </script>
    <!-- END PREMIUM SCROLL EFFECTS SCRIPT -->

    {% render 'wholesale-modal' %}
    <script src="{{ 'wholesale.js'  | asset_url }}" defer></script>
    <script src="{{ 'techpack-app.js' | asset_url }}" defer></script>
    <script src="{{ 'scroll-fix.js' | asset_url }}" defer></script>
    <script>
    document.addEventListener('DOMContentLoaded', function() {
      
      // ===============================================
      // MAKE PRODUCT CARDS CLICKABLE
      // ===============================================
      
      function makeCardsClickable() {
        console.log('🎯 Making product cards clickable...');
        
        const productCards = document.querySelectorAll(
          '.product-card-wrapper, .card-wrapper, .product-recommendations .card-wrapper, .you-may-also-like .card-wrapper, .card, .collection .card-wrapper'
        );
        
        productCards.forEach(card => {
          // Skip if already processed
          if (card.hasAttribute('data-clickable-processed')) return;
          
          // Find the main product link
          const productLink = card.querySelector(
            '.card__heading a, .card__information a, .card__media a, a[href*="/products/"]'
          );
          
          if (productLink && productLink.href) {
            const productUrl = productLink.href;
            
            // Mark as processed
            card.setAttribute('data-clickable-processed', 'true');
            
            // Make the whole card clickable
            card.style.cursor = 'pointer';
            card.addEventListener('click', function(e) {
              // Don't interfere with existing links, buttons, or form elements
              if (e.target.closest('a, button, input, textarea, select, [contenteditable]')) {
                return;
              }
              
              // Navigate to product
              window.location.href = productUrl;
            });
            
            console.log('✅ Made card clickable:', productUrl);
          }
        });
      }
      
      // Initial run
      makeCardsClickable();
      
      // Re-run when new content loads (like AJAX pagination)
      const observer = new MutationObserver(function(mutations) {
        let shouldReprocess = false;
        mutations.forEach(mutation => {
          if (mutation.addedNodes.length > 0) {
            mutation.addedNodes.forEach(node => {
              if (node.nodeType === 1 && (
                node.classList.contains('card-wrapper') ||
                node.querySelector('.card-wrapper') ||
                node.classList.contains('product-card-wrapper') ||
                node.querySelector('.product-card-wrapper')
              )) {
                shouldReprocess = true;
              }
            });
          }
        });
        
        if (shouldReprocess) {
          setTimeout(makeCardsClickable, 100);
        }
      });
      
      observer.observe(document.body, {
        childList: true,
        subtree: true
      });
    });
    </script>

    <script>
    // Fix scroll animations after navigation/refresh - HOMEPAGE ONLY
    function reinitializeScrollAnimations() {
      // ⚠️ CRITICAL: Only run on homepage
      const isHomepage = document.body.classList.contains('home-section');
      if (!isHomepage) {
        console.log('❌ Not homepage, skipping scroll animation reinitialization');
        return;
      }
      
      // Re-run the scroll animation initialization
      if (typeof initializeScrollAnimationTrigger === 'function') {
        initializeScrollAnimationTrigger();
      }
      
      // Re-run zoom animations
      if (typeof initializeScrollZoomAnimationTrigger === 'function') {
        initializeScrollZoomAnimationTrigger();
      }
      
      // Reset any offscreen elements
      const offscreenElements = document.querySelectorAll('.scroll-trigger--offscreen');
      offscreenElements.forEach(element => {
        if (element.getBoundingClientRect().top < window.innerHeight) {
          element.classList.remove('scroll-trigger--offscreen');
        }
      });
    }
    
    // Reinitialize on page navigation
    document.addEventListener('shopify:section:load', reinitializeScrollAnimations);
    document.addEventListener('DOMContentLoaded', reinitializeScrollAnimations);
    
    // Fix for theme editor and navigation
    if (Shopify && Shopify.designMode) {
      document.addEventListener('shopify:section:load', () => {
        setTimeout(reinitializeScrollAnimations, 100);
      });
    }
    
    // Additional fix for page visibility changes
    document.addEventListener('visibilitychange', () => {
      if (!document.hidden) {
        setTimeout(reinitializeScrollAnimations, 100);
      }
    });
    </script>
    
  </body>
</html>