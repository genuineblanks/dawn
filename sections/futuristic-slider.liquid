{{ 'portfolio-showcase.css' | asset_url | stylesheet_tag }}

<div class="portfolio-showcase" data-section-id="{{ section.id }}">
  <div class="page-width">
    
    {% comment %} Section Header {% endcomment %}
    {% if section.settings.heading != blank or section.settings.subheading != blank %}
      <div class="portfolio-showcase__header">
        {% if section.settings.heading != blank %}
          <h2 class="portfolio-showcase__title">{{ section.settings.heading }}</h2>
        {% endif %}
        {% if section.settings.subheading != blank %}
          <div class="portfolio-showcase__subtitle">{{ section.settings.subheading }}</div>
        {% endif %}
      </div>
    {% endif %}

    {% comment %} Collection Type Filter {% endcomment %}
    {% if section.settings.show_collection_filter %}
      <div class="portfolio-showcase__filter">
        <div class="portfolio-showcase__filter-tabs">
          <button class="portfolio-showcase__filter-tab active" data-filter="products">
            <span class="portfolio-showcase__filter-icon">
              <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
                <path d="M10 2L3 7V18H8V13H12V18H17V7L10 2Z" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </span>
            <span class="portfolio-showcase__filter-text">Our Products</span>
          </button>
          <button class="portfolio-showcase__filter-tab" data-filter="factory">
            <span class="portfolio-showcase__filter-icon">
              <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
                <path d="M3 17H17V9L10 3L3 9V17Z" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </span>
            <span class="portfolio-showcase__filter-text">Our Factory</span>
          </button>
          <button class="portfolio-showcase__filter-tab" data-filter="team">
            <span class="portfolio-showcase__filter-icon">
              <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
                <path d="M16 7C16 9.20914 14.2091 11 12 11C9.79086 11 8 9.20914 8 7C8 4.79086 9.79086 3 12 3C14.2091 3 16 4.79086 16 7Z" stroke="currentColor" stroke-width="1.5"/>
                <path d="M12 14C8.13401 14 5 17.134 5 21H19C19 17.134 15.866 14 12 14Z" stroke="currentColor" stroke-width="1.5"/>
              </svg>
            </span>
            <span class="portfolio-showcase__filter-text">Our Team</span>
          </button>
        </div>
      </div>
    {% endif %}

    {% if section.blocks.size > 0 %}
      <div class="portfolio-showcase__wrapper">
        
        {% comment %} Main Content Area - Horizontal Layout {% endcomment %}
        <div class="portfolio-showcase__main-content">
          
          {% comment %} Gallery Section - Left Side {% endcomment %}
          <div class="portfolio-showcase__gallery">
            <div class="portfolio-showcase__main-container">
              <div class="swiper portfolio-showcase__main-swiper">
                <div class="swiper-wrapper">
                  {% assign slide_index = 0 %}
                  {% for block in section.blocks %}
                    {% assign block_filter = block.settings.collection_type | default: 'products' %}
                    {% for i in (1..5) %}
                      {% assign image_key = 'image_' | append: i %}
                      {% assign title_key = 'title_' | append: i %}
                      {% assign description_key = 'description_' | append: i %}
                      {% assign current_image = block.settings[image_key] %}
                      {% assign current_title = block.settings[title_key] %}
                      {% assign current_description = block.settings[description_key] %}
                      {% if current_image != blank %}
                        <div class="swiper-slide portfolio-showcase__slide" 
                             data-filter="{{ block_filter }}" 
                             data-block="{{ forloop.index0 }}"
                             data-image="{{ i }}"
                             data-slide-index="{{ slide_index }}">
                          <div class="portfolio-showcase__slide-inner">
                            {{ current_image | image_url: width: 800 | image_tag: 
                              class: 'portfolio-showcase__image', 
                              loading: 'lazy',
                              alt: current_title | default: 'Portfolio Image' | escape
                            }}
                            <div class="portfolio-showcase__slide-overlay">
                              <button class="portfolio-showcase__zoom-btn" data-image="{{ current_image | image_url: width: 1600 }}">
                                <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
                                  <path d="M21 21L16.514 16.506M19 10.5C19 15.194 15.194 19 10.5 19S2 15.194 2 10.5 5.806 2 10.5 2 19 5.806 19 10.5Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                </svg>
                              </button>
                            </div>
                          </div>
                        </div>
                        {% assign slide_index = slide_index | plus: 1 %}
                      {% endif %}
                    {% endfor %}
                  {% endfor %}
                </div>
                
                {% if section.settings.show_navigation %}
                  <div class="portfolio-showcase__navigation">
                    <button class="portfolio-showcase__nav portfolio-showcase__nav--prev swiper-button-prev">
                      <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
                        <path d="M15 18L9 12L15 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                      </svg>
                    </button>
                    <button class="portfolio-showcase__nav portfolio-showcase__nav--next swiper-button-next">
                      <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
                        <path d="M9 18L15 12L9 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                      </svg>
                    </button>
                  </div>
                {% endif %}
                
                {% if section.settings.show_pagination %}
                  <div class="portfolio-showcase__pagination swiper-pagination"></div>
                {% endif %}
              </div>
            </div>
          </div>

          {% comment %} Product Information Panel - Right Side {% endcomment %}
          <div class="portfolio-showcase__info">
            <div class="portfolio-showcase__info-content">
              {% comment %} Single info container that will be dynamically updated {% endcomment %}
              <div class="portfolio-showcase__product-info">
                <h3 class="portfolio-showcase__product-title" id="current-title">Select an image</h3>
                <div class="portfolio-showcase__description" id="current-description">
                  <p>Use the navigation to browse through the portfolio images.</p>
                </div>
              </div>
            </div>
          </div>
        </div>

        {% comment %} Thumbnails - Full Width Below Main Content {% endcomment %}
        {% if section.settings.show_thumbnails %}
          <div class="portfolio-showcase__thumbnails">
            <div class="portfolio-showcase__thumb-navigation">
              <button class="portfolio-showcase__thumb-nav portfolio-showcase__thumb-prev">
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
                  <path d="M15 18L9 12L15 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
              </button>
              <button class="portfolio-showcase__thumb-nav portfolio-showcase__thumb-next">
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
                  <path d="M9 18L15 12L9 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
              </button>
            </div>
            <div class="swiper portfolio-showcase__thumb-swiper">
              <div class="swiper-wrapper">
                {% assign thumb_index = 0 %}
                {% for block in section.blocks %}
                  {% assign block_filter = block.settings.collection_type | default: 'products' %}
                  {% for i in (1..5) %}
                    {% assign image_key = 'image_' | append: i %}
                    {% assign current_image = block.settings[image_key] %}
                    {% if current_image != blank %}
                      <div class="swiper-slide portfolio-showcase__thumb-slide" 
                           data-filter="{{ block_filter }}" 
                           data-block="{{ forloop.index0 }}"
                           data-image="{{ i }}"
                           data-thumb-index="{{ thumb_index }}">
                        <div class="portfolio-showcase__thumb-container">
                          {{ current_image | image_url: width: 150 | image_tag: 
                            class: 'portfolio-showcase__thumb-image', 
                            loading: 'lazy'
                          }}
                        </div>
                      </div>
                      {% assign thumb_index = thumb_index | plus: 1 %}
                    {% endif %}
                  {% endfor %}
                {% endfor %}
              </div>
            </div>
          </div>
        {% endif %}
      </div>

      {% comment %} Lightbox Modal {% endcomment %}
      <div class="portfolio-showcase__lightbox" id="lightbox-{{ section.id }}">
        <div class="portfolio-showcase__lightbox-backdrop"></div>
        <div class="portfolio-showcase__lightbox-content">
          <button class="portfolio-showcase__lightbox-close">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
              <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </button>
          <img src="" alt="" class="portfolio-showcase__lightbox-image">
        </div>
      </div>

    {% else %}
      <div class="portfolio-showcase__empty">
        <div class="portfolio-showcase__empty-icon">
          <svg width="48" height="48" viewBox="0 0 64 64" fill="none">
            <path d="M32 8L8 20V52H24V36H40V52H56V20L32 8Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </div>
        <h3>No items to display</h3>
        <p>Add product blocks in the theme editor to showcase your portfolio.</p>
      </div>
    {% endif %}
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@10/swiper-bundle.min.css">

<script>
document.addEventListener('DOMContentLoaded', function() {
  const sectionId = '{{ section.id }}';
  const section = document.querySelector(`[data-section-id="${sectionId}"]`);
  
  if (!section) return;
  
  let mainSwiperInstance = null;
  let thumbSwiperInstance = null;
  let currentFilter = 'products';
  const blocks = {{ section.blocks | json }};
  
  // Create image data mapping - each image has its own title and description
  let imageDataMap = [];
  let categoryRanges = {
    products: { start: null, end: null },
    factory: { start: null, end: null },
    team: { start: null, end: null }
  };
  
  // Build image data mapping from blocks data and DOM
  function buildImageDataMapping() {
    const allSlides = section.querySelectorAll('.portfolio-showcase__slide');
    imageDataMap = [];
    
    // Reset category ranges
    categoryRanges = {
      products: { start: null, end: null },
      factory: { start: null, end: null },
      team: { start: null, end: null }
    };
    
    allSlides.forEach((slide, index) => {
      const filter = slide.getAttribute('data-filter');
      const blockIndex = parseInt(slide.getAttribute('data-block'));
      const imageIndex = parseInt(slide.getAttribute('data-image'));
      
      // Get title and description from blocks data
      const block = blocks[blockIndex];
      const title = block.settings[`title_${imageIndex}`] || 'Portfolio Image';
      const description = block.settings[`description_${imageIndex}`] || '';
      
      imageDataMap.push({
        index: index,
        filter: filter,
        blockIndex: blockIndex,
        imageIndex: imageIndex,
        title: title,
        description: description
      });
      
      // Track category ranges
      if (categoryRanges[filter].start === null) {
        categoryRanges[filter].start = index;
      }
      categoryRanges[filter].end = index;
    });
    
    console.log('Image Data Map:', imageDataMap);
    console.log('Category Ranges:', categoryRanges);
  }
  
  // Get category for current slide index
  function getCategoryForSlide(slideIndex) {
    return imageDataMap[slideIndex]?.filter || 'products';
  }
  
  // Get first slide index for a category
  function getFirstSlideForCategory(category) {
    return categoryRanges[category]?.start || 0;
  }
  
  // Update active filter tab based on current slide
  function updateActiveFilterTab(slideIndex) {
    const category = getCategoryForSlide(slideIndex);
    
    if (category !== currentFilter) {
      currentFilter = category;
      
      // Update filter tab appearance
      section.querySelectorAll('.portfolio-showcase__filter-tab').forEach(tab => {
        tab.classList.remove('active');
      });
      
      const activeTab = section.querySelector(`[data-filter="${category}"]`);
      if (activeTab) {
        activeTab.classList.add('active');
      }
    }
  }
  
  // Initialize Swipers - Show ALL slides, no filtering
  function initializeSwipers() {
    const mainSwiper = section.querySelector('.portfolio-showcase__main-swiper');
    const thumbSwiper = section.querySelector('.portfolio-showcase__thumb-swiper');
    
    if (!mainSwiper) return;

    // Destroy existing instances
    if (mainSwiperInstance) {
      mainSwiperInstance.destroy(true, true);
      mainSwiperInstance = null;
    }
    if (thumbSwiperInstance) {
      thumbSwiperInstance.destroy(true, true);
      thumbSwiperInstance = null;
    }

    // Show all slides and thumbnails
    section.querySelectorAll('.portfolio-showcase__slide').forEach(slide => {
      slide.style.display = 'block';
    });
    
    section.querySelectorAll('.portfolio-showcase__thumb-slide').forEach(slide => {
      slide.style.display = 'block';
    });

    // Initialize thumbnail swiper with navigation
    if (thumbSwiper) {
      thumbSwiperInstance = new Swiper(thumbSwiper, {
        spaceBetween: 10,
        slidesPerView: 'auto',
        freeMode: false,
        watchSlidesProgress: true,
        navigation: {
          nextEl: '.portfolio-showcase__thumb-next',
          prevEl: '.portfolio-showcase__thumb-prev',
        },
        breakpoints: {
          640: { slidesPerView: 'auto', spaceBetween: 12 },
          768: { slidesPerView: 'auto', spaceBetween: 16 }
        },
        on: {
          slideChange: function() {
            // Sync main slider with thumbnail slider
            if (mainSwiperInstance) {
              mainSwiperInstance.slideTo(this.activeIndex);
            }
          }
        }
      });
    }

    // Initialize main swiper
    mainSwiperInstance = new Swiper(mainSwiper, {
      spaceBetween: 0,
      effect: 'fade',
      fadeEffect: { crossFade: true },
      speed: 600,
      autoplay: {{ section.settings.autoplay | json }} ? {
        delay: {{ section.settings.autoplay_speed | times: 1000 }},
        disableOnInteraction: false,
        pauseOnMouseEnter: true
      } : false,
      navigation: {
        nextEl: section.querySelector('.portfolio-showcase__nav--next'),
        prevEl: section.querySelector('.portfolio-showcase__nav--prev'),
      },
      pagination: {
        el: section.querySelector('.portfolio-showcase__pagination'),
        clickable: true,
      },
      thumbs: thumbSwiperInstance ? { swiper: thumbSwiperInstance } : undefined,
      on: {
        slideChange: function() {
          const slideIndex = this.activeIndex;
          updateImageInfo(slideIndex);
          updateActiveFilterTab(slideIndex);
          
          // Sync thumbnail slider
          if (thumbSwiperInstance && thumbSwiperInstance.activeIndex !== slideIndex) {
            thumbSwiperInstance.slideTo(slideIndex);
          }
        }
      }
    });
  }

  // Update image information based on active slide
  function updateImageInfo(slideIndex) {
    if (!imageDataMap[slideIndex]) return;
    
    const imageData = imageDataMap[slideIndex];
    const titleElement = section.querySelector('#current-title');
    const descriptionElement = section.querySelector('#current-description');
    
    console.log('Updating image info for slide:', slideIndex, 'Data:', imageData);
    
    if (titleElement) {
      titleElement.textContent = imageData.title || 'Portfolio Image';
    }
    
    if (descriptionElement) {
      if (imageData.description && imageData.description.trim() !== '') {
        descriptionElement.innerHTML = imageData.description;
      } else {
        descriptionElement.innerHTML = '<p>No description available.</p>';
      }
    }
  }

  // Jump to first slide of specific category
  function jumpToCategory(category) {
    const firstSlideIndex = getFirstSlideForCategory(category);
    
    console.log('Jumping to category:', category, 'First slide index:', firstSlideIndex);
    
    if (mainSwiperInstance) {
      mainSwiperInstance.slideTo(firstSlideIndex);
    }
    
    if (thumbSwiperInstance) {
      thumbSwiperInstance.slideTo(firstSlideIndex);
    }
    
    // Update the current filter
    currentFilter = category;
    
    // Manually update the image info since slideTo might not trigger slideChange event immediately
    updateImageInfo(firstSlideIndex);
    
    // Also ensure the filter tab appearance is updated
    updateActiveFilterTab(firstSlideIndex);
  }

  // Event listeners for filter tabs - now jump to category instead of filtering
  section.querySelectorAll('.portfolio-showcase__filter-tab').forEach(tab => {
    tab.addEventListener('click', function() {
      const category = this.getAttribute('data-filter');
      jumpToCategory(category);
    });
  });

  // Lightbox functionality
  const lightbox = section.querySelector('.portfolio-showcase__lightbox');
  const lightboxImage = lightbox.querySelector('.portfolio-showcase__lightbox-image');
  
  section.addEventListener('click', function(e) {
    if (e.target.closest('.portfolio-showcase__zoom-btn')) {
      e.preventDefault();
      e.stopPropagation();
      const btn = e.target.closest('.portfolio-showcase__zoom-btn');
      const imageUrl = btn.getAttribute('data-image');
      lightboxImage.src = imageUrl;
      lightbox.classList.add('active');
      document.body.style.overflow = 'hidden';
    }
  });

  lightbox.querySelector('.portfolio-showcase__lightbox-close').addEventListener('click', function() {
    lightbox.classList.remove('active');
    document.body.style.overflow = '';
  });

  lightbox.addEventListener('click', function(e) {
    if (e.target === lightbox || e.target.classList.contains('portfolio-showcase__lightbox-backdrop')) {
      lightbox.classList.remove('active');
      document.body.style.overflow = '';
    }
  });

  // Initialize everything
  buildImageDataMapping();
  initializeSwipers();
  
  // Set initial state
  setTimeout(() => {
    updateActiveFilterTab(0);
    updateImageInfo(0);
  }, 100);
});
</script>

{% schema %}
{
  "name": "Portfolio Showcase",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "header",
      "content": "Section Header"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Our Manufacturing Portfolio"
    },
    {
      "type": "richtext",
      "id": "subheading",
      "label": "Description",
      "default": "<p>Explore our previous work and see the quality craftsmanship that goes into every piece we manufacture.</p>"
    },
    {
      "type": "header",
      "content": "Collection Filter"
    },
    {
      "type": "checkbox",
      "id": "show_collection_filter",
      "label": "Show collection type filter",
      "default": true,
      "info": "Allows filtering between Products, Factory, and Team"
    },
    {
      "type": "header",
      "content": "Display Options"
    },
    {
      "type": "checkbox",
      "id": "show_thumbnails",
      "label": "Show thumbnail navigation",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_navigation",
      "label": "Show arrow navigation",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_pagination",
      "label": "Show dot pagination",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "Auto-rotate slides",
      "default": false
    },
    {
      "type": "range",
      "id": "autoplay_speed",
      "min": 3,
      "max": 10,
      "step": 1,
      "unit": "s",
      "label": "Auto-rotate speed",
      "default": 5
    }
  ],
  "blocks": [
    {
      "type": "item",
      "name": "Portfolio Item",
      "limit": 20,
      "settings": [
        {
          "type": "select",
          "id": "collection_type",
          "label": "Collection Type",
          "options": [
            {
              "value": "products",
              "label": "Our Products"
            },
            {
              "value": "factory",
              "label": "Our Factory"
            },
            {
              "value": "team",
              "label": "Our Team"
            }
          ],
          "default": "products"
        },
        {
          "type": "header",
          "content": "Image 1"
        },
        {
          "type": "image_picker",
          "id": "image_1",
          "label": "Image 1"
        },
        {
          "type": "text",
          "id": "title_1",
          "label": "Image 1 Title",
          "default": "Portfolio Image 1"
        },
        {
          "type": "richtext",
          "id": "description_1",
          "label": "Image 1 Description",
          "default": "<p>Description for the first image in this portfolio item.</p>"
        },
        {
          "type": "header",
          "content": "Image 2"
        },
        {
          "type": "image_picker",
          "id": "image_2",
          "label": "Image 2"
        },
        {
          "type": "text",
          "id": "title_2",
          "label": "Image 2 Title",
          "default": "Portfolio Image 2"
        },
        {
          "type": "richtext",
          "id": "description_2",
          "label": "Image 2 Description",
          "default": "<p>Description for the second image in this portfolio item.</p>"
        },
        {
          "type": "header",
          "content": "Image 3"
        },
        {
          "type": "image_picker",
          "id": "image_3",
          "label": "Image 3"
        },
        {
          "type": "text",
          "id": "title_3",
          "label": "Image 3 Title",
          "default": "Portfolio Image 3"
        },
        {
          "type": "richtext",
          "id": "description_3",
          "label": "Image 3 Description",
          "default": "<p>Description for the third image in this portfolio item.</p>"
        },
        {
          "type": "header",
          "content": "Image 4"
        },
        {
          "type": "image_picker",
          "id": "image_4",
          "label": "Image 4"
        },
        {
          "type": "text",
          "id": "title_4",
          "label": "Image 4 Title",
          "default": "Portfolio Image 4"
        },
        {
          "type": "richtext",
          "id": "description_4",
          "label": "Image 4 Description",
          "default": "<p>Description for the fourth image in this portfolio item.</p>"
        },
        {
          "type": "header",
          "content": "Image 5"
        },
        {
          "type": "image_picker",
          "id": "image_5",
          "label": "Image 5"
        },
        {
          "type": "text",
          "id": "title_5",
          "label": "Image 5 Title",
          "default": "Portfolio Image 5"
        },
        {
          "type": "richtext",
          "id": "description_5",
          "label": "Image 5 Description",
          "default": "<p>Description for the fifth image in this portfolio item.</p>"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Portfolio Showcase",
      "blocks": [
        {
          "type": "item",
          "settings": {
            "collection_type": "products",
            "title_1": "Premium Cotton Hoodie - Front View",
            "description_1": "<p>Front view showcasing the clean design and premium cotton blend material with kangaroo pocket.</p>",
            "title_2": "Premium Cotton Hoodie - Back View", 
            "description_2": "<p>Back view highlighting the reinforced stitching and superior construction quality.</p>"
          }
        },
        {
          "type": "item",
          "settings": {
            "collection_type": "factory",
            "title_1": "Production Floor Overview",
            "description_1": "<p>Wide view of our state-of-the-art manufacturing facility with modern equipment.</p>",
            "title_2": "Quality Control Station",
            "description_2": "<p>Our dedicated quality control area where every piece is inspected for perfection.</p>"
          }
        },
        {
          "type": "item",
          "settings": {
            "collection_type": "team",
            "title_1": "Production Manager",
            "description_1": "<p>Meet our experienced production manager with 15+ years in quality manufacturing.</p>",
            "title_2": "Design Team",
            "description_2": "<p>Our creative design team working on the latest fashion trends and innovations.</p>"
          }
        }
      ]
    }
  ]
}
{% endschema %}