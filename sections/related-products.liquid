{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'section-related-products.css' | asset_url | stylesheet_tag }}

{% if section.settings.image_shape == 'blob' %}
  {{ 'mask-blobs.css' | asset_url | stylesheet_tag }}
{%- endif -%}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<div class="color-{{ section.settings.color_scheme }} gradient no-js-hidden">
  <product-recommendations
    class="related-products page-width section-{{ section.id }}-padding isolate{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
    data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit={{ section.settings.products_to_show }}"
  >
    {% if recommendations.performed and recommendations.products_count > 0 %}
      {%- liquid
        # Smart Category Detection with Enhanced Filtering
        assign is_current_clothing = false
        assign is_current_accessories = false
        assign is_current_design_service = false
        assign clothing_products = ''
        assign matching_products = ''
        
        # Detect current product category
        if product.type == 'Jacket' or product.type == 'Hoodie' or product.type == 'Sweatshirt' or product.type == 'T-Shirt' or product.type == 'Sweatpants' or product.type == 'Clothing'
          assign is_current_clothing = true
        elsif product.tags contains 'clothing' or product.tags contains 'apparel' or product.tags contains 'garment'
          assign is_current_clothing = true
        elsif product.type == 'Accessories' or product.tags contains 'accessories'
          assign is_current_accessories = true
        elsif product.type == 'Design' or product.tags contains 'design-services'
          assign is_current_design_service = true
        endif
        
        # Filter products based on current product category
        assign category_products_array = blank
        
        if is_current_clothing
          # For clothing products, only show other clothing products
          for rec_product in recommendations.products
            assign is_clothing_product = false
            
            if rec_product.type == 'Jacket' or rec_product.type == 'Hoodie' or rec_product.type == 'Sweatshirt' or rec_product.type == 'T-Shirt' or rec_product.type == 'Sweatpants' or rec_product.type == 'Clothing'
              assign is_clothing_product = true
            elsif rec_product.tags contains 'clothing' or rec_product.tags contains 'apparel' or rec_product.tags contains 'garment'
              assign is_clothing_product = true
            endif
            
            if is_clothing_product and rec_product.id != product.id
              assign category_products_array = category_products_array | append: rec_product
              if forloop.index == 1
                assign clothing_products = rec_product
              else
                assign clothing_products = clothing_products | concat: rec_product
              endif
            endif
          endfor
        elsif is_current_accessories
          # For accessories, show accessories and related items
          for rec_product in recommendations.products
            if rec_product.type == 'Accessories' or rec_product.tags contains 'accessories'
              assign category_products_array = category_products_array | append: rec_product
            endif
          endfor
        elsif is_current_design_service
          # For design services, show design services
          for rec_product in recommendations.products
            if rec_product.type == 'Design' or rec_product.tags contains 'design-services'
              assign category_products_array = category_products_array | append: rec_product
            endif
          endfor
        else
          # Default: show all recommendations
          assign category_products_array = recommendations.products
        endif
      -%}
      
      <h2 class="related-products__heading inline-richtext {{ section.settings.heading_size }}">
        {% if is_current_clothing %}
          Related Clothing & Apparel
        {% elsif is_current_accessories %}
          Related Accessories & Designs  
        {% elsif is_current_design_service %}
          Related Design Services
        {% else %}
          {{ section.settings.heading }}
        {% endif %}
      </h2>
      
      <ul
        class="grid product-grid grid--{{ section.settings.columns_desktop }}-col-desktop grid--{{ section.settings.columns_mobile }}-col-tablet-down"
        role="list"
      >
        {% assign products_shown = 0 %}
        
        {% if is_current_clothing %}
          <!-- Show only clothing products -->
          {% for rec_product in recommendations.products %}
            {% if products_shown < section.settings.products_to_show %}
              {%- assign is_clothing_product = false -%}
              
              {%- if rec_product.type == 'Jacket' or rec_product.type == 'Hoodie' or rec_product.type == 'Sweatshirt' or rec_product.type == 'T-Shirt' or rec_product.type == 'Sweatpants' or rec_product.type == 'Clothing' -%}
                {%- assign is_clothing_product = true -%}
              {%- elsif rec_product.tags contains 'clothing' or rec_product.tags contains 'apparel' or rec_product.tags contains 'garment' -%}
                {%- assign is_clothing_product = true -%}
              {%- endif -%}
              
              {% if is_clothing_product and rec_product.id != product.id %}
                <li class="grid__item">
                  {% render 'card-product',
                    card_product: rec_product,
                    media_aspect_ratio: section.settings.image_ratio,
                    image_shape: section.settings.image_shape,
                    show_secondary_image: section.settings.show_secondary_image,
                    show_vendor: section.settings.show_vendor,
                    show_rating: section.settings.show_rating
                  %}
                </li>
                {% assign products_shown = products_shown | plus: 1 %}
              {% endif %}
            {% endif %}
          {% endfor %}
          
        {% elsif is_current_accessories %}
          <!-- Show only accessories -->
          {% for rec_product in recommendations.products %}
            {% if products_shown < section.settings.products_to_show %}
              {% if rec_product.type == 'Accessories' or rec_product.tags contains 'accessories' %}
                <li class="grid__item">
                  {% render 'card-product',
                    card_product: rec_product,
                    media_aspect_ratio: section.settings.image_ratio,
                    image_shape: section.settings.image_shape,
                    show_secondary_image: section.settings.show_secondary_image,
                    show_vendor: section.settings.show_vendor,
                    show_rating: section.settings.show_rating
                  %}
                </li>
                {% assign products_shown = products_shown | plus: 1 %}
              {% endif %}
            {% endif %}
          {% endfor %}
          
        {% elsif is_current_design_service %}
          <!-- Show only design services -->
          {% for rec_product in recommendations.products %}
            {% if products_shown < section.settings.products_to_show %}
              {% if rec_product.type == 'Design' or rec_product.tags contains 'design-services' %}
                <li class="grid__item">
                  {% render 'card-product',
                    card_product: rec_product,
                    media_aspect_ratio: section.settings.image_ratio,
                    image_shape: section.settings.image_shape,
                    show_secondary_image: section.settings.show_secondary_image,
                    show_vendor: section.settings.show_vendor,
                    show_rating: section.settings.show_rating
                  %}
                </li>
                {% assign products_shown = products_shown | plus: 1 %}
              {% endif %}
            {% endif %}
          {% endfor %}
          
        {% else %}
          <!-- Default: show all recommendations -->
          {% for recommendation in recommendations.products %}
            {% if products_shown < section.settings.products_to_show %}
              <li class="grid__item">
                {% render 'card-product',
                  card_product: recommendation,
                  media_aspect_ratio: section.settings.image_ratio,
                  image_shape: section.settings.image_shape,
                  show_secondary_image: section.settings.show_secondary_image,
                  show_vendor: section.settings.show_vendor,
                  show_rating: section.settings.show_rating
                %}
              </li>
              {% assign products_shown = products_shown | plus: 1 %}
            {% endif %}
          {% endfor %}
        {% endif %}
        
        {% comment %} If not enough category-specific products, fill with general recommendations {% endcomment %}
        {% if products_shown < section.settings.products_to_show %}
          {% for rec_product in recommendations.products %}
            {% if products_shown < section.settings.products_to_show %}
              {%- assign already_shown = false -%}
              
              {% if is_current_clothing %}
                {%- assign is_clothing_product = false -%}
                {%- if rec_product.type == 'Jacket' or rec_product.type == 'Hoodie' or rec_product.type == 'Sweatshirt' or rec_product.type == 'T-Shirt' or rec_product.type == 'Sweatpants' or rec_product.type == 'Clothing' -%}
                  {%- assign is_clothing_product = true -%}
                {%- elsif rec_product.tags contains 'clothing' or rec_product.tags contains 'apparel' or rec_product.tags contains 'garment' -%}
                  {%- assign is_clothing_product = true -%}
                {%- endif -%}
                {% if is_clothing_product %}
                  {%- assign already_shown = true -%}
                {% endif %}
              {% elsif is_current_accessories and rec_product.type == 'Accessories' or rec_product.tags contains 'accessories' %}
                {%- assign already_shown = true -%}
              {% elsif is_current_design_service and rec_product.type == 'Design' or rec_product.tags contains 'design-services' %}
                {%- assign already_shown = true -%}
              {% endif %}
              
              {% unless already_shown %}
                <li class="grid__item">
                  {% render 'card-product',
                    card_product: rec_product,
                    media_aspect_ratio: section.settings.image_ratio,
                    image_shape: section.settings.image_shape,
                    show_secondary_image: section.settings.show_secondary_image,
                    show_vendor: section.settings.show_vendor,
                    show_rating: section.settings.show_rating
                  %}
                </li>
                {% assign products_shown = products_shown | plus: 1 %}
              {% endunless %}
            {% endif %}
          {% endfor %}
        {% endif %}
      </ul>
    {% endif %}
  </product-recommendations>
  {% if section.settings.image_shape == 'arch' %}
    {% render 'mask-arch' %}
  {%- endif -%}
</div>

{% schema %}
{
  "name": "t:sections.related-products.name",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "paragraph",
      "content": "t:sections.related-products.settings.paragraph__1.content"
    },
    {
      "type": "inline_richtext",
      "id": "heading",
      "default": "You may also like",
      "label": "t:sections.related-products.settings.heading.label"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "t:sections.all.heading_size.options__1.label"
        },
        {
          "value": "h1",
          "label": "t:sections.all.heading_size.options__2.label"
        },
        {
          "value": "h0",
          "label": "t:sections.all.heading_size.options__3.label"
        }
      ],
      "default": "h1",
      "label": "t:sections.all.heading_size.label"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 2,
      "max": 10,
      "step": 1,
      "default": 4,
      "label": "t:sections.related-products.settings.products_to_show.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 4,
      "label": "t:sections.related-products.settings.columns_desktop.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "info": "t:sections.all.colors.has_cards_info",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.related-products.settings.header__2.content"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.related-products.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.related-products.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.related-products.settings.image_ratio.options__3.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.related-products.settings.image_ratio.label"
    },
    {
      "type": "select",
      "id": "image_shape",
      "options": [
        {
          "value": "default",
          "label": "t:sections.all.image_shape.options__1.label"
        },
        {
          "value": "arch",
          "label": "t:sections.all.image_shape.options__2.label"
        },
        {
          "value": "blob",
          "label": "t:sections.all.image_shape.options__3.label"
        },
        {
          "value": "chevronleft",
          "label": "t:sections.all.image_shape.options__4.label"
        },
        {
          "value": "chevronright",
          "label": "t:sections.all.image_shape.options__5.label"
        },
        {
          "value": "diamond",
          "label": "t:sections.all.image_shape.options__6.label"
        },
        {
          "value": "parallelogram",
          "label": "t:sections.all.image_shape.options__7.label"
        },
        {
          "value": "round",
          "label": "t:sections.all.image_shape.options__8.label"
        }
      ],
      "default": "default",
      "label": "t:sections.all.image_shape.label",
      "info": "t:sections.all.image_shape.info"
    },
    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "default": false,
      "label": "t:sections.related-products.settings.show_secondary_image.label"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "t:sections.related-products.settings.show_vendor.label"
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "default": false,
      "label": "t:sections.related-products.settings.show_rating.label",
      "info": "t:sections.related-products.settings.show_rating.info"
    },
    {
      "type": "header",
      "content": "t:sections.related-products.settings.header_mobile.content"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "default": "2",
      "label": "t:sections.related-products.settings.columns_mobile.label",
      "options": [
        {
          "value": "1",
          "label": "t:sections.related-products.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.related-products.settings.columns_mobile.options__2.label"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ]
}
{% endschema %}
