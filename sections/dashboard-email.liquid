<div class="dashboard-email" data-customer-email="{{ customer.email }}" data-customer-name="{{ customer.first_name }} {{ customer.last_name }}">

  {%- comment -%} Hero Section {%- endcomment -%}
  <div class="dashboard-hero">
    <h1 class="dashboard-hero-title">CONTACT SUPPORT</h1>
    <p class="dashboard-hero-subtitle">Send a message about your orders</p>
  </div>

  {%- comment -%} Email Form {%- endcomment -%}
  <div class="email-container">

    {%- comment -%} Order Selection {%- endcomment -%}
    <div class="email-section">
      <label for="email-order-select" class="email-label">SELECT ORDER (OPTIONAL)</label>
      <select id="email-order-select" class="email-select">
        <option value="">Loading orders...</option>
      </select>
      <p class="email-hint">Select an order to automatically include order details in your message</p>
    </div>

    {%- comment -%} Template Selection {%- endcomment -%}
    <div class="email-section">
      <label for="email-template" class="email-label">MESSAGE TEMPLATE</label>
      <select id="email-template" class="email-select">
        <option value="">Select a template (optional)</option>
        <option value="help">General Help</option>
        <option value="changes">Request Changes</option>
        <option value="delivery">Delivery Question</option>
        <option value="custom">Custom Message</option>
      </select>
    </div>

    {%- comment -%} Message Text {%- endcomment -%}
    <div class="email-section">
      <label for="email-message" class="email-label">YOUR MESSAGE</label>
      <textarea
        id="email-message"
        class="email-textarea"
        rows="10"
        placeholder="Write your message here..."
      ></textarea>
      <p class="email-hint">Your email ({{ customer.email }}) will be included for replies</p>
    </div>

    {%- comment -%} Action Buttons {%- endcomment -%}
    <div class="email-actions">
      <button id="send-email-btn" class="email-button">SEND MESSAGE</button>
      <a href="{{ routes.account_url }}" class="email-button-secondary">CANCEL</a>
    </div>

    {%- comment -%} Status Message {%- endcomment -%}
    <div class="email-status" id="email-status" style="display: none;">
      <div class="email-status-message"></div>
    </div>

  </div>

  {%- comment -%} Contact Information {%- endcomment -%}
  <div class="email-info">
    <h3 class="email-info-title">OTHER WAYS TO REACH US</h3>
    <div class="email-info-grid">
      <div class="email-info-item">
        <strong>Email:</strong> office@genuineblanks.com
      </div>
      <div class="email-info-item">
        <strong>Phone:</strong> Available on request
      </div>
      <div class="email-info-item">
        <strong>Hours:</strong> Monday - Friday, 9:00 AM - 6:00 PM CET
      </div>
    </div>
  </div>

  {%- comment -%} Back to Dashboard {%- endcomment -%}
  <div class="dashboard-view-all">
    <a href="{{ routes.account_url }}" class="dashboard-link">‚Üê BACK TO DASHBOARD</a>
  </div>

</div>

{% stylesheet %}
  .dashboard-email {
    max-width: 800px;
    margin: 0 auto;
    padding: 3rem 2rem;
  }

  .dashboard-hero {
    text-align: center;
    margin-bottom: 3rem;
  }

  .dashboard-hero-title {
    font-size: 2.5rem;
    font-weight: 700;
    color: #222222;
    letter-spacing: 0.08rem;
    margin: 0 0 0.5rem 0;
    text-transform: uppercase;
  }

  .dashboard-hero-subtitle {
    font-size: 1.1rem;
    color: #666666;
    margin: 0;
  }

  .email-container {
    background: #ffffff;
    border-radius: 12px;
    padding: 2rem;
    box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);
    margin-bottom: 2rem;
  }

  .email-section {
    margin-bottom: 2rem;
  }

  .email-label {
    display: block;
    font-size: 0.9rem;
    font-weight: 700;
    color: #222222;
    letter-spacing: 0.08rem;
    text-transform: uppercase;
    margin-bottom: 0.75rem;
  }

  .email-select {
    width: 100%;
    padding: 0.75rem 1rem;
    border: 2px solid #e0e0e0;
    border-radius: 6px;
    font-size: 0.95rem;
    color: #333333;
    background: #ffffff;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .email-select:focus {
    outline: none;
    border-color: #333333;
  }

  .email-textarea {
    width: 100%;
    padding: 1rem;
    border: 2px solid #e0e0e0;
    border-radius: 6px;
    font-size: 0.95rem;
    color: #333333;
    font-family: inherit;
    line-height: 1.6;
    resize: vertical;
    transition: all 0.3s ease;
  }

  .email-textarea:focus {
    outline: none;
    border-color: #333333;
  }

  .email-hint {
    font-size: 0.85rem;
    color: #999999;
    margin: 0.5rem 0 0 0;
  }

  .email-actions {
    display: flex;
    gap: 1rem;
    margin-top: 2rem;
  }

  .email-button {
    flex: 1;
    padding: 1rem 2rem;
    background: #222222;
    color: #ffffff;
    border: none;
    border-radius: 6px;
    font-size: 0.9rem;
    font-weight: 700;
    letter-spacing: 0.08rem;
    cursor: pointer;
    transition: all 0.3s ease;
    text-align: center;
  }

  .email-button:hover:not(:disabled) {
    background: #000000;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  }

  .email-button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .email-button-secondary {
    flex: 1;
    padding: 1rem 2rem;
    background: #ffffff;
    color: #333333;
    border: 2px solid #e0e0e0;
    border-radius: 6px;
    font-size: 0.9rem;
    font-weight: 700;
    letter-spacing: 0.08rem;
    text-decoration: none;
    text-align: center;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
  }

  .email-button-secondary:hover {
    border-color: #333333;
  }

  .email-status {
    margin-top: 1.5rem;
  }

  .email-status-message {
    padding: 1rem;
    border-radius: 6px;
    text-align: center;
    font-weight: 600;
  }

  .email-status-message.success {
    background: #D1FAE5;
    color: #065F46;
  }

  .email-status-message.error {
    background: #FEE2E2;
    color: #991B1B;
  }

  .email-info {
    background: #f9f9f9;
    border-radius: 12px;
    padding: 2rem;
    margin-bottom: 2rem;
  }

  .email-info-title {
    font-size: 1rem;
    font-weight: 700;
    color: #222222;
    letter-spacing: 0.08rem;
    text-transform: uppercase;
    margin: 0 0 1.5rem 0;
  }

  .email-info-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1rem;
  }

  .email-info-item {
    font-size: 0.9rem;
    color: #666666;
  }

  .email-info-item strong {
    color: #222222;
    display: block;
    margin-bottom: 0.25rem;
  }

  .dashboard-view-all {
    text-align: center;
  }

  .dashboard-link {
    display: inline-block;
    padding: 0.75rem 2rem;
    background: #ffffff;
    color: #333333;
    text-decoration: none;
    border: 2px solid #e0e0e0;
    border-radius: 6px;
    font-size: 0.9rem;
    font-weight: 700;
    letter-spacing: 0.08rem;
    transition: all 0.3s ease;
  }

  .dashboard-link:hover {
    border-color: #333333;
  }

  @media screen and (max-width: 749px) {
    .dashboard-email {
      padding: 2rem 1rem;
    }

    .dashboard-hero-title {
      font-size: 1.8rem;
    }

    .email-container {
      padding: 1.5rem;
    }

    .email-actions {
      flex-direction: column;
    }

    .email-info-grid {
      grid-template-columns: 1fr;
    }
  }
{% endstylesheet %}

{% javascript %}
  class EmailModule {
    constructor() {
      this.dashboardElement = document.querySelector('.dashboard-email');
      if (!this.dashboardElement) return;

      this.customerEmail = this.dashboardElement.dataset.customerEmail;
      this.customerName = this.dashboardElement.dataset.customerName;
      this.orderSelect = document.getElementById('email-order-select');
      this.templateSelect = document.getElementById('email-template');
      this.messageTextarea = document.getElementById('email-message');
      this.sendButton = document.getElementById('send-email-btn');
      this.emailStatus = document.getElementById('email-status');

      this.templates = {
        'help': `Hi GenuineBlanks team,

I need assistance with my order {ORDER_ID}.

[Please describe your issue here]

Thank you!`,
        'changes': `Hi GenuineBlanks team,

I would like to request changes to order {ORDER_ID}.

[Describe requested changes]

Thank you!`,
        'delivery': `Hi GenuineBlanks team,

I have a question about the delivery for order {ORDER_ID}.

[Your question here]

Thank you!`,
        'custom': `Hi GenuineBlanks team,

[Write your message here]

Thank you!`
      };

      this.init();
    }

    async init() {
      await this.loadOrders();
      this.setupEventListeners();
    }

    setupEventListeners() {
      this.templateSelect.addEventListener('change', () => this.updateMessageTemplate());
      this.sendButton.addEventListener('click', () => this.sendEmail());
    }

    async loadOrders() {
      try {
        const response = await fetch(
          `https://dawn-main-theme.vercel.app/api/submissions?email=${encodeURIComponent(this.customerEmail)}`
        );
        const data = await response.json();

        if (data.success && data.data.length > 0) {
          this.orderSelect.innerHTML = '<option value="">No specific order (general inquiry)</option>' +
            data.data.map(order =>
              `<option value="${order.request_id}">${order.request_id} - ${order.submission_type.replace('-', ' ').toUpperCase()}</option>`
            ).join('');
        } else {
          this.orderSelect.innerHTML = '<option value="">No orders found</option>';
        }
      } catch (error) {
        console.error('Failed to load orders:', error);
        this.orderSelect.innerHTML = '<option value="">Error loading orders</option>';
      }
    }

    updateMessageTemplate() {
      const template = this.templateSelect.value;
      const orderId = this.orderSelect.value || '[No specific order]';

      if (template && this.templates[template]) {
        this.messageTextarea.value = this.templates[template].replace('{ORDER_ID}', orderId);
      }
    }

    async sendEmail() {
      const orderId = this.orderSelect.value;
      const message = this.messageTextarea.value.trim();

      if (!message) {
        this.showStatus('Please write a message before sending', 'error');
        return;
      }

      this.sendButton.disabled = true;
      this.sendButton.textContent = 'SENDING...';

      try {
        const response = await fetch('https://dawn-main-theme.vercel.app/api/send-email', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            orderId: orderId || null,
            message: message,
            customerEmail: this.customerEmail,
            customerName: this.customerName
          })
        });

        const result = await response.json();

        if (result.success) {
          this.showStatus('Message sent successfully! We will respond within 24 hours.', 'success');
          this.messageTextarea.value = '';
          this.templateSelect.value = '';
          this.orderSelect.value = '';
        } else {
          throw new Error(result.error || 'Send failed');
        }
      } catch (error) {
        console.error('Email send error:', error);
        this.showStatus('Failed to send message: ' + error.message, 'error');
      } finally {
        this.sendButton.disabled = false;
        this.sendButton.textContent = 'SEND MESSAGE';
      }
    }

    showStatus(message, type) {
      const statusMessage = this.emailStatus.querySelector('.email-status-message');
      statusMessage.textContent = message;
      statusMessage.className = `email-status-message ${type}`;
      this.emailStatus.style.display = 'block';

      setTimeout(() => {
        this.emailStatus.style.display = 'none';
      }, 5000);
    }
  }

  // Initialize when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => new EmailModule());
  } else {
    new EmailModule();
  }
{% endjavascript %}

{% schema %}
{
  "name": "Dashboard Email",
  "class": "section-dashboard-email",
  "settings": [
    {
      "type": "header",
      "content": "Email Settings"
    },
    {
      "type": "text",
      "id": "support_email",
      "label": "Support Email",
      "default": "office@genuineblanks.com"
    }
  ],
  "presets": [
    {
      "name": "Dashboard Email"
    }
  ]
}
{% endschema %}
