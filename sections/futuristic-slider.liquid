{% comment %}
  Section: know-my-factory.liquid
  Place this file in the sections folder
  File path: sections/know-my-factory.liquid
{% endcomment %}

<style>
  .factory-section-{{ section.id }} {
    min-height: 100vh;
    position: relative;
    font-family: var(--font-body-family), Arial, sans-serif;
    margin: 0;
    padding: 0;
    background: linear-gradient(135deg, #0f0f0f 0%, #1a1a1a 50%, #2d2d2d 100%);
    overflow: hidden;
    opacity: 0;
    animation: sectionFadeIn-{{ section.id }} 1.5s ease-out 0.3s forwards;
  }
  
  .factory-section-{{ section.id }}::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(circle at 30% 40%, rgba(255,255,255,0.03) 0%, transparent 50%),
                radial-gradient(circle at 70% 80%, rgba(255,255,255,0.02) 0%, transparent 50%);
    pointer-events: none;
    z-index: 1;
  }
  
  @keyframes sectionFadeIn-{{ section.id }} {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  /* Main Content Wrapper */
  .factory-main-{{ section.id }} {
    position: relative;
    z-index: 2;
    background: transparent;
  }
  
  /* Filter Navigation */
  .factory-filter-{{ section.id }} {
    padding: 4rem 0 2rem;
    display: flex;
    justify-content: center;
    position: sticky;
    top: 0;
    z-index: 100;
    width: 100%;
    background: rgba(255, 255, 255, 0.08);
    backdrop-filter: blur(25px);
    -webkit-backdrop-filter: blur(25px);
    border-bottom: 1px solid rgba(255,255,255,0.15);
    box-shadow: 0 20px 40px rgba(0,0,0,0.4);
    opacity: 0;
    animation: filterSlideDown-{{ section.id }} 1s ease-out 0.8s forwards;
  }
  
  @keyframes filterSlideDown-{{ section.id }} {
    from {
      opacity: 0;
      transform: translateY(-20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .factory-filter-tabs-{{ section.id }} {
    display: flex;
    background: transparent;
    border-radius: 0;
    padding: 0;
    gap: 2rem;
    border: none;
    box-shadow: none;
    max-width: 800px;
    width: 100%;
    justify-content: center;
  }
  
  .factory-filter-tab-{{ section.id }} {
    display: flex;
    align-items: center;
    gap: 12px;
    padding: 16px 32px;
    background: rgba(0, 0, 0, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.1s ease;
    color: rgba(255, 255, 255, 0.7);
    font-weight: 500;
    font-size: 1rem;
    letter-spacing: 0.1em;
    text-transform: uppercase;
    position: relative;
    overflow: hidden;
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.3);
  }
  
  .factory-filter-tab-{{ section.id }}::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.1), transparent);
    transition: left 0.6s ease;
  }
  
  .factory-filter-tab-{{ section.id }}:hover::before {
    left: 100%;
  }
  
  .factory-filter-tab-{{ section.id }}.active {
    background: rgba(0, 0, 0, 0.2);
    color: white;
    box-shadow: inset 0 4px 8px rgba(0, 0, 0, 0.5);
    border: 1px solid rgba(255, 255, 255, 0.2);
    backdrop-filter: blur(15px);
    -webkit-backdrop-filter: blur(15px);
  }

  .factory-filter-tab-{{ section.id }}:hover:not(.active) {
    background: rgba(255, 255, 255, 0.05);
    color: rgba(255, 255, 255, 0.9);
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.2);
    transform: none;
  }

  .factory-filter-tab-{{ section.id }}:focus {
    outline: none !important;
    border: 1px solid rgba(255, 255, 255, 0.3) !important;
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.3) !important;
  }

  .factory-filter-tab-{{ section.id }}:focus-visible {
    outline: none !important;
    border: 1px solid rgba(255, 255, 255, 0.4) !important;
  }

  /* Override global button focus styles */
  .factory-filter-tab-{{ section.id }}:focus:not(:focus-visible) {
    outline: none !important;
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.3) !important;
  }
  
  .factory-filter-icon-{{ section.id }} {
    transition: transform 0.3s ease;
  }
  
  .factory-filter-tab-{{ section.id }}:hover .factory-filter-icon-{{ section.id }} {
    transform: scale(1.1);
  }
  
  /* Gallery Section */
  .factory-gallery-{{ section.id }} {
    padding: 3rem 0;
    position: relative;
    opacity: 0;
    animation: galleryFadeIn-{{ section.id }} 1.2s ease-out 1.2s forwards;
    background: rgba(255, 255, 255, 0.02);
    backdrop-filter: blur(15px);
    -webkit-backdrop-filter: blur(15px);
  }
  
  @keyframes galleryFadeIn-{{ section.id }} {
    from {
      opacity: 0;
      transform: translateY(40px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .factory-gallery-wrapper-{{ section.id }} {
    display: block;
    max-width: 1400px;
    margin: 0 auto;
    padding: 0 2rem;
    width: 100%;
  }
  
  /* Main Image Display */
  .factory-main-display-{{ section.id }} {
    width: 100%;
    margin-bottom: 3rem;
  }
  
  .factory-main-container-{{ section.id }} {
    position: relative;
    border-radius: 16px;
    overflow: hidden;
    background: rgba(255, 255, 255, 0.08);
    backdrop-filter: blur(30px);
    -webkit-backdrop-filter: blur(30px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow:
      0 40px 100px rgba(0,0,0,0.7),
      0 20px 60px rgba(0,0,0,0.5),
      inset 0 1px 0 rgba(255,255,255,0.1);
    aspect-ratio: 1.8/1;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .factory-main-container-{{ section.id }}::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background:
      radial-gradient(circle at 30% 30%, rgba(255,255,255,0.1) 0%, transparent 50%),
      radial-gradient(circle at 70% 70%, rgba(255,255,255,0.05) 0%, transparent 50%),
      linear-gradient(135deg, rgba(255,255,255,0.05) 0%, transparent 100%);
    pointer-events: none;
    z-index: 2;
    opacity: 0.8;
    transition: opacity 0.4s ease;
  }

  .factory-main-container-{{ section.id }}:hover {
    transform: translateY(-2px);
    box-shadow:
      0 50px 120px rgba(0,0,0,0.8),
      0 25px 70px rgba(0,0,0,0.6),
      inset 0 1px 0 rgba(255,255,255,0.15);
    border-color: rgba(255, 255, 255, 0.25);
  }

  .factory-main-container-{{ section.id }}:hover::before {
    opacity: 1;
  }
  
  .factory-slide-{{ section.id }} {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: opacity 0.8s cubic-bezier(0.4, 0, 0.2, 1);
    border-radius: 8px;
    overflow: hidden;
  }
  
  .factory-slide-{{ section.id }}.active {
    opacity: 1;
  }
  
  .factory-image-{{ section.id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    border-radius: 8px;
    transition: transform 0.6s ease;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    -webkit-user-drag: none;
    -khtml-user-drag: none;
    -moz-user-drag: none;
    -o-user-drag: none;
    user-drag: none;
    pointer-events: none;
  }

  .factory-video-{{ section.id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    border-radius: 8px;
    transition: transform 0.6s ease;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    -webkit-user-drag: none;
    -khtml-user-drag: none;
    -moz-user-drag: none;
    -o-user-drag: none;
    user-drag: none;
    background: rgba(0, 0, 0, 0.1);
  }

  .factory-video-{{ section.id }}::-webkit-media-controls-panel {
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border-radius: 4px;
  }

  .factory-video-{{ section.id }}::-webkit-media-controls-play-button,
  .factory-video-{{ section.id }}::-webkit-media-controls-volume-slider,
  .factory-video-{{ section.id }}::-webkit-media-controls-timeline {
    filter: brightness(0) invert(1);
  }
  
  .factory-slide-{{ section.id }}:hover .factory-image-{{ section.id }},
  .factory-slide-{{ section.id }}:hover .factory-video-{{ section.id }} {
    transform: scale(1.02);
  }
  
  
  /* Navigation */
  .factory-navigation-{{ section.id }} {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 10;
    pointer-events: none;
    width: calc(100% - 4rem);
    max-width: 1200px;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  
  .factory-nav-{{ section.id }} {
    position: absolute;
    width: 60px;
    height: 60px;
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 8px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    pointer-events: auto;
    box-shadow: 0 15px 40px rgba(0,0,0,0.3);
    color: rgba(255, 255, 255, 0.8);
  }
  
  .factory-nav-{{ section.id }}:hover {
    background: rgba(255, 255, 255, 0.2);
    color: white;
    transform: scale(1.1);
    box-shadow: 0 20px 50px rgba(255,255,255,0.1);
  }
  
  .factory-nav-prev-{{ section.id }} {
    position: relative;
  }

  .factory-nav-next-{{ section.id }} {
    position: relative;
  }
  
  
  /* Thumbnails */
  .factory-thumbnails-{{ section.id }} {
    background: rgba(255, 255, 255, 0.08);
    backdrop-filter: blur(25px);
    -webkit-backdrop-filter: blur(25px);
    border-radius: 0;
    padding: 3rem 0;
    border: none;
    border-top: 1px solid rgba(255, 255, 255, 0.15);
    border-bottom: 1px solid rgba(255, 255, 255, 0.15);
    box-shadow: 0 30px 80px rgba(0,0,0,0.4);
    margin-top: 3rem;
    position: relative;
    opacity: 0;
    animation: thumbnailsSlideUp-{{ section.id }} 1s ease-out 1.6s forwards;
    width: 100%;
  }
  
  @keyframes thumbnailsSlideUp-{{ section.id }} {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .factory-thumb-navigation-{{ section.id }} {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 10;
    pointer-events: none;
    width: calc(100% - 2rem);
    max-width: 1400px;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .factory-thumb-nav-{{ section.id }} {
    position: absolute;
    width: 36px;
    height: 36px;
    background: rgba(0, 0, 0, 0.2);
    backdrop-filter: blur(15px);
    -webkit-backdrop-filter: blur(15px);
    border: 1px solid rgba(255, 255, 255, 0.15);
    border-radius: 6px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    pointer-events: auto;
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.3);
    color: rgba(255, 255, 255, 0.7);
  }

  .factory-thumb-nav-{{ section.id }}:hover {
    background: rgba(0, 0, 0, 0.3);
    transform: scale(1.05);
    box-shadow: inset 0 3px 6px rgba(0, 0, 0, 0.4);
    color: rgba(255, 255, 255, 0.9);
    border-color: rgba(255, 255, 255, 0.2);
  }

  .factory-thumb-prev-{{ section.id }} {
    position: relative;
  }

  .factory-thumb-next-{{ section.id }} {
    position: relative;
  }
  
  .factory-thumb-container-{{ section.id }} {
    display: flex;
    gap: 1.5rem;
    overflow-x: auto;
    padding: 2rem 4rem;
    scroll-behavior: smooth;
    scrollbar-width: none;
    -ms-overflow-style: none;
    justify-content: flex-start;
    align-items: center;
    background: rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border-radius: 12px;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    max-width: 1400px;
    margin: 0 auto;
    min-height: 120px;
    position: relative;
  }
  
  .factory-thumb-container-{{ section.id }}::-webkit-scrollbar {
    display: none;
  }
  
  .factory-thumb-slide-{{ section.id }} {
    flex-shrink: 0;
    border-radius: 8px;
    overflow: hidden;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    border: 2px solid transparent;
    cursor: pointer;
    position: relative;
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(15px);
    -webkit-backdrop-filter: blur(15px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
  }
  
  .factory-thumb-slide-{{ section.id }}::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(255, 255, 255, 0.05);
    opacity: 0;
    transition: opacity 0.3s ease;
    border-radius: 4px;
    z-index: 2;
  }
  
  .factory-thumb-slide-{{ section.id }}:hover::before {
    opacity: 1;
  }
  
  .factory-thumb-image-{{ section.id }} {
    width: 110px;
    height: 82px;
    object-fit: cover;
    border-radius: 6px;
    transition: all 0.3s ease;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    -webkit-user-drag: none;
    -khtml-user-drag: none;
    -moz-user-drag: none;
    -o-user-drag: none;
    user-drag: none;
    pointer-events: none;
    display: block;
    flex-shrink: 0;
  }

  .factory-thumb-video-wrapper-{{ section.id }} {
    position: relative;
    width: 110px;
    height: 82px;
    border-radius: 6px;
    overflow: hidden;
    flex-shrink: 0;
  }

  .factory-thumb-video-{{ section.id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 6px;
    transition: all 0.3s ease;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    -webkit-user-drag: none;
    -khtml-user-drag: none;
    -moz-user-drag: none;
    -o-user-drag: none;
    user-drag: none;
    pointer-events: none;
    display: block;
  }

  .factory-thumb-video-icon-{{ section.id }} {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 30px;
    height: 30px;
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: rgba(0, 0, 0, 0.8);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    transition: all 0.3s ease;
    pointer-events: none;
  }

  .factory-thumb-slide-{{ section.id }}:hover .factory-thumb-video-icon-{{ section.id }} {
    background: rgba(255, 255, 255, 1);
    transform: translate(-50%, -50%) scale(1.1);
  }

  /* Static content display rules */
  
  .factory-thumb-slide-{{ section.id }}.active {
    border-color: rgba(255, 255, 255, 0.5);
    transform: scale(1.08);
    box-shadow: 0 15px 40px rgba(255,255,255,0.15);
    background: rgba(255, 255, 255, 0.1);
  }

  .factory-thumb-slide-{{ section.id }}:hover {
    transform: translateY(-4px) scale(1.02);
    box-shadow: 0 20px 50px rgba(0,0,0,0.5);
    border-color: rgba(255, 255, 255, 0.3);
    background: rgba(255, 255, 255, 0.08);
  }
  
  
  
  /* Mobile Responsiveness */
  @media (max-width: 768px) {
    .factory-section-{{ section.id }} {
      overflow-x: hidden;
      padding-bottom: 1rem;
    }

    .factory-filter-tabs-{{ section.id }} {
      flex-direction: row;
      width: 100%;
      max-width: 100%;
      margin: 0 auto;
      padding: 0.5rem;
      display: flex;
      gap: 0.5rem;
      justify-content: center;
    }

    .factory-filter-tab-{{ section.id }} {
      justify-content: center;
      padding: 12px 8px;
      font-size: 0.75rem;
      flex: 1;
      max-width: none;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    /* Mobile filter tab reordering - PRODUCTION in center */
    .factory-filter-tab-{{ section.id }}[data-filter="products"] {
      order: 1;
    }

    .factory-filter-tab-{{ section.id }}[data-filter="team"] {
      order: 2;
    }

    .factory-filter-tab-{{ section.id }}[data-filter="factory"] {
      order: 3;
    }

    .factory-gallery-wrapper-{{ section.id }} {
      padding: 0 0.5rem;
    }

    .factory-main-display-{{ section.id }} {
      margin-bottom: 1.5rem;
    }


    .factory-main-container-{{ section.id }} {
      aspect-ratio: 4/3;
      border-radius: 8px;
      background: rgba(255, 255, 255, 0.05);
      border: 1px solid rgba(255, 255, 255, 0.1);
      box-shadow: 0 10px 30px rgba(0,0,0,0.3);
      backdrop-filter: blur(15px);
      -webkit-backdrop-filter: blur(15px);
      margin: 0 1rem;
      display: flex;
      align-items: center;
      justify-content: center;
      overflow: hidden;
    }

    .factory-main-container-{{ section.id }}:hover {
      transform: none;
      box-shadow: none;
    }

    .factory-main-container-{{ section.id }}::before {
      display: none;
    }

    .factory-nav-{{ section.id }} {
      width: 45px;
      height: 45px;
    }

    .factory-navigation-{{ section.id }} {
      width: calc(100% - 2rem);
    }

    .factory-thumb-image-{{ section.id }} {
      width: 85px;
      height: 64px;
    }

    .factory-thumb-container-{{ section.id }} {
      padding: 1.5rem 3rem;
      gap: 1rem;
    }

    .factory-thumb-nav-{{ section.id }} {
      width: 32px;
      height: 32px;
    }

    .factory-thumbnails-{{ section.id }} {
      padding: 1rem 0 0.5rem 0;
      margin-top: 0.5rem;
      margin-bottom: 0;
    }

    .factory-thumb-navigation-{{ section.id }} {
      width: calc(100% - 1rem);
    }

  }
  
  @media (max-width: 480px) {
    .factory-filter-{{ section.id }} {
      padding: 1.5rem 0 1rem;
    }

    .factory-section-{{ section.id }} {
      padding-bottom: 0.5rem;
    }

    .factory-filter-tab-{{ section.id }} {
      padding: 10px 6px;
      font-size: 0.7rem;
      max-width: none;
      white-space: nowrap;
    }

    .factory-main-container-{{ section.id }} {
      aspect-ratio: 3/2;
    }

    .factory-nav-{{ section.id }} {
      width: 40px;
      height: 40px;
    }

    .factory-navigation-{{ section.id }} {
      width: calc(100% - 1rem);
    }

    .factory-thumb-image-{{ section.id }} {
      width: 75px;
      height: 56px;
    }

    .factory-thumb-container-{{ section.id }} {
      padding: 1rem 2.5rem;
      gap: 0.8rem;
    }

    .factory-thumbnails-{{ section.id }} {
      padding: 0.5rem 0 0.25rem 0;
      margin-bottom: 0;
    }

    .factory-thumb-nav-{{ section.id }} {
      width: 28px;
      height: 28px;
    }

    .factory-thumb-navigation-{{ section.id }} {
      width: calc(100% - 0.5rem);
    }
  }
  
  /* Accessibility */
  .factory-filter-tab-{{ section.id }}:focus,
  .factory-nav-{{ section.id }}:focus,
  .factory-thumb-slide-{{ section.id }}:focus {
    outline: 2px solid rgba(255,255,255,0.8);
    outline-offset: 3px;
  }
  
  /* High contrast mode */
  @media (prefers-contrast: high) {
    .factory-main-container-{{ section.id }},
    .factory-thumbnails-{{ section.id }} {
      background-blend-mode: multiply;
    }
    
    .factory-filter-tab-{{ section.id }}.active,
    .factory-nav-{{ section.id }} {
      border-color: rgba(255,255,255,0.8);
      background: rgba(255,255,255,0.2);
    }
  }
  
  /* Reduced motion */
  @media (prefers-reduced-motion: reduce) {
    .factory-section-{{ section.id }} *,
    .factory-section-{{ section.id }} *::before,
    .factory-section-{{ section.id }} *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
  }
</style>

<div class="factory-section-{{ section.id }}">
  
  <!-- Main Content -->
  <div class="factory-main-{{ section.id }}">
    
    <!-- Filter Navigation -->
    {% if section.settings.show_collection_filter %}
      <div class="factory-filter-{{ section.id }}">
        <div class="factory-filter-tabs-{{ section.id }}">
          <button class="factory-filter-tab-{{ section.id }}" data-filter="products">
            <span class="factory-filter-icon-{{ section.id }}">
              <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
                <path d="M10 2L3 7V18H8V13H12V18H17V7L10 2Z" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </span>
            <span class="factory-filter-text-{{ section.id }}">SHOW ROOM</span>
          </button>
          <button class="factory-filter-tab-{{ section.id }} active" data-filter="team">
            <span class="factory-filter-icon-{{ section.id }}">
              <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
                <path d="M16 7C16 9.20914 14.2091 11 12 11C9.79086 11 8 9.20914 8 7C8 4.79086 9.79086 3 12 3C14.2091 3 16 4.79086 16 7Z" stroke="currentColor" stroke-width="1.5"/>
                <path d="M12 14C8.13401 14 5 17.134 5 21H19C19 17.134 15.866 14 12 14Z" stroke="currentColor" stroke-width="1.5"/>
              </svg>
            </span>
            <span class="factory-filter-text-{{ section.id }}">PRODUCTION</span>
          </button>
          <button class="factory-filter-tab-{{ section.id }}" data-filter="factory">
            <span class="factory-filter-icon-{{ section.id }}">
              <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
                <path d="M3 17H17V9L10 3L3 9V17Z" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </span>
            <span class="factory-filter-text-{{ section.id }}">FACTORY</span>
          </button>
        </div>
      </div>
    {% endif %}
    
    <!-- Gallery Section -->
    {% if section.blocks.size > 0 %}
      <div class="factory-gallery-{{ section.id }}">
        <div class="factory-gallery-wrapper-{{ section.id }}">
          
          <!-- Main Image Display -->
          <div class="factory-main-display-{{ section.id }}">
            <div class="factory-main-container-{{ section.id }}">
              
              {% assign slide_index = 0 %}
              {% for block in section.blocks %}
                {% assign block_filter = block.settings.collection_type | default: 'products' %}
                {% assign block_index = forloop.index0 %}

                {% comment %} Render Images {% endcomment %}
                {% for i in (1..15) %}
                  {% assign image_key = 'image_' | append: i %}
                  {% assign current_image = block.settings[image_key] %}
                  {% if current_image != blank %}
                    <div class="factory-slide-{{ section.id }}"
                         data-filter="{{ block_filter }}"
                         data-product="{{ block_index }}"
                         data-slide-index="{{ slide_index }}"
                         data-media-type="image">
                      <img src="{{ current_image | image_url: width: 1200 }}"
                           class="factory-image-{{ section.id }}"
                           loading="lazy"
                           alt="{{ block.settings.product_name | escape }}"
                           width="1200"
                           height="900"
                           draggable="false"
                           oncontextmenu="return false;"
                           onselectstart="return false;"
                           ondragstart="return false;">
                    </div>
                    {% assign slide_index = slide_index | plus: 1 %}
                  {% endif %}
                {% endfor %}

                {% comment %} Render Videos {% endcomment %}
                {% for i in (1..15) %}
                  {% assign video_key = 'video_' | append: i %}
                  {% assign current_video = block.settings[video_key] %}
                  {% if current_video != blank %}
                    <div class="factory-slide-{{ section.id }}"
                         data-filter="{{ block_filter }}"
                         data-product="{{ block_index }}"
                         data-slide-index="{{ slide_index }}"
                         data-media-type="video">
                      <video class="factory-video-{{ section.id }}"
                             autoplay
                             muted
                             loop
                             playsinline
                             webkit-playsinline
                             x5-playsinline
                             preload="auto"
                             draggable="false"
                             oncontextmenu="return false;"
                             onselectstart="return false;"
                             ondragstart="return false;"
                             onloadeddata="this.play()"
                             oncanplay="this.play()">
                        <source src="{{ current_video.sources[0].url }}" type="{{ current_video.sources[0].mime_type }}">
                        {% if current_video.sources[1] %}
                          <source src="{{ current_video.sources[1].url }}" type="{{ current_video.sources[1].mime_type }}">
                        {% endif %}
                        {% if current_video.sources[2] %}
                          <source src="{{ current_video.sources[2].url }}" type="{{ current_video.sources[2].mime_type }}">
                        {% endif %}
                        <p>Your browser doesn't support video playback.</p>
                      </video>
                    </div>
                    {% assign slide_index = slide_index | plus: 1 %}
                  {% endif %}
                {% endfor %}
              {% endfor %}
              
              <!-- Navigation -->
              {% if section.settings.show_navigation %}
                <div class="factory-navigation-{{ section.id }}">
                  <button class="factory-nav-{{ section.id }} factory-nav-prev-{{ section.id }}">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                      <path d="M15 18L9 12L15 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                  </button>
                  <button class="factory-nav-{{ section.id }} factory-nav-next-{{ section.id }}">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                      <path d="M9 18L15 12L9 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                  </button>
                </div>
              {% endif %}
            </div>
          </div>
          
        </div>
        
        <!-- Thumbnails -->
        {% if section.settings.show_thumbnails %}
          <div class="factory-thumbnails-{{ section.id }}">
            <div class="factory-thumb-navigation-{{ section.id }}">
              <button class="factory-thumb-nav-{{ section.id }} factory-thumb-prev-{{ section.id }}">
                <svg width="14" height="14" viewBox="0 0 24 24" fill="none">
                  <path d="M15 18L9 12L15 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
              </button>
              <button class="factory-thumb-nav-{{ section.id }} factory-thumb-next-{{ section.id }}">
                <svg width="14" height="14" viewBox="0 0 24 24" fill="none">
                  <path d="M9 18L15 12L9 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
              </button>
            </div>
            <div class="factory-thumb-container-{{ section.id }}">
              {% assign thumb_index = 0 %}
              {% for block in section.blocks %}
                {% assign block_filter = block.settings.collection_type | default: 'products' %}
                {% assign block_index = forloop.index0 %}

                {% comment %} Image Thumbnails {% endcomment %}
                {% for i in (1..15) %}
                  {% assign image_key = 'image_' | append: i %}
                  {% assign current_image = block.settings[image_key] %}
                  {% if current_image != blank %}
                    <div class="factory-thumb-slide-{{ section.id }}"
                         data-filter="{{ block_filter }}"
                         data-product="{{ block_index }}"
                         data-thumb-index="{{ thumb_index }}"
                         data-media-type="image">
                      <img src="{{ current_image | image_url: width: 200 }}"
                           class="factory-thumb-image-{{ section.id }}"
                           loading="lazy"
                           width="200"
                           height="150"
                           draggable="false"
                           oncontextmenu="return false;"
                           onselectstart="return false;"
                           ondragstart="return false;">
                    </div>
                    {% assign thumb_index = thumb_index | plus: 1 %}
                  {% endif %}
                {% endfor %}

                {% comment %} Video Thumbnails {% endcomment %}
                {% for i in (1..15) %}
                  {% assign video_key = 'video_' | append: i %}
                  {% assign current_video = block.settings[video_key] %}
                  {% if current_video != blank %}
                    <div class="factory-thumb-slide-{{ section.id }}"
                         data-filter="{{ block_filter }}"
                         data-product="{{ block_index }}"
                         data-thumb-index="{{ thumb_index }}"
                         data-media-type="video">
                      <div class="factory-thumb-video-wrapper-{{ section.id }}">
                        {% if current_video.preview_image %}
                          <img src="{{ current_video.preview_image | image_url: width: 200 }}"
                               class="factory-thumb-image-{{ section.id }}"
                               loading="lazy"
                               width="200"
                               height="150"
                               draggable="false"
                               oncontextmenu="return false;"
                               onselectstart="return false;"
                               ondragstart="return false;">
                        {% else %}
                          <video class="factory-thumb-video-{{ section.id }}"
                                 muted
                                 preload="metadata"
                                 draggable="false"
                                 oncontextmenu="return false;"
                                 onselectstart="return false;"
                                 ondragstart="return false;">
                            <source src="{{ current_video.sources[0].url }}" type="{{ current_video.sources[0].mime_type }}">
                          </video>
                        {% endif %}
                        <div class="factory-thumb-video-icon-{{ section.id }}">
                          <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
                            <path d="M8 5V19L19 12L8 5Z" fill="currentColor"/>
                          </svg>
                        </div>
                      </div>
                    </div>
                    {% assign thumb_index = thumb_index | plus: 1 %}
                  {% endif %}
                {% endfor %}
              {% endfor %}
            </div>
          </div>
        {% endif %}
      </div>
      
      
    {% else %}
      <div class="factory-empty-{{ section.id }}">
        <div class="factory-empty-content-{{ section.id }}">
          <svg width="80" height="80" viewBox="0 0 64 64" fill="none">
            <path d="M32 8L8 20V52H24V36H40V52H56V20L32 8Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
          <h3>No Factory Content Available</h3>
          <p>Add blocks in the theme editor to showcase your factory, products, and team.</p>
        </div>
      </div>
    {% endif %}
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const sectionId = '{{ section.id }}';
  const section = document.querySelector('.factory-section-' + sectionId);
  
  if (!section) return;
  
  let currentSlideIndex = 0;
  let currentFilter = 'team';
  let allSlides = [];
  let categoryMap = [];
  let categoryRanges = {
    products: { start: null, end: null },
    factory: { start: null, end: null },
    team: { start: null, end: null }
  };
  
  // Build category mapping
  function buildCategoryMapping() {
    const slides = section.querySelectorAll('.factory-slide-' + sectionId);
    categoryMap = [];
    
    // Reset category ranges
    categoryRanges = {
      products: { start: null, end: null },
      factory: { start: null, end: null },
      team: { start: null, end: null }
    };
    
    slides.forEach((slide, index) => {
      const filter = slide.getAttribute('data-filter');
      const productIndex = slide.getAttribute('data-product');
      
      categoryMap.push({
        index: index,
        filter: filter,
        productIndex: parseInt(productIndex),
        element: slide
      });
      
      allSlides.push(slide);
      
      // Track category ranges
      if (categoryRanges[filter].start === null) {
        categoryRanges[filter].start = index;
      }
      categoryRanges[filter].end = index;
    });
  }
  
  // Video management functions
  function pauseAllVideos() {
    const videos = section.querySelectorAll('.factory-video-' + sectionId);
    videos.forEach(video => {
      if (!video.paused) {
        video.pause();
      }
    });
  }

  function playCurrentVideo(slideIndex) {
    const currentSlide = allSlides[slideIndex];
    if (currentSlide && currentSlide.dataset.mediaType === 'video') {
      const video = currentSlide.querySelector('.factory-video-' + sectionId);
      if (video) {
        // Reset video to beginning and force play immediately
        video.currentTime = 0;

        // Multiple aggressive play attempts
        const tryPlay = () => {
          video.play().catch(err => {
            console.log('Video autoplay attempt failed:', err);
            // Try again after a short delay
            setTimeout(tryPlay, 100);
          });
        };

        // Immediate play attempt
        tryPlay();

        // Ensure video is visible and playing
        if (video.paused) {
          // Force play on next frame
          requestAnimationFrame(() => {
            tryPlay();
          });
        }
      }
    }
  }

  // Force play all videos when page becomes visible
  function forcePlayAllVideos() {
    const videos = section.querySelectorAll('.factory-video-' + sectionId);
    videos.forEach(video => {
      if (video.closest('.factory-slide-' + sectionId).classList.contains('active')) {
        video.currentTime = 0;
        video.play().catch(err => {
          console.log('Force play failed:', err);
        });
      }
    });
  }

  // Show specific slide
  function showSlide(slideIndex) {
    // Pause all videos first
    pauseAllVideos();

    allSlides.forEach((slide, index) => {
      slide.style.opacity = index === slideIndex ? '1' : '0';
      slide.classList.toggle('active', index === slideIndex);
    });

    // Update thumbnails
    const thumbSlides = section.querySelectorAll('.factory-thumb-slide-' + sectionId);
    thumbSlides.forEach((thumb, index) => {
      thumb.classList.toggle('active', index === slideIndex);
    });

    currentSlideIndex = slideIndex;
    updateActiveFilterTab(slideIndex);

    // Scroll thumbnail bar to show active slide
    scrollToActiveSlide(slideIndex);

    // Play video if current slide is a video
    playCurrentVideo(slideIndex);
  }
  
  
  // Update active filter tab
  function updateActiveFilterTab(slideIndex) {
    const category = categoryMap[slideIndex]?.filter || 'team';
    currentFilter = category;
    
    section.querySelectorAll('.factory-filter-tab-' + sectionId).forEach(tab => {
      tab.classList.remove('active');
    });
    
    const activeTab = section.querySelector(`[data-filter="${category}"]`);
    if (activeTab) {
      activeTab.classList.add('active');
    }
  }
  
  // Jump to category
  function jumpToCategory(category) {
    const firstSlideIndex = categoryMap.findIndex(item => item.filter === category);
    if (firstSlideIndex !== -1) {
      showSlide(firstSlideIndex);
    }
  }
  
  // Navigation functions
  function nextSlide() {
    const nextIndex = (currentSlideIndex + 1) % allSlides.length;
    showSlide(nextIndex);
  }
  
  function prevSlide() {
    const prevIndex = (currentSlideIndex - 1 + allSlides.length) % allSlides.length;
    showSlide(prevIndex);
  }
  
  // Thumbnail navigation with mouse drag support
  let thumbMouseStartX = 0;
  let thumbMouseEndX = 0;
  let thumbIsDragging = false;
  let thumbIsMouseDown = false;
  let thumbStartScrollLeft = 0;

  function scrollThumbnails(direction) {
    const container = section.querySelector('.factory-thumb-container-' + sectionId);
    const scrollAmount = 120;

    if (direction === 'next') {
      container.scrollLeft += scrollAmount;
    } else {
      container.scrollLeft -= scrollAmount;
    }
  }

  // Add thumbnail drag functionality
  const thumbContainer = section.querySelector('.factory-thumb-container-' + sectionId);
  if (thumbContainer) {
    thumbContainer.addEventListener('mousedown', function(e) {
      thumbIsMouseDown = true;
      thumbMouseStartX = e.clientX;
      thumbStartScrollLeft = thumbContainer.scrollLeft;
      thumbContainer.style.cursor = 'grabbing';
      thumbContainer.style.userSelect = 'none';
      e.preventDefault();
    });

    thumbContainer.addEventListener('mousemove', function(e) {
      if (!thumbIsMouseDown) return;

      thumbIsDragging = true;
      const currentX = e.clientX;
      const diff = currentX - thumbMouseStartX;
      thumbContainer.scrollLeft = thumbStartScrollLeft - diff;
    });

    thumbContainer.addEventListener('mouseup', function(e) {
      thumbContainer.style.cursor = 'grab';
      thumbContainer.style.userSelect = '';
      thumbIsMouseDown = false;
      thumbIsDragging = false;
    });

    thumbContainer.addEventListener('mouseleave', function() {
      thumbContainer.style.cursor = 'grab';
      thumbContainer.style.userSelect = '';
      thumbIsMouseDown = false;
      thumbIsDragging = false;
    });

    // Add grab cursor on hover
    thumbContainer.addEventListener('mouseenter', function() {
      if (!thumbIsMouseDown) {
        thumbContainer.style.cursor = 'grab';
      }
    });

    thumbContainer.addEventListener('mouseleave', function() {
      if (!thumbIsMouseDown) {
        thumbContainer.style.cursor = '';
      }
    });
  }

  // Scroll thumbnail container to show specific category
  function scrollToCategory(category) {
    const container = section.querySelector('.factory-thumb-container-' + sectionId);
    if (!container) return;

    // Find first thumbnail of this category
    const firstCategoryThumb = section.querySelector(`.factory-thumb-slide-${sectionId}[data-filter="${category}"]`);
    if (!firstCategoryThumb) return;

    // Get actual thumbnail dimensions for responsive calculations
    const thumbElement = firstCategoryThumb.querySelector('.factory-thumb-image-' + sectionId);
    const actualThumbWidth = thumbElement ? thumbElement.offsetWidth + 24 : 134; // width + gap, fallback
    const thumbIndex = parseInt(firstCategoryThumb.dataset.thumbIndex) || 0;
    const containerPadding = container.offsetLeft || 48; // Dynamic padding
    const scrollPosition = Math.max(0, (thumbIndex * actualThumbWidth) - containerPadding);

    // Smooth scroll to position
    container.scrollTo({
      left: scrollPosition,
      behavior: 'smooth'
    });
  }

  // Scroll thumbnail container to show active slide
  function scrollToActiveSlide(slideIndex) {
    const container = section.querySelector('.factory-thumb-container-' + sectionId);
    if (!container) return;

    // Find thumbnail corresponding to current slide
    const activeThumb = section.querySelector(`.factory-thumb-slide-${sectionId}[data-thumb-index="${slideIndex}"]`);
    if (!activeThumb) return;

    // Get actual thumbnail dimensions for responsive calculations
    const thumbElement = activeThumb.querySelector('.factory-thumb-image-' + sectionId);
    const actualThumbWidth = thumbElement ? thumbElement.offsetWidth + 24 : 134; // width + gap, fallback to 110+24
    const containerWidth = container.clientWidth;
    const containerPadding = container.offsetLeft || 48; // Dynamic padding

    // Calculate position to center the active thumbnail
    const thumbPosition = slideIndex * actualThumbWidth;
    const scrollPosition = Math.max(0, thumbPosition - (containerWidth / 2) + (actualThumbWidth / 2));

    // Smooth scroll to position
    container.scrollTo({
      left: scrollPosition,
      behavior: 'smooth'
    });
  }
  
  // Image protection
  function addImageProtection() {
    section.addEventListener('contextmenu', function(e) {
      e.preventDefault();
      return false;
    });
    
    section.addEventListener('dragstart', function(e) {
      e.preventDefault();
      return false;
    });
    
    section.addEventListener('selectstart', function(e) {
      e.preventDefault();
      return false;
    });
    
    document.addEventListener('keydown', function(e) {
      if (e.keyCode === 123 || 
          (e.ctrlKey && e.shiftKey && e.keyCode === 73) ||
          (e.ctrlKey && e.keyCode === 85) ||
          (e.ctrlKey && e.keyCode === 83)) {
        e.preventDefault();
        return false;
      }
    });
  }
  
  
  // Event listeners
  
  // Filter tabs with immediate visual feedback
  section.querySelectorAll('.factory-filter-tab-' + sectionId).forEach(tab => {
    // Add mousedown for instant visual feedback (even before click)
    tab.addEventListener('mousedown', function() {
      // Remove active from all tabs immediately on mouse press
      section.querySelectorAll('.factory-filter-tab-' + sectionId).forEach(t => {
        t.classList.remove('active');
        t.blur(); // Remove focus to prevent focus styling conflicts
      });
      // Add active to pressed tab immediately
      this.classList.add('active');
    });

    tab.addEventListener('click', function(e) {
      const category = this.getAttribute('data-filter');

      // Ensure visual feedback (in case mousedown didn't fire)
      section.querySelectorAll('.factory-filter-tab-' + sectionId).forEach(t => {
        t.classList.remove('active');
        t.blur(); // Remove focus to prevent focus styling conflicts
      });
      this.classList.add('active');

      // Update current filter immediately
      currentFilter = category;


      // Scroll thumbnail bar to show category images
      scrollToCategory(category);

      // Then handle slide navigation
      jumpToCategory(category);

      // Prevent any default button behavior
      e.preventDefault();
      e.stopPropagation();
      this.blur(); // Ensure focus is removed after click
    });

    // Handle keyboard accessibility
    tab.addEventListener('keydown', function(e) {
      if (e.key === 'Enter' || e.key === ' ') {
        e.preventDefault();
        this.click();
      }
    });
  });
  
  // Navigation buttons
  const prevBtn = section.querySelector('.factory-nav-prev-' + sectionId);
  const nextBtn = section.querySelector('.factory-nav-next-' + sectionId);
  
  if (prevBtn) prevBtn.addEventListener('click', prevSlide);
  if (nextBtn) nextBtn.addEventListener('click', nextSlide);
  
  // Thumbnail navigation
  const thumbPrevBtn = section.querySelector('.factory-thumb-prev-' + sectionId);
  const thumbNextBtn = section.querySelector('.factory-thumb-next-' + sectionId);
  
  if (thumbPrevBtn) thumbPrevBtn.addEventListener('click', () => scrollThumbnails('prev'));
  if (thumbNextBtn) thumbNextBtn.addEventListener('click', () => scrollThumbnails('next'));
  
  // Thumbnail clicks (prevent when dragging)
  section.querySelectorAll('.factory-thumb-slide-' + sectionId).forEach(thumb => {
    thumb.addEventListener('click', function(e) {
      // Prevent click if we were dragging
      if (thumbIsDragging) {
        e.preventDefault();
        e.stopPropagation();
        return;
      }

      const thumbIndex = parseInt(this.dataset.thumbIndex);
      if (!isNaN(thumbIndex)) {
        showSlide(thumbIndex);
      }
    });
  });
  
  // Keyboard navigation
  document.addEventListener('keydown', function(e) {
    if (e.key === 'ArrowLeft') {
      prevSlide();
    } else if (e.key === 'ArrowRight') {
      nextSlide();
    }
  });
  
  // Touch/swipe and mouse drag support
  let touchStartX = 0;
  let touchEndX = 0;
  let mouseStartX = 0;
  let mouseEndX = 0;
  let isDragging = false;
  let isMouseDown = false;

  const mainContainer = section.querySelector('.factory-main-container-' + sectionId);
  if (mainContainer) {
    // Touch events
    mainContainer.addEventListener('touchstart', function(e) {
      touchStartX = e.changedTouches[0].screenX;
    }, { passive: true });

    mainContainer.addEventListener('touchend', function(e) {
      touchEndX = e.changedTouches[0].screenX;
      handleSwipe();
    }, { passive: true });

    // Mouse drag events
    mainContainer.addEventListener('mousedown', function(e) {
      isMouseDown = true;
      mouseStartX = e.clientX;
      mainContainer.style.cursor = 'grabbing';
      mainContainer.style.userSelect = 'none';
      e.preventDefault();
    });

    mainContainer.addEventListener('mousemove', function(e) {
      if (!isMouseDown) return;

      const currentX = e.clientX;
      const diff = Math.abs(currentX - mouseStartX);

      if (diff > 10) {
        isDragging = true;
      }
    });

    mainContainer.addEventListener('mouseup', function(e) {
      if (isMouseDown) {
        mouseEndX = e.clientX;
        mainContainer.style.cursor = 'grab';
        mainContainer.style.userSelect = '';

        if (isDragging) {
          handleMouseDrag();
        }

        isMouseDown = false;
        isDragging = false;
      }
    });

    mainContainer.addEventListener('mouseleave', function() {
      if (isMouseDown) {
        mainContainer.style.cursor = 'grab';
        mainContainer.style.userSelect = '';
        isMouseDown = false;
        isDragging = false;
      }
    });

    // Add grab cursor on hover
    mainContainer.addEventListener('mouseenter', function() {
      if (!isMouseDown) {
        mainContainer.style.cursor = 'grab';
      }
    });

    mainContainer.addEventListener('mouseleave', function() {
      if (!isMouseDown) {
        mainContainer.style.cursor = '';
      }
    });
  }

  function handleSwipe() {
    const swipeThreshold = 50;
    const diff = touchStartX - touchEndX;

    if (Math.abs(diff) > swipeThreshold) {
      if (diff > 0) {
        nextSlide();
      } else {
        prevSlide();
      }
    }
  }

  function handleMouseDrag() {
    const dragThreshold = 50;
    const diff = mouseStartX - mouseEndX;

    if (Math.abs(diff) > dragThreshold) {
      if (diff > 0) {
        nextSlide();
      } else {
        prevSlide();
      }
    }
  }
  
  // Pause videos when page visibility changes
  document.addEventListener('visibilitychange', function() {
    if (document.hidden) {
      pauseAllVideos();
    } else {
      // Force play videos when page becomes visible
      setTimeout(() => {
        forcePlayAllVideos();
        playCurrentVideo(currentSlideIndex);
      }, 100);
    }
  });

  // Add user interaction fallback for strict browsers
  let hasUserInteracted = false;
  const enableAutoplayAfterInteraction = () => {
    hasUserInteracted = true;
    forcePlayAllVideos();
    document.removeEventListener('click', enableAutoplayAfterInteraction);
    document.removeEventListener('touchstart', enableAutoplayAfterInteraction);
  };

  document.addEventListener('click', enableAutoplayAfterInteraction);
  document.addEventListener('touchstart', enableAutoplayAfterInteraction, { passive: true });

  // Add seamless looping support for videos
  function addVideoEventListeners() {
    const videos = section.querySelectorAll('.factory-video-' + sectionId);
    videos.forEach(video => {
      // Ensure seamless looping
      video.addEventListener('ended', function() {
        this.currentTime = 0;
        this.play().catch(err => {
          console.log('Loop restart failed:', err);
        });
      });

      // Force play when video loads
      video.addEventListener('loadeddata', function() {
        if (this.closest('.factory-slide-' + sectionId).classList.contains('active')) {
          this.play().catch(err => {
            console.log('Auto-play on load failed:', err);
          });
        }
      });

      // Retry play if video stalls
      video.addEventListener('stalled', function() {
        setTimeout(() => {
          if (this.paused && this.closest('.factory-slide-' + sectionId).classList.contains('active')) {
            this.play().catch(err => {
              console.log('Stall recovery failed:', err);
            });
          }
        }, 500);
      });

      // Handle buffer issues
      video.addEventListener('waiting', function() {
        // Video is buffering, try to continue after a short delay
        setTimeout(() => {
          if (this.readyState >= 2) { // HAVE_CURRENT_DATA
            this.play().catch(err => {
              console.log('Buffer recovery failed:', err);
            });
          }
        }, 200);
      });
    });
  }


  // Initialize
  buildCategoryMapping();
  addImageProtection();

  // Add video event listeners after DOM is ready
  setTimeout(() => {
    addVideoEventListeners();
  }, 100);

  // Intersection Observer for aggressive autoplay when section comes into view
  if ('IntersectionObserver' in window) {
    const sectionObserver = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          // Section is visible, force autoplay
          setTimeout(() => {
            forcePlayAllVideos();
            playCurrentVideo(currentSlideIndex);
          }, 100);
        }
      });
    }, {
      threshold: 0.1 // Trigger when 10% of section is visible
    });

    sectionObserver.observe(section);
  }

  // Set initial state - jump to PRODUCTION (team) category
  setTimeout(() => {
    jumpToCategory('team');
  }, 100);
  
  // Auto-play functionality (optional)
  {% if section.settings.autoplay %}
    let autoplayInterval;
    
    function startAutoplay() {
      autoplayInterval = setInterval(() => {
        nextSlide();
      }, {{ section.settings.autoplay_speed | times: 1000 }});
    }
    
    function stopAutoplay() {
      if (autoplayInterval) {
        clearInterval(autoplayInterval);
        autoplayInterval = null;
      }
    }
    
    // Start autoplay
    startAutoplay();
    
    // Pause on hover
    section.addEventListener('mouseenter', stopAutoplay);
    section.addEventListener('mouseleave', startAutoplay);
    
    // Pause on interaction
    section.addEventListener('click', function() {
      stopAutoplay();
      setTimeout(startAutoplay, 5000); // Restart after 5 seconds
    });
  {% endif %}
});
</script>

{% schema %}
{
  "name": "Know My Factory",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "header",
      "content": "Typography Sizes"
    },
    {
      "type": "range",
      "id": "item_title_size",
      "min": 1.2,
      "max": 3,
      "step": 0.1,
      "unit": "rem",
      "label": "Item Title Size",
      "default": 2.2
    },
    {
      "type": "range",
      "id": "description_text_size",
      "min": 0.8,
      "max": 1.6,
      "step": 0.1,
      "unit": "rem",
      "label": "Description Text Size",
      "default": 1.1
    },
    {
      "type": "range",
      "id": "details_title_size",
      "min": 0.8,
      "max": 1.8,
      "step": 0.1,
      "unit": "rem",
      "label": "Details Title Size",
      "default": 1.2
    },
    {
      "type": "range",
      "id": "details_text_size",
      "min": 0.8,
      "max": 1.4,
      "step": 0.1,
      "unit": "rem",
      "label": "Details Text Size",
      "default": 1
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Main Text Color",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Collection Filter"
    },
    {
      "type": "checkbox",
      "id": "show_collection_filter",
      "label": "Show collection type filter",
      "default": true,
      "info": "Allows filtering between Products, Factory, and Team"
    },
    {
      "type": "header",
      "content": "Display Options"
    },
    {
      "type": "checkbox",
      "id": "show_thumbnails",
      "label": "Show thumbnail navigation",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_navigation",
      "label": "Show arrow navigation",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "Auto-rotate slides",
      "default": false
    },
    {
      "type": "range",
      "id": "autoplay_speed",
      "min": 3,
      "max": 15,
      "step": 1,
      "unit": "s",
      "label": "Auto-rotate speed",
      "default": 8
    }
  ],
  "blocks": [
    {
      "type": "item",
      "name": "Factory Item",
      "limit": 20,
      "settings": [
        {
          "type": "select",
          "id": "collection_type",
          "label": "Collection Type",
          "options": [
            {
              "value": "products",
              "label": "Our Products"
            },
            {
              "value": "factory",
              "label": "Our Factory"
            },
            {
              "value": "team",
              "label": "Our Team"
            }
          ],
          "default": "factory"
        },
        {
          "type": "text",
          "id": "product_name",
          "label": "Item Name",
          "default": "Production Floor"
        },
        {
          "type": "richtext",
          "id": "product_description",
          "label": "Description",
          "default": "<p>State-of-the-art manufacturing facility with cutting-edge technology and quality control processes that ensure every product meets our exacting standards.</p>"
        },
        {
          "type": "richtext",
          "id": "details",
          "label": "Details",
          "default": "<p><strong>Capacity:</strong> 50,000+ pieces/month<br><strong>Equipment:</strong> Industrial sewing machines<br><strong>Quality:</strong> ISO 9001 certified<br><strong>Workforce:</strong> 150+ skilled professionals</p>"
        },
        {
          "type": "header",
          "content": "Images (up to 15)"
        },
        {
          "type": "image_picker",
          "id": "image_1",
          "label": "Image 1"
        },
        {
          "type": "image_picker",
          "id": "image_2",
          "label": "Image 2"
        },
        {
          "type": "image_picker",
          "id": "image_3",
          "label": "Image 3"
        },
        {
          "type": "image_picker",
          "id": "image_4",
          "label": "Image 4"
        },
        {
          "type": "image_picker",
          "id": "image_5",
          "label": "Image 5"
        },
        {
          "type": "image_picker",
          "id": "image_6",
          "label": "Image 6"
        },
        {
          "type": "image_picker",
          "id": "image_7",
          "label": "Image 7"
        },
        {
          "type": "image_picker",
          "id": "image_8",
          "label": "Image 8"
        },
        {
          "type": "image_picker",
          "id": "image_9",
          "label": "Image 9"
        },
        {
          "type": "image_picker",
          "id": "image_10",
          "label": "Image 10"
        },
        {
          "type": "image_picker",
          "id": "image_11",
          "label": "Image 11"
        },
        {
          "type": "image_picker",
          "id": "image_12",
          "label": "Image 12"
        },
        {
          "type": "image_picker",
          "id": "image_13",
          "label": "Image 13"
        },
        {
          "type": "image_picker",
          "id": "image_14",
          "label": "Image 14"
        },
        {
          "type": "image_picker",
          "id": "image_15",
          "label": "Image 15"
        },
        {
          "type": "header",
          "content": "Videos (up to 15)"
        },
        {
          "type": "video",
          "id": "video_1",
          "label": "Video 1"
        },
        {
          "type": "video",
          "id": "video_2",
          "label": "Video 2"
        },
        {
          "type": "video",
          "id": "video_3",
          "label": "Video 3"
        },
        {
          "type": "video",
          "id": "video_4",
          "label": "Video 4"
        },
        {
          "type": "video",
          "id": "video_5",
          "label": "Video 5"
        },
        {
          "type": "video",
          "id": "video_6",
          "label": "Video 6"
        },
        {
          "type": "video",
          "id": "video_7",
          "label": "Video 7"
        },
        {
          "type": "video",
          "id": "video_8",
          "label": "Video 8"
        },
        {
          "type": "video",
          "id": "video_9",
          "label": "Video 9"
        },
        {
          "type": "video",
          "id": "video_10",
          "label": "Video 10"
        },
        {
          "type": "video",
          "id": "video_11",
          "label": "Video 11"
        },
        {
          "type": "video",
          "id": "video_12",
          "label": "Video 12"
        },
        {
          "type": "video",
          "id": "video_13",
          "label": "Video 13"
        },
        {
          "type": "video",
          "id": "video_14",
          "label": "Video 14"
        },
        {
          "type": "video",
          "id": "video_15",
          "label": "Video 15"
        },
        {
          "type": "header",
          "content": "Video Settings"
        },
        {
          "type": "checkbox",
          "id": "video_autoplay",
          "label": "Auto-play videos",
          "default": true,
          "info": "Videos will play automatically when they come into view (always enabled for optimal experience)"
        },
        {
          "type": "checkbox",
          "id": "video_muted",
          "label": "Mute videos by default",
          "default": true,
          "info": "Videos will start muted (required for browser autoplay policies)"
        },
        {
          "type": "checkbox",
          "id": "video_loop",
          "label": "Loop videos",
          "default": true,
          "info": "Videos will repeat continuously in a seamless loop"
        },
        {
          "type": "checkbox",
          "id": "video_controls",
          "label": "Show video controls in lightbox",
          "default": false,
          "info": "Display video controls only in lightbox modal (main slides have no controls for seamless experience)"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Know My Factory",
      "blocks": [
        {
          "type": "item",
          "settings": {
            "collection_type": "factory",
            "product_name": "Advanced Equipment",
            "product_description": "<p>Automated cutting tables, precision sewing stations, and in-house finishing lines built for consistency at any scale.</p>",
            "details": "<p><strong>Certified Standards:</strong> ISO 9001 and SA8000 compliant with full traceability and social audits.<br><strong>Flexible Capacity:</strong> From prototypes to high-volume runs, our modular lines adapt to meet your deadlines.</p>"
          }
        },
        {
          "type": "item",
          "settings": {
            "collection_type": "factory",
            "product_name": "Expert Team",
            "product_description": "<p>Skilled technicians, pattern-makers, and quality inspectors working seamlessly together from cut to pack.</p>",
            "details": "<p><strong>Certified Standards:</strong> ISO 9001 and SA8000 compliant with full traceability and social audits.<br><strong>Flexible Capacity:</strong> From prototypes to high-volume runs, our modular lines adapt to meet your deadlines.</p>"
          }
        },
        {
          "type": "item",
          "settings": {
            "collection_type": "team",
            "product_name": "Leadership",
            "product_description": "<p>Strategic thinkers who align market insights with sustainable growth plans.</p>",
            "details": "<p><strong>Design & Development:</strong> Creative directors and technical designers who transform concepts into production-ready patterns.<br><strong>Quality Control:</strong> Dedicated QA engineers ensuring ethical production and flawless output.<br><strong>Your Partners:</strong> Account managers who keep you updated every step of the way.</p>"
          }
        },
        {
          "type": "item",
          "settings": {
            "collection_type": "products",
            "product_name": "Premium Materials",
            "product_description": "<p>Visit our showroom. Feel the difference in our organic cottons, recycled blends, and performance fabrics.</p>",
            "details": "<p><strong>Complete Production:</strong> Cut & sew, screen printing, embroidery, custom trims, labeling, and finishing. Flexible MOQs for any brand size.<br><strong>Quality Promise:</strong> Multi-stage quality checks and certified sustainable practices guarantee responsible craftsmanship.<br><strong>On-Time Delivery:</strong> Fast sampling, clear communication, and reliable global shipping.</p>"
          }
        }
      ]
    }
  ]
}
{% endschema %}